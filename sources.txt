0 | noop: 1 | out: printf(87);
2 | out: printf(101);
3 | out: printf(108);
4 | out: printf(99);
5 | out: printf(111);
6 | out: printf(109);
7 | out: printf(101);
8 | out: printf(32);
9 | out: printf(116);
10 | out: printf(111);
11 | out: printf(32);
12 | out: printf(116);
13 | out: printf(104);
14 | out: printf(101);
15 | out: printf(32);
16 | out: printf(83);
17 | out: printf(121);
18 | out: printf(110);
19 | out: printf(97);
20 | out: printf(99);
21 | out: printf(111);
22 | out: printf(114);
23 | out: printf(32);
24 | out: printf(67);
25 | out: printf(104);
26 | out: printf(97);
27 | out: printf(108);
28 | out: printf(108);
29 | out: printf(101);
30 | out: printf(110);
31 | out: printf(103);
32 | out: printf(101);
33 | out: printf(33);
34 | out: printf(10);
35 | out: printf(80);
36 | out: printf(108);
37 | out: printf(101);
38 | out: printf(97);
39 | out: printf(115);
40 | out: printf(101);
41 | out: printf(32);
42 | out: printf(114);
43 | out: printf(101);
44 | out: printf(99);
45 | out: printf(111);
46 | out: printf(114);
47 | out: printf(100);
48 | out: printf(32);
49 | out: printf(121);
50 | out: printf(111);
51 | out: printf(117);
52 | out: printf(114);
53 | out: printf(32);
54 | out: printf(112);
55 | out: printf(114);
56 | out: printf(111);
57 | out: printf(103);
58 | out: printf(114);
59 | out: printf(101);
60 | out: printf(115);
61 | out: printf(115);
62 | out: printf(32);
63 | out: printf(98);
64 | out: printf(121);
65 | out: printf(32);
66 | out: printf(112);
67 | out: printf(117);
68 | out: printf(116);
69 | out: printf(116);
70 | out: printf(105);
71 | out: printf(110);
72 | out: printf(103);
73 | out: printf(32);
74 | out: printf(99);
75 | out: printf(111);
76 | out: printf(100);
77 | out: printf(101);
78 | out: printf(115);
79 | out: printf(32);
80 | out: printf(108);
81 | out: printf(105);
82 | out: printf(107);
83 | out: printf(101);
84 | out: printf(10);
85 | out: printf(116);
86 | out: printf(104);
87 | out: printf(105);
88 | out: printf(115);
89 | out: printf(32);
90 | out: printf(111);
91 | out: printf(110);
92 | out: printf(101);
93 | out: printf(32);
94 | out: printf(105);
95 | out: printf(110);
96 | out: printf(116);
97 | out: printf(111);
98 | out: printf(32);
99 | out: printf(116);
100 | out: printf(104);
101 | out: printf(101);
102 | out: printf(32);
103 | out: printf(99);
104 | out: printf(104);
105 | out: printf(97);
106 | out: printf(108);
107 | out: printf(108);
108 | out: printf(101);
109 | out: printf(110);
110 | out: printf(103);
111 | out: printf(101);
112 | out: printf(32);
113 | out: printf(119);
114 | out: printf(101);
115 | out: printf(98);
116 | out: printf(115);
117 | out: printf(105);
118 | out: printf(116);
119 | out: printf(101);
120 | out: printf(58);
121 | out: printf(32);
122 | out: printf(113);
123 | out: printf(70);
124 | out: printf(116);
125 | out: printf(80);
126 | out: printf(105);
127 | out: printf(109);
128 | out: printf(115);
129 | out: printf(98);
130 | out: printf(110);
131 | out: printf(108);
132 | out: printf(89);
133 | out: printf(73);
134 | out: printf(10);
135 | out: printf(10);
136 | out: printf(69);
137 | out: printf(120);
138 | out: printf(101);
139 | out: printf(99);
140 | out: printf(117);
141 | out: printf(116);
142 | out: printf(105);
143 | out: printf(110);
144 | out: printf(103);
145 | out: printf(32);
146 | out: printf(115);
147 | out: printf(101);
148 | out: printf(108);
149 | out: printf(102);
150 | out: printf(45);
151 | out: printf(116);
152 | out: printf(101);
153 | out: printf(115);
154 | out: printf(116);
155 | out: printf(46);
156 | out: printf(46);
157 | out: printf(46);
158 | out: printf(10);
159 | out: printf(10);
160 | jmp: go to memory[347]
161 | out: printf(106);
162 | out: printf(109);
163 | out: printf(112);
164 | out: printf(32);
165 | out: printf(102);
166 | out: printf(97);
167 | out: printf(105);
168 | out: printf(108);
169 | out: printf(115);
170 | out: printf(10);
171 | halt: 
172 | noop: 173 | noop: 174 | noop: 175 | noop: 176 | noop: 177 | jmp: go to memory[368]
178 | jmp: go to memory[397]
179 | jmp: go to memory[484]
180 | jmp: go to memory[424]
181 | jmp: go to memory[453]
182 | noop: 183 | noop: 184 | out: printf(106);
185 | out: printf(109);
186 | out: printf(112);
187 | out: printf(32);
188 | out: printf(108);
189 | out: printf(97);
190 | out: printf(110);
191 | out: printf(100);
192 | out: printf(115);
193 | out: printf(32);
194 | out: printf(45);
195 | out: printf(50);
196 | out: printf(10);
197 | halt: 
198 | noop: 199 | out: printf(106);
200 | out: printf(109);
201 | out: printf(112);
202 | out: printf(32);
203 | out: printf(108);
204 | out: printf(97);
205 | out: printf(110);
206 | out: printf(100);
207 | out: printf(115);
208 | out: printf(32);
209 | out: printf(45);
210 | out: printf(49);
211 | out: printf(10);
212 | halt: 
213 | noop: 214 | out: printf(106);
215 | out: printf(109);
216 | out: printf(112);
217 | out: printf(32);
218 | out: printf(108);
219 | out: printf(97);
220 | out: printf(110);
221 | out: printf(100);
222 | out: printf(115);
223 | out: printf(32);
224 | out: printf(43);
225 | out: printf(49);
226 | out: printf(10);
227 | halt: 
228 | noop: 229 | noop: 230 | out: printf(106);
231 | out: printf(109);
232 | out: printf(112);
233 | out: printf(32);
234 | out: printf(108);
235 | out: printf(97);
236 | out: printf(110);
237 | out: printf(100);
238 | out: printf(115);
239 | out: printf(32);
240 | out: printf(43);
241 | out: printf(50);
242 | out: printf(10);
243 | halt: 
244 | jt: if (0 != 0 { go to memory[1074] }
245 | jt: if (1 == 0 { go to 1074 }
246 | jt: if (1 != 0 { go to memory[495] }
247 | jmp: go to memory[1074]
248 | jt: if (0 == 0 { go to 500 }
249 | jmp: go to memory[1074]
250 | jt: if (r0 != 0 { go to memory[1093] }
251 | jt: if (r1 != 0 { go to memory[1093] }
252 | jt: if (r2 != 0 { go to memory[1093] }
253 | jt: if (r3 != 0 { go to memory[1093] }
254 | jt: if (r4 != 0 { go to memory[1093] }
255 | jt: if (r5 != 0 { go to memory[1093] }
256 | jt: if (r6 != 0 { go to memory[1093] }
257 | jt: if (r7 != 0 { go to memory[1093] }
258 | set: r0 = 1
259 | jt: if (r0 == 0 { go to 1118 }
260 | set: r0 = 0
261 | jt: if (r0 != 0 { go to memory[1118] }
262 | add: r0 = 1 + 1
263 | jt: if (r0 != 0 { go to memory[564] }
264 | out: printf(110);
265 | out: printf(111);
266 | out: printf(32);
267 | out: printf(97);
268 | out: printf(100);
269 | out: printf(100);
270 | out: printf(32);
271 | out: printf(111);
272 | out: printf(112);
273 | out: printf(10);
274 | halt: 
275 | eq: if (r0 == 2) { r1 == 1 } else { r1 == 0 }
276 | out: printf(110);
277 | out: printf(111);
278 | out: printf(32);
279 | out: printf(101);
280 | out: printf(113);
281 | out: printf(32);
282 | out: printf(111);
283 | out: printf(112);
284 | out: printf(10);
285 | halt: 
286 | push: push(r0);
287 | push: push(r1);
288 | pop: r0 = pop();
289 | pop: r1 = pop();
290 | eq: if (r1 == 2) { r2 == 1 } else { r2 == 0 }
291 | eq: if (r0 == 1) { r2 == 1 } else { r2 == 0 }
292 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
293 | gt: if (r0 > r1) { r2 == 1 } else { r2 == 0 }
294 | gt: if (42 > 42) { r2 == 1 } else { r2 == 0 }
295 | and: r0 = 28912 and 19626
296 | eq: if (r0 == 16544) { r1 == 1 } else { r1 == 0 }
297 | or: r1 = 28912 or 19626
298 | eq: if (r1 == 31994) { r0 == 1 } else { r0 == 0 }
299 | out: printf(110);
300 | out: printf(111);
301 | out: printf(32);
302 | out: printf(98);
303 | out: printf(105);
304 | out: printf(116);
305 | out: printf(119);
306 | out: printf(105);
307 | out: printf(115);
308 | out: printf(101);
309 | out: printf(32);
310 | out: printf(111);
311 | out: printf(114);
312 | out: printf(10);
313 | halt: 
314 | not: r0 = ~0
315 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
316 | not: r0 = ~21845
317 | eq: if (r0 == 10922) { r1 == 1 } else { r1 == 0 }
318 | call: push(706); go to memory[1285]
319 | jmp: go to memory[1289]
320 | pop: r0 = pop();
321 | eq: if (r0 == 708) { r1 == 1 } else { r1 == 0 }
322 | eq: if (r0 == 706) { r1 == 1 } else { r1 == 0 }
323 | set: r0 = 1287
324 | call: push(729); go to memory[r0]
325 | jmp: go to memory[1289]
326 | pop: r0 = pop();
327 | eq: if (r0 == 731) { r1 == 1 } else { r1 == 0 }
328 | eq: if (r0 == 729) { r1 == 1 } else { r1 == 0 }
329 | add: r0 = 32767 + 32767
330 | eq: if (r0 == 32766) { r1 == 1 } else { r1 == 0 }
331 | eq: if (32766 == r0) { r1 == 1 } else { r1 == 0 }
332 | add: r0 = 16384 + 16384
333 | jt: if (r0 != 0 { go to memory[1312] }
334 | add: r0 = 16384 + 16384
335 | jt: if (r0 != 0 { go to memory[1312] }
336 | mult: r0 = 6 * 9
337 | eq: if (r0 == 42) { r1 == 1 } else { r1 == 0 }
338 | eq: if (r0 == 54) { r1 == 1 } else { r1 == 0 }
339 | mult: r0 = 12345 * 32123
340 | eq: if (r0 == 99) { r1 == 1 } else { r1 == 0 }
341 | mod: r0 = 6 % 3
342 | eq: if (r0 == 0) { r1 == 1 } else { r1 == 0 }
343 | mod: r0 = 70 % 6
344 | eq: if (r0 == 4) { r1 == 1 } else { r1 == 0 }
345 | mult: r0 = 32766 * 15
346 | eq: if (r0 == 32738) { r1 == 1 } else { r1 == 0 }
347 | jmp: go to memory[845]
348 | rmem: r0 = memory[843]
349 | eq: if (r0 == 20000) { r1 == 1 } else { r1 == 0 }
350 | add: r2 = 843 + 1
351 | rmem: r0 = memory[r2]
352 | eq: if (r0 == 10000) { r1 == 1 } else { r1 == 0 }
353 | set: r0 = 843
354 | wmem: memory[r0] = 30000
355 | rmem: r2 = memory[r0]
356 | eq: if (r2 == 30000) { r1 == 1 } else { r1 == 0 }
357 | call: push(887); go to memory[1723]
358 | rmem: r0 = memory[6068]
359 | eq: if (r0 == 11) { r1 == 1 } else { r1 == 0 }
360 | add: r2 = 6068 + 1
361 | rmem: r0 = memory[r2]
362 | eq: if (r0 == 116) { r1 == 1 } else { r1 == 0 }
363 | wmem: memory[r2] = 84
364 | rmem: r0 = memory[r2]
365 | eq: if (r0 == 116) { r1 == 1 } else { r1 == 0 }
366 | eq: if (r0 == 84) { r1 == 1 } else { r1 == 0 }
367 | wmem: memory[937] = 21
368 | wmem: memory[938] = 7
369 | noop: 370 | out: printf(978);
371 | out: printf(119);
372 | out: printf(109);
373 | out: printf(101);
374 | out: printf(109);
375 | out: printf(32);
376 | out: printf(111);
377 | out: printf(112);
378 | out: printf(119);
379 | out: printf(114);
380 | out: printf(105);
381 | out: printf(116);
382 | out: printf(101);
383 | out: printf(32);
384 | out: printf(102);
385 | out: printf(97);
386 | out: printf(105);
387 | out: printf(108);
388 | out: printf(10);
389 | halt: 
390 | add: r1 = 10 + 6080
391 | add: r1 = r1 + 1
392 | rmem: r2 = memory[6116]
393 | add: r2 = r2 + 6116
394 | set: r0 = 6116
395 | add: r0 = r0 + 1
396 | gt: if (r0 > r2) { r3 == 1 } else { r3 == 0 }
397 | rmem: r4 = memory[r0]
398 | wmem: memory[r1] = r4
399 | add: r0 = r0 + 1
400 | add: r1 = r1 + 1
401 | jmp: go to memory[1000]
402 | rmem: r0 = memory[6080]
403 | rmem: r1 = memory[6099]
404 | add: r0 = r0 + r1
405 | add: r0 = r0 + 1
406 | wmem: memory[6080] = r0
407 | wmem: memory[6099] = 44
408 | set: r0 = 6080
409 | call: push(1048); go to memory[1518]
410 | push: push(r0);
411 | push: push(r1);
412 | push: push(r2);
413 | set: r0 = 26851
414 | set: r1 = 1531
415 | add: r2 = 7511 + 159
416 | call: push(1066); go to memory[1458]
417 | pop: r2 = pop();
418 | pop: r1 = pop();
419 | pop: r0 = pop();
420 | jmp: go to memory[2734]
421 | out: printf(110);
422 | out: printf(111);
423 | out: printf(32);
424 | out: printf(106);
425 | out: printf(116);
426 | out: printf(47);
427 | out: printf(106);
428 | out: printf(102);
429 | out: printf(10);
430 | halt: 
431 | out: printf(110);
432 | out: printf(111);
433 | out: printf(110);
434 | out: printf(122);
435 | out: printf(101);
436 | out: printf(114);
437 | out: printf(111);
438 | out: printf(32);
439 | out: printf(114);
440 | out: printf(101);
441 | out: printf(103);
442 | out: printf(10);
443 | halt: 
444 | out: printf(110);
445 | out: printf(111);
446 | out: printf(32);
447 | out: printf(115);
448 | out: printf(101);
449 | out: printf(116);
450 | out: printf(32);
451 | out: printf(111);
452 | out: printf(112);
453 | out: printf(10);
454 | halt: 
455 | out: printf(110);
456 | out: printf(111);
457 | out: printf(32);
458 | out: printf(103);
459 | out: printf(116);
460 | out: printf(32);
461 | out: printf(111);
462 | out: printf(112);
463 | out: printf(10);
464 | halt: 
465 | out: printf(110);
466 | out: printf(111);
467 | out: printf(32);
468 | out: printf(115);
469 | out: printf(116);
470 | out: printf(97);
471 | out: printf(99);
472 | out: printf(107);
473 | out: printf(10);
474 | halt: 
475 | out: printf(110);
476 | out: printf(111);
477 | out: printf(32);
478 | out: printf(98);
479 | out: printf(105);
480 | out: printf(116);
481 | out: printf(119);
482 | out: printf(105);
483 | out: printf(115);
484 | out: printf(101);
485 | out: printf(32);
486 | out: printf(97);
487 | out: printf(110);
488 | out: printf(100);
489 | out: printf(10);
490 | halt: 
491 | out: printf(110);
492 | out: printf(111);
493 | out: printf(32);
494 | out: printf(98);
495 | out: printf(105);
496 | out: printf(116);
497 | out: printf(119);
498 | out: printf(105);
499 | out: printf(115);
500 | out: printf(101);
501 | out: printf(32);
502 | out: printf(110);
503 | out: printf(111);
504 | out: printf(116);
505 | out: printf(10);
506 | halt: 
507 | out: printf(110);
508 | out: printf(111);
509 | out: printf(32);
510 | out: printf(114);
511 | out: printf(109);
512 | out: printf(101);
513 | out: printf(109);
514 | out: printf(32);
515 | out: printf(111);
516 | out: printf(112);
517 | out: printf(10);
518 | halt: 
519 | out: printf(110);
520 | out: printf(111);
521 | out: printf(32);
522 | out: printf(119);
523 | out: printf(109);
524 | out: printf(101);
525 | out: printf(109);
526 | out: printf(32);
527 | out: printf(111);
528 | out: printf(112);
529 | out: printf(10);
530 | halt: 
531 | jmp: go to memory[708]
532 | jmp: go to memory[731]
533 | out: printf(110);
534 | out: printf(111);
535 | out: printf(32);
536 | out: printf(99);
537 | out: printf(97);
538 | out: printf(108);
539 | out: printf(108);
540 | out: printf(32);
541 | out: printf(111);
542 | out: printf(112);
543 | out: printf(10);
544 | halt: 
545 | out: printf(110);
546 | out: printf(111);
547 | out: printf(32);
548 | out: printf(109);
549 | out: printf(111);
550 | out: printf(100);
551 | out: printf(117);
552 | out: printf(108);
553 | out: printf(111);
554 | out: printf(32);
555 | out: printf(109);
556 | out: printf(97);
557 | out: printf(116);
558 | out: printf(104);
559 | out: printf(32);
560 | out: printf(100);
561 | out: printf(117);
562 | out: printf(114);
563 | out: printf(105);
564 | out: printf(110);
565 | out: printf(103);
566 | out: printf(32);
567 | out: printf(97);
568 | out: printf(100);
569 | out: printf(100);
570 | out: printf(32);
571 | out: printf(111);
572 | out: printf(114);
573 | out: printf(32);
574 | out: printf(109);
575 | out: printf(117);
576 | out: printf(108);
577 | out: printf(116);
578 | out: printf(10);
579 | halt: 
580 | out: printf(110);
581 | out: printf(111);
582 | out: printf(116);
583 | out: printf(32);
584 | out: printf(104);
585 | out: printf(105);
586 | out: printf(116);
587 | out: printf(99);
588 | out: printf(104);
589 | out: printf(104);
590 | out: printf(105);
591 | out: printf(107);
592 | out: printf(105);
593 | out: printf(110);
594 | out: printf(103);
595 | out: printf(10);
596 | halt: 
597 | out: printf(110);
598 | out: printf(111);
599 | out: printf(32);
600 | out: printf(109);
601 | out: printf(117);
602 | out: printf(108);
603 | out: printf(116);
604 | out: printf(32);
605 | out: printf(111);
606 | out: printf(112);
607 | out: printf(10);
608 | halt: 
609 | out: printf(110);
610 | out: printf(111);
611 | out: printf(32);
612 | out: printf(109);
613 | out: printf(111);
614 | out: printf(100);
615 | out: printf(32);
616 | out: printf(111);
617 | out: printf(112);
618 | out: printf(10);
619 | halt: 
620 | push: push(r0);
621 | push: push(r3);
622 | push: push(r4);
623 | push: push(r5);
624 | push: push(r6);
625 | set: r6 = r0
626 | set: r5 = r1
627 | rmem: r4 = memory[r0]
628 | set: r1 = 0
629 | add: r3 = 1 + r1
630 | gt: if (r3 > r4) { r0 == 1 } else { r0 == 0 }
631 | add: r3 = r3 + r6
632 | rmem: r0 = memory[r3]
633 | call: push(1500); go to memory[r5]
634 | add: r1 = r1 + 1
635 | jt: if (r1 != 0 { go to memory[1480] }
636 | pop: r6 = pop();
637 | pop: r5 = pop();
638 | pop: r4 = pop();
639 | pop: r3 = pop();
640 | pop: r0 = pop();
641 | ret: go to memory[pop()];
642 | push: push(r1);
643 | set: r1 = 1528
644 | call: push(1525); go to memory[1458]
645 | pop: r1 = pop();
646 | ret: go to memory[pop()];
647 | out: printf(r0);
648 | ret: go to memory[pop()];
649 | push: push(r1);
650 | set: r1 = r2
651 | call: push(1538); go to memory[2125]
652 | out: printf(r0);
653 | pop: r1 = pop();
654 | ret: go to memory[pop()];
655 | push: push(r1);
656 | push: push(r3);
657 | rmem: r3 = memory[r0]
658 | jt: if (r3 == 0 { go to 1563 }
659 | call: push(1555); go to memory[1458]
660 | jt: if (r1 != 0 { go to memory[1563] }
661 | set: r0 = r2
662 | jmp: go to memory[1566]
663 | set: r0 = 32767
664 | pop: r3 = pop();
665 | pop: r1 = pop();
666 | ret: go to memory[pop()];
667 | push: push(r1);
668 | push: push(r2);
669 | set: r2 = r1
670 | set: r1 = 1605
671 | call: push(1583); go to memory[1543]
672 | pop: r2 = pop();
673 | pop: r1 = pop();
674 | ret: go to memory[pop()];
675 | push: push(r1);
676 | push: push(r2);
677 | set: r2 = r1
678 | set: r1 = 1648
679 | call: push(1600); go to memory[1543]
680 | pop: r2 = pop();
681 | pop: r1 = pop();
682 | ret: go to memory[pop()];
683 | eq: if (r0 == r2) { r0 == 1 } else { r0 == 0 }
684 | set: r2 = r1
685 | set: r1 = 32767
686 | ret: go to memory[pop()];
687 | push: push(r3);
688 | add: r3 = r2 + 1
689 | add: r3 = r3 + r1
690 | rmem: r3 = memory[r3]
691 | eq: if (r0 == r3) { r3 == 1 } else { r3 == 0 }
692 | set: r2 = r1
693 | set: r1 = 32767
694 | pop: r3 = pop();
695 | ret: go to memory[pop()];
696 | push: push(r1);
697 | set: r1 = r2
698 | call: push(1655); go to memory[1667]
699 | pop: r1 = pop();
700 | jt: if (r0 == 0 { go to 1666 }
701 | set: r2 = r1
702 | set: r1 = 32767
703 | ret: go to memory[pop()];
704 | push: push(r1);
705 | push: push(r2);
706 | push: push(r3);
707 | push: push(r4);
708 | rmem: r3 = memory[r0]
709 | rmem: r4 = memory[r1]
710 | eq: if (r3 == r4) { r2 == 1 } else { r2 == 0 }
711 | or: r2 = r3 or r4
712 | jt: if (r2 == 0 { go to 1706 }
713 | set: r2 = r1
714 | set: r1 = 1619
715 | call: push(1703); go to memory[1458]
716 | jt: if (r1 == 0 { go to 1711 }
717 | set: r0 = 1
718 | jmp: go to memory[1714]
719 | set: r0 = 0
720 | pop: r4 = pop();
721 | pop: r3 = pop();
722 | pop: r2 = pop();
723 | pop: r1 = pop();
724 | ret: go to memory[pop()];
725 | push: push(r0);
726 | push: push(r1);
727 | set: r1 = 6068
728 | rmem: r0 = memory[r1]
729 | push: push(r1);
730 | mult: r1 = r1 * r1
731 | call: push(1741); go to memory[2125]
732 | set: r1 = 16724
733 | call: push(1746); go to memory[2125]
734 | pop: r1 = pop();
735 | wmem: memory[r1] = r0
736 | add: r1 = r1 + 1
737 | eq: if (30050 == r1) { r0 == 1 } else { r0 == 0 }
738 | pop: r1 = pop();
739 | pop: r0 = pop();
740 | ret: go to memory[pop()];
741 | push: push(r0);
742 | push: push(r2);
743 | push: push(r3);
744 | push: push(r4);
745 | push: push(r5);
746 | add: r2 = r1 + r0
747 | set: r0 = r1
748 | set: r5 = 0
749 | add: r0 = r0 + 1
750 | gt: if (r0 > r2) { r3 == 1 } else { r3 == 0 }
751 | in: r4 = getchar();
752 | eq: if (r4 == 10) { r3 == 1 } else { r3 == 0 }
753 | wmem: memory[r0] = r4
754 | add: r5 = r5 + 1
755 | jmp: go to memory[1787]
756 | wmem: memory[r1] = r5
757 | eq: if (r4 == 10) { r3 == 1 } else { r3 == 0 }
758 | in: r4 = getchar();
759 | jmp: go to memory[1819]
760 | pop: r5 = pop();
761 | pop: r4 = pop();
762 | pop: r3 = pop();
763 | pop: r2 = pop();
764 | pop: r0 = pop();
765 | ret: go to memory[pop()];
766 | push: push(r3);
767 | push: push(r4);
768 | push: push(r5);
769 | push: push(r6);
770 | set: r6 = 1
771 | add: r4 = r3 + r6
772 | rmem: r4 = memory[r4]
773 | add: r5 = 6125 + r6
774 | wmem: memory[r5] = r4
775 | add: r6 = r6 + 1
776 | rmem: r5 = memory[6125]
777 | gt: if (r6 > r5) { r4 == 1 } else { r4 == 0 }
778 | set: r3 = 0
779 | set: r4 = 0
780 | rmem: r5 = memory[6125]
781 | mod: r5 = r4 % r5
782 | add: r5 = r5 + 6125
783 | add: r5 = r5 + 1
784 | rmem: r6 = memory[r5]
785 | mult: r6 = r6 * 5249
786 | add: r6 = r6 + 12345
787 | wmem: memory[r5] = r6
788 | push: push(r0);
789 | push: push(r1);
790 | set: r1 = r6
791 | call: push(1924); go to memory[2125]
792 | set: r6 = r0
793 | pop: r1 = pop();
794 | pop: r0 = pop();
795 | rmem: r5 = memory[r1]
796 | mod: r6 = r6 % r5
797 | add: r6 = r6 + 1
798 | gt: if (r6 > r2) { r5 == 1 } else { r5 == 0 }
799 | set: r3 = 1
800 | add: r6 = r6 + r1
801 | rmem: r6 = memory[r6]
802 | add: r4 = r4 + 1
803 | add: r5 = r4 + 6129
804 | wmem: memory[r5] = r6
805 | rmem: r5 = memory[6129]
806 | eq: if (r4 == r5) { r5 == 1 } else { r5 == 0 }
807 | jt: if (r3 == 0 { go to 1880 }
808 | push: push(r0);
809 | set: r0 = 6129
810 | call: push(1990); go to memory[1518]
811 | pop: r0 = pop();
812 | pop: r6 = pop();
813 | pop: r5 = pop();
814 | pop: r4 = pop();
815 | pop: r3 = pop();
816 | ret: go to memory[pop()];
817 | push: push(r0);
818 | push: push(r1);
819 | push: push(r2);
820 | push: push(r3);
821 | push: push(r4);
822 | push: push(r5);
823 | set: r2 = 1
824 | set: r5 = 0
825 | jt: if (r0 == 0 { go to 2092 }
826 | eq: if (r2 == 10000) { r4 == 1 } else { r4 == 0 }
827 | jt: if (r4 != 0 { go to memory[2040] }
828 | mult: r1 = r2 * 10
829 | mod: r3 = r0 % r1
830 | set: r4 = 0
831 | mult: r2 = r2 * 32767
832 | jt: if (r3 == 0 { go to 2060 }
833 | add: r4 = r4 + 1
834 | add: r3 = r3 + r2
835 | jmp: go to memory[2047]
836 | mult: r2 = r2 * 32767
837 | mult: r3 = r4 * r2
838 | mult: r3 = r3 * 32767
839 | add: r0 = r0 + r3
840 | add: r4 = r4 + 48
841 | mult: r2 = r2 * 10
842 | add: r5 = r5 + 1
843 | push: push(r4);
844 | jmp: go to memory[2019]
845 | jt: if (r5 != 0 { go to memory[2099] }
846 | out: printf(48);
847 | jmp: go to memory[2112]
848 | jt: if (r5 == 0 { go to 2112 }
849 | pop: r0 = pop();
850 | out: printf(r0);
851 | add: r5 = r5 + 32767
852 | jmp: go to memory[2099]
853 | pop: r5 = pop();
854 | pop: r4 = pop();
855 | pop: r3 = pop();
856 | pop: r2 = pop();
857 | pop: r1 = pop();
858 | pop: r0 = pop();
859 | ret: go to memory[pop()];
860 | push: push(r1);
861 | push: push(r2);
862 | and: r2 = r0 and r1
863 | not: r2 = ~r2
864 | or: r0 = r0 or r1
865 | and: r0 = r0 and r2
866 | pop: r2 = pop();
867 | pop: r1 = pop();
868 | ret: go to memory[pop()];
869 | add: r0 = r0 + r1
870 | gt: if (r1 > r0) { r1 == 1 } else { r1 == 0 }
871 | push: push(r2);
872 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
873 | add: r0 = r0 + r1
874 | set: r1 = r2
875 | pop: r2 = pop();
876 | ret: go to memory[pop()];
877 | jt: if (r0 == 0 { go to 2241 }
878 | jt: if (r1 == 0 { go to 2241 }
879 | push: push(r2);
880 | push: push(r3);
881 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
882 | set: r2 = r0
883 | set: r0 = r1
884 | set: r1 = r2
885 | set: r2 = r0
886 | set: r0 = 0
887 | add: r0 = r0 + r1
888 | gt: if (r1 > r0) { r3 == 1 } else { r3 == 0 }
889 | add: r2 = r2 + 32767
890 | jt: if (r2 != 0 { go to memory[2210] }
891 | set: r1 = 0
892 | jmp: go to memory[2236]
893 | set: r1 = 1
894 | pop: r3 = pop();
895 | pop: r2 = pop();
896 | ret: go to memory[pop()];
897 | set: r0 = 0
898 | set: r1 = 0
899 | ret: go to memory[pop()];
900 | push: push(r1);
901 | push: push(r2);
902 | jt: if (r1 == 0 { go to 2276 }
903 | add: r1 = r1 + 32767
904 | and: r2 = r0 and 16384
905 | mult: r0 = r0 * 2
906 | jt: if (r2 == 0 { go to 2252 }
907 | or: r0 = r0 or 1
908 | jmp: go to memory[2252]
909 | pop: r2 = pop();
910 | pop: r1 = pop();
911 | ret: go to memory[pop()];
912 | push: push(r1);
913 | gt: if (r0 > 14) { r1 == 1 } else { r1 == 0 }
914 | set: r1 = r0
915 | set: r0 = 1
916 | jt: if (r1 == 0 { go to 2312 }
917 | add: r1 = r1 + 32767
918 | mult: r0 = r0 * 2
919 | jmp: go to memory[2296]
920 | set: r0 = 32767
921 | pop: r1 = pop();
922 | ret: go to memory[pop()];
923 | jmp: go to memory[2734]
924 | halt: 
925 | halt: 
926 | halt: 
927 | halt: 
928 | halt: 
929 | halt: 
930 | halt: 
931 | halt: 
932 | halt: 
933 | halt: 
934 | halt: 
935 | halt: 
936 | halt: 
937 | halt: 
938 | halt: 
939 | halt: 
940 | halt: 
941 | halt: 
942 | halt: 
943 | halt: 
944 | halt: 
945 | halt: 
946 | halt: 
947 | halt: 
948 | halt: 
949 | halt: 
950 | halt: 
951 | halt: 
952 | halt: 
953 | halt: 
954 | halt: 
955 | halt: 
956 | halt: 
957 | halt: 
958 | halt: 
959 | halt: 
960 | halt: 
961 | halt: 
962 | halt: 
963 | halt: 
964 | halt: 
965 | halt: 
966 | halt: 
967 | push: push(r0);
968 | push: push(r1);
969 | push: push(r2);
970 | push: push(r3);
971 | rmem: r1 = memory[2732]
972 | rmem: r0 = memory[2733]
973 | eq: if (r0 == r1) { r0 == 1 } else { r0 == 0 }
974 | rmem: r0 = memory[2732]
975 | add: r0 = r0 + 4
976 | rmem: r0 = memory[r0]
977 | jt: if (r0 == 0 { go to 2770 }
978 | call: push(2770); go to memory[r0]
979 | rmem: r1 = memory[2732]
980 | rmem: r0 = memory[2733]
981 | eq: if (r0 == r1) { r0 == 1 } else { r0 == 0 }
982 | set: r0 = 25974
983 | wmem: memory[r0] = 0
984 | call: push(2791); go to memory[2964]
985 | wmem: memory[2733] = r1
986 | push: push(r0);
987 | push: push(r1);
988 | push: push(r2);
989 | set: r0 = 27414
990 | set: r1 = 1531
991 | add: r2 = 961 + 12837
992 | call: push(2812); go to memory[1458]
993 | pop: r2 = pop();
994 | pop: r1 = pop();
995 | pop: r0 = pop();
996 | set: r0 = 32
997 | set: r1 = 25974
998 | call: push(2826); go to memory[1767]
999 | out: printf(10);
1000 | out: printf(10);
1001 | set: r0 = 25974
1002 | set: r1 = 32
1003 | call: push(2838); go to memory[1571]
1004 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
1005 | rmem: r0 = memory[25974]
1006 | set: r2 = r0
1007 | rmem: r1 = memory[25974]
1008 | push: push(r1);
1009 | wmem: memory[25974] = r2
1010 | set: r0 = 27398
1011 | set: r1 = 25974
1012 | call: push(2867); go to memory[1588]
1013 | pop: r1 = pop();
1014 | wmem: memory[25974] = r1
1015 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
1016 | set: r0 = 0
1017 | set: r2 = 0
1018 | add: r1 = 27406 + 1
1019 | add: r1 = r1 + r0
1020 | rmem: r1 = memory[r1]
1021 | rmem: r3 = memory[25974]
1022 | eq: if (r3 == r2) { r3 == 1 } else { r3 == 0 }
1023 | mult: r0 = r2 * 32767
1024 | rmem: r3 = memory[25974]
1025 | add: r3 = r0 + r3
1026 | jt: if (r2 == 0 { go to 2924 }
1027 | add: r3 = r3 + 32767
1028 | mod: r3 = r3 % 32
1029 | add: r0 = 25974 + r2
1030 | jt: if (r2 == 0 { go to 2939 }
1031 | add: r0 = r0 + 1
1032 | wmem: memory[r0] = r3
1033 | jmp: go to memory[2950]
1034 | set: r0 = 25974
1035 | wmem: memory[r0] = 0
1036 | call: push(2952); go to memory[r1]
1037 | jt: if (r1 != 0 { go to memory[2742] }
1038 | pop: r3 = pop();
1039 | pop: r2 = pop();
1040 | pop: r1 = pop();
1041 | pop: r0 = pop();
1042 | ret: go to memory[pop()];
1043 | push: push(r0);
1044 | push: push(r1);
1045 | push: push(r2);
1046 | rmem: r1 = memory[r0]
1047 | jt: if (r1 == 0 { go to 3032 }
1048 | call: push(2978); go to memory[5921]
1049 | jt: if (r0 == 0 { go to 3006 }
1050 | push: push(r0);
1051 | call: push(2985); go to memory[5990]
1052 | set: r1 = r0
1053 | pop: r0 = pop();
1054 | jt: if (r1 == 0 { go to 3006 }
1055 | add: r1 = r0 + 1
1056 | rmem: r0 = memory[r1]
1057 | call: push(3002); go to memory[1518]
1058 | out: printf(10);
1059 | jmp: go to memory[3238]
1060 | push: push(r0);
1061 | push: push(r1);
1062 | push: push(r2);
1063 | set: r0 = 27432
1064 | set: r1 = 1531
1065 | add: r2 = 1808 + 735
1066 | call: push(3024); go to memory[1458]
1067 | pop: r2 = pop();
1068 | pop: r1 = pop();
1069 | pop: r0 = pop();
1070 | jmp: go to memory[3238]
1071 | rmem: r0 = memory[2732]
1072 | push: push(r0);
1073 | out: printf(61);
1074 | out: printf(61);
1075 | out: printf(32);
1076 | add: r0 = r0 + 0
1077 | rmem: r0 = memory[r0]
1078 | call: push(3052); go to memory[1518]
1079 | out: printf(32);
1080 | out: printf(61);
1081 | out: printf(61);
1082 | out: printf(10);
1083 | pop: r0 = pop();
1084 | push: push(r0);
1085 | add: r0 = r0 + 1
1086 | rmem: r0 = memory[r0]
1087 | rmem: r1 = memory[r0]
1088 | eq: if (r1 == 2) { r1 == 1 } else { r1 == 0 }
1089 | push: push(r0);
1090 | set: r0 = 2680
1091 | call: push(3088); go to memory[5990]
1092 | set: r1 = r0
1093 | pop: r0 = pop();
1094 | add: r0 = r0 + 1
1095 | add: r0 = r0 + r1
1096 | rmem: r0 = memory[r0]
1097 | call: push(3106); go to memory[1518]
1098 | out: printf(10);
1099 | pop: r0 = pop();
1100 | push: push(r0);
1101 | call: push(3114); go to memory[5823]
1102 | jt: if (r0 == 0 { go to 3146 }
1103 | push: push(r0);
1104 | push: push(r1);
1105 | push: push(r2);
1106 | set: r0 = 27455
1107 | set: r1 = 1531
1108 | add: r2 = 11048 + 15296
1109 | call: push(3135); go to memory[1458]
1110 | pop: r2 = pop();
1111 | pop: r1 = pop();
1112 | pop: r0 = pop();
1113 | rmem: r2 = memory[2732]
1114 | call: push(3146); go to memory[5876]
1115 | pop: r0 = pop();
1116 | push: push(r0);
1117 | add: r0 = r0 + 2
1118 | rmem: r0 = memory[r0]
1119 | rmem: r0 = memory[r0]
1120 | eq: if (r0 == 1) { r2 == 1 } else { r2 == 0 }
1121 | mult: 19 = 84 * 19
1122 | out: printf(101);
1123 | out: printf(114);
1124 | out: printf(101);
1125 | out: printf(32);
1126 | jt: if (r2 != 0 { go to memory[3189] }
1127 | out: printf(97);
1128 | out: printf(114);
1129 | out: printf(101);
1130 | jmp: go to memory[3193]
1131 | out: printf(105);
1132 | out: printf(115);
1133 | out: printf(32);
1134 | call: push(3197); go to memory[2001]
1135 | out: printf(32);
1136 | out: printf(101);
1137 | out: printf(120);
1138 | out: printf(105);
1139 | out: printf(116);
1140 | eq: if (r0 == 1) { r2 == 1 } else { r2 == 0 }
1141 | out: printf(115);
1142 | out: printf(58);
1143 | out: printf(10);
1144 | pop: r0 = pop();
1145 | push: push(r0);
1146 | add: r0 = r0 + 2
1147 | rmem: r0 = memory[r0]
1148 | set: r1 = 5814
1149 | call: push(3236); go to memory[1458]
1150 | pop: r0 = pop();
1151 | pop: r2 = pop();
1152 | pop: r1 = pop();
1153 | pop: r0 = pop();
1154 | ret: go to memory[pop()];
1155 | push: push(r0);
1156 | push: push(r1);
1157 | push: push(r2);
1158 | set: r1 = r0
1159 | rmem: r0 = memory[2732]
1160 | add: r0 = r0 + 2
1161 | rmem: r0 = memory[r0]
1162 | call: push(3266); go to memory[1588]
1163 | eq: if (r0 == 32767) { r2 == 1 } else { r2 == 0 }
1164 | rmem: r2 = memory[2732]
1165 | add: r2 = r2 + 3
1166 | rmem: r2 = memory[r2]
1167 | add: r2 = r2 + 1
1168 | add: r2 = r2 + r0
1169 | rmem: r2 = memory[r2]
1170 | wmem: memory[2732] = r2
1171 | wmem: memory[2733] = 0
1172 | jmp: go to memory[3326]
1173 | push: push(r0);
1174 | push: push(r1);
1175 | push: push(r2);
1176 | set: r0 = 27482
1177 | set: r1 = 1531
1178 | add: r2 = 3414 + 19101
1179 | call: push(3320); go to memory[1458]
1180 | pop: r2 = pop();
1181 | pop: r1 = pop();
1182 | pop: r0 = pop();
1183 | pop: r2 = pop();
1184 | pop: r1 = pop();
1185 | pop: r0 = pop();
1186 | ret: go to memory[pop()];
1187 | push: push(r0);
1188 | push: push(r0);
1189 | push: push(r1);
1190 | push: push(r2);
1191 | set: r0 = 27532
1192 | set: r1 = 1531
1193 | add: r2 = 24913 + 1440
1194 | call: push(3353); go to memory[1458]
1195 | pop: r2 = pop();
1196 | pop: r1 = pop();
1197 | pop: r0 = pop();
1198 | pop: r0 = pop();
1199 | ret: go to memory[pop()];
1200 | push: push(r0);
1201 | push: push(r2);
1202 | push: push(r0);
1203 | push: push(r1);
1204 | push: push(r2);
1205 | set: r0 = 28037
1206 | set: r1 = 1531
1207 | add: r2 = 1736 + 4775
1208 | call: push(3384); go to memory[1458]
1209 | pop: r2 = pop();
1210 | pop: r1 = pop();
1211 | pop: r0 = pop();
1212 | set: r2 = 0
1213 | call: push(3395); go to memory[5876]
1214 | pop: r2 = pop();
1215 | pop: r0 = pop();
1216 | ret: go to memory[pop()];
1217 | push: push(r0);
1218 | push: push(r1);
1219 | push: push(r2);
1220 | call: push(3408); go to memory[5921]
1221 | jt: if (r0 == 0 { go to 3457 }
1222 | add: r1 = r0 + 2
1223 | rmem: r0 = memory[r1]
1224 | rmem: r2 = memory[2732]
1225 | eq: if (r0 == r2) { r2 == 1 } else { r2 == 0 }
1226 | wmem: memory[r1] = 0
1227 | push: push(r0);
1228 | push: push(r1);
1229 | push: push(r2);
1230 | set: r0 = 28054
1231 | set: r1 = 1531
1232 | add: r2 = 149 + 22998
1233 | call: push(3449); go to memory[1458]
1234 | pop: r2 = pop();
1235 | pop: r1 = pop();
1236 | pop: r0 = pop();
1237 | jmp: go to memory[3481]
1238 | push: push(r0);
1239 | push: push(r1);
1240 | push: push(r2);
1241 | set: r0 = 28062
1242 | set: r1 = 1531
1243 | add: r2 = 2956 + 231
1244 | call: push(3475); go to memory[1458]
1245 | pop: r2 = pop();
1246 | pop: r1 = pop();
1247 | pop: r0 = pop();
1248 | pop: r2 = pop();
1249 | pop: r1 = pop();
1250 | pop: r0 = pop();
1251 | ret: go to memory[pop()];
1252 | push: push(r0);
1253 | push: push(r1);
1254 | call: push(3494); go to memory[5921]
1255 | jt: if (r0 == 0 { go to 3539 }
1256 | add: r1 = r0 + 2
1257 | rmem: r0 = memory[r1]
1258 | jt: if (r0 != 0 { go to memory[3539] }
1259 | rmem: r0 = memory[2732]
1260 | wmem: memory[r1] = r0
1261 | push: push(r0);
1262 | push: push(r1);
1263 | push: push(r2);
1264 | set: r0 = 28090
1265 | set: r1 = 1531
1266 | add: r2 = 27045 + 5314
1267 | call: push(3531); go to memory[1458]
1268 | pop: r2 = pop();
1269 | pop: r1 = pop();
1270 | pop: r0 = pop();
1271 | jmp: go to memory[3563]
1272 | push: push(r0);
1273 | push: push(r1);
1274 | push: push(r2);
1275 | set: r0 = 28100
1276 | set: r1 = 1531
1277 | add: r2 = 5789 + 21597
1278 | call: push(3557); go to memory[1458]
1279 | pop: r2 = pop();
1280 | pop: r1 = pop();
1281 | pop: r0 = pop();
1282 | pop: r1 = pop();
1283 | pop: r0 = pop();
1284 | ret: go to memory[pop()];
1285 | push: push(r0);
1286 | push: push(r1);
1287 | call: push(3574); go to memory[5921]
1288 | jt: if (r0 == 0 { go to 3601 }
1289 | add: r1 = r0 + 2
1290 | rmem: r1 = memory[r1]
1291 | jt: if (r1 != 0 { go to memory[3601] }
1292 | add: r1 = r0 + 3
1293 | rmem: r1 = memory[r1]
1294 | jt: if (r1 == 0 { go to 3627 }
1295 | call: push(3599); go to memory[r1]
1296 | jmp: go to memory[3651]
1297 | push: push(r0);
1298 | push: push(r1);
1299 | push: push(r2);
1300 | set: r0 = 28135
1301 | set: r1 = 1531
1302 | add: r2 = 17722 + 8111
1303 | call: push(3619); go to memory[1458]
1304 | pop: r2 = pop();
1305 | pop: r1 = pop();
1306 | pop: r0 = pop();
1307 | jmp: go to memory[3651]
1308 | push: push(r0);
1309 | push: push(r1);
1310 | push: push(r2);
1311 | set: r0 = 28170
1312 | set: r1 = 1531
1313 | add: r2 = 17316 + 2764
1314 | call: push(3645); go to memory[1458]
1315 | pop: r2 = pop();
1316 | pop: r1 = pop();
1317 | pop: r0 = pop();
1318 | pop: r1 = pop();
1319 | pop: r0 = pop();
1320 | ret: go to memory[pop()];
1321 | push: push(r0);
1322 | push: push(r1);
1323 | push: push(r2);
1324 | set: r0 = 2680
1325 | call: push(3667); go to memory[5990]
1326 | jt: if (r0 != 0 { go to memory[3694] }
1327 | add: r0 = 2676 + 2
1328 | wmem: memory[r0] = 32767
1329 | add: r0 = 2680 + 2
1330 | wmem: memory[r0] = 32767
1331 | add: r0 = 2672 + 2
1332 | wmem: memory[r0] = 32767
1333 | wmem: memory[2732] = 2648
1334 | pop: r2 = pop();
1335 | pop: r1 = pop();
1336 | pop: r0 = pop();
1337 | ret: go to memory[pop()];
1338 | push: push(r0);
1339 | push: push(r1);
1340 | push: push(r2);
1341 | set: r0 = 28204
1342 | set: r1 = 1531
1343 | add: r2 = 19975 + 3675
1344 | call: push(3719); go to memory[1458]
1345 | pop: r2 = pop();
1346 | pop: r1 = pop();
1347 | pop: r0 = pop();
1348 | halt: 
1349 | halt: 
1350 | push: push(r1);
1351 | rmem: r1 = memory[3726]
1352 | or: r1 = r1 or r0
1353 | wmem: memory[3726] = r1
1354 | pop: r1 = pop();
1355 | ret: go to memory[pop()];
1356 | wmem: memory[3726] = 0
1357 | ret: go to memory[pop()];
1358 | push: push(r0);
1359 | set: r0 = 1
1360 | call: push(3753); go to memory[3727]
1361 | pop: r0 = pop();
1362 | ret: go to memory[pop()];
1363 | push: push(r0);
1364 | set: r0 = 2
1365 | call: push(3763); go to memory[3727]
1366 | pop: r0 = pop();
1367 | ret: go to memory[pop()];
1368 | push: push(r0);
1369 | set: r0 = 4
1370 | call: push(3773); go to memory[3727]
1371 | pop: r0 = pop();
1372 | ret: go to memory[pop()];
1373 | push: push(r0);
1374 | set: r0 = 8
1375 | call: push(3783); go to memory[3727]
1376 | pop: r0 = pop();
1377 | ret: go to memory[pop()];
1378 | push: push(r0);
1379 | set: r0 = 16
1380 | call: push(3793); go to memory[3727]
1381 | pop: r0 = pop();
1382 | ret: go to memory[pop()];
1383 | push: push(r0);
1384 | set: r0 = 32
1385 | call: push(3803); go to memory[3727]
1386 | pop: r0 = pop();
1387 | ret: go to memory[pop()];
1388 | push: push(r0);
1389 | push: push(r1);
1390 | push: push(r2);
1391 | push: push(r3);
1392 | set: r0 = 64
1393 | call: push(3819); go to memory[3727]
1394 | push: push(r0);
1395 | push: push(r1);
1396 | push: push(r2);
1397 | set: r0 = 28236
1398 | set: r1 = 1531
1399 | add: r2 = 7385 + 11042
1400 | call: push(3837); go to memory[1458]
1401 | pop: r2 = pop();
1402 | pop: r1 = pop();
1403 | pop: r0 = pop();
1404 | rmem: r0 = memory[3726]
1405 | set: r1 = 25866
1406 | set: r2 = 32767
1407 | set: r3 = 28299
1408 | call: push(3857); go to memory[1841]
1409 | push: push(r0);
1410 | push: push(r1);
1411 | push: push(r2);
1412 | set: r0 = 28303
1413 | set: r1 = 1531
1414 | add: r2 = 17281 + 9448
1415 | call: push(3875); go to memory[1458]
1416 | pop: r2 = pop();
1417 | pop: r1 = pop();
1418 | pop: r0 = pop();
1419 | wmem: memory[2732] = 2417
1420 | pop: r3 = pop();
1421 | pop: r2 = pop();
1422 | pop: r1 = pop();
1423 | pop: r0 = pop();
1424 | ret: go to memory[pop()];
1425 | push: push(r0);
1426 | push: push(r1);
1427 | rmem: r0 = memory[2462]
1428 | rmem: r1 = memory[27101]
1429 | eq: if (r0 == r1) { r0 == 1 } else { r0 == 0 }
1430 | push: push(r0);
1431 | push: push(r1);
1432 | push: push(r2);
1433 | set: r0 = 28347
1434 | set: r1 = 1531
1435 | add: r2 = 3847 + 21852
1436 | call: push(3928); go to memory[1458]
1437 | pop: r2 = pop();
1438 | pop: r1 = pop();
1439 | pop: r0 = pop();
1440 | wmem: memory[2732] = 2457
1441 | wmem: memory[2733] = 2457
1442 | pop: r1 = pop();
1443 | pop: r0 = pop();
1444 | ret: go to memory[pop()];
1445 | halt: 
1446 | halt: 
1447 | halt: 
1448 | halt: 
1449 | halt: 
1450 | halt: 
1451 | push: push(r0);
1452 | push: push(r1);
1453 | set: r0 = 2
1454 | set: r1 = 0
1455 | call: push(3970); go to memory[4218]
1456 | pop: r1 = pop();
1457 | pop: r0 = pop();
1458 | ret: go to memory[pop()];
1459 | push: push(r0);
1460 | push: push(r1);
1461 | set: r0 = 8
1462 | set: r1 = 1
1463 | call: push(3987); go to memory[4279]
1464 | pop: r1 = pop();
1465 | pop: r0 = pop();
1466 | ret: go to memory[pop()];
1467 | push: push(r0);
1468 | push: push(r1);
1469 | set: r0 = 1
1470 | set: r1 = 2
1471 | call: push(4004); go to memory[4218]
1472 | pop: r1 = pop();
1473 | pop: r0 = pop();
1474 | ret: go to memory[pop()];
1475 | push: push(r0);
1476 | push: push(r1);
1477 | set: r0 = 1
1478 | set: r1 = 3
1479 | call: push(4021); go to memory[4279]
1480 | call: push(4023); go to memory[4533]
1481 | pop: r1 = pop();
1482 | pop: r0 = pop();
1483 | ret: go to memory[pop()];
1484 | push: push(r0);
1485 | push: push(r1);
1486 | set: r0 = 4
1487 | set: r1 = 4
1488 | call: push(4040); go to memory[4279]
1489 | pop: r1 = pop();
1490 | pop: r0 = pop();
1491 | ret: go to memory[pop()];
1492 | push: push(r0);
1493 | push: push(r1);
1494 | set: r0 = 2
1495 | set: r1 = 5
1496 | call: push(4057); go to memory[4218]
1497 | pop: r1 = pop();
1498 | pop: r0 = pop();
1499 | ret: go to memory[pop()];
1500 | push: push(r0);
1501 | push: push(r1);
1502 | set: r0 = 11
1503 | set: r1 = 6
1504 | call: push(4074); go to memory[4279]
1505 | pop: r1 = pop();
1506 | pop: r0 = pop();
1507 | ret: go to memory[pop()];
1508 | push: push(r0);
1509 | push: push(r1);
1510 | set: r0 = 2
1511 | set: r1 = 7
1512 | call: push(4091); go to memory[4218]
1513 | pop: r1 = pop();
1514 | pop: r0 = pop();
1515 | ret: go to memory[pop()];
1516 | push: push(r0);
1517 | push: push(r1);
1518 | set: r0 = 0
1519 | set: r1 = 8
1520 | call: push(4108); go to memory[4218]
1521 | pop: r1 = pop();
1522 | pop: r0 = pop();
1523 | ret: go to memory[pop()];
1524 | push: push(r0);
1525 | push: push(r1);
1526 | set: r0 = 4
1527 | set: r1 = 9
1528 | call: push(4125); go to memory[4279]
1529 | pop: r1 = pop();
1530 | pop: r0 = pop();
1531 | ret: go to memory[pop()];
1532 | push: push(r0);
1533 | push: push(r1);
1534 | set: r0 = 1
1535 | set: r1 = 10
1536 | call: push(4142); go to memory[4218]
1537 | pop: r1 = pop();
1538 | pop: r0 = pop();
1539 | ret: go to memory[pop()];
1540 | push: push(r0);
1541 | push: push(r1);
1542 | set: r0 = 18
1543 | set: r1 = 11
1544 | call: push(4159); go to memory[4279]
1545 | pop: r1 = pop();
1546 | pop: r0 = pop();
1547 | ret: go to memory[pop()];
1548 | call: push(4166); go to memory[4611]
1549 | ret: go to memory[pop()];
1550 | push: push(r0);
1551 | push: push(r1);
1552 | set: r0 = 1
1553 | set: r1 = 12
1554 | call: push(4179); go to memory[4218]
1555 | pop: r1 = pop();
1556 | pop: r0 = pop();
1557 | ret: go to memory[pop()];
1558 | push: push(r0);
1559 | push: push(r1);
1560 | set: r0 = 9
1561 | set: r1 = 13
1562 | call: push(4196); go to memory[4279]
1563 | pop: r1 = pop();
1564 | pop: r0 = pop();
1565 | ret: go to memory[pop()];
1566 | push: push(r0);
1567 | push: push(r1);
1568 | set: r0 = 2
1569 | set: r1 = 14
1570 | call: push(4213); go to memory[4218]
1571 | pop: r1 = pop();
1572 | pop: r0 = pop();
1573 | ret: go to memory[pop()];
1574 | push: push(r0);
1575 | push: push(r1);
1576 | push: push(r2);
1577 | add: r2 = 2716 + 2
1578 | rmem: r2 = memory[r2]
1579 | jt: if (r2 != 0 { go to memory[4272] }
1580 | call: push(4236); go to memory[4405]
1581 | wmem: memory[3951] = r0
1582 | add: r1 = r0 + 3945
1583 | rmem: r1 = memory[r1]
1584 | set: r0 = 26024
1585 | call: push(4251); go to memory[1518]
1586 | set: r0 = r1
1587 | call: push(4256); go to memory[1518]
1588 | set: r0 = 26088
1589 | call: push(4261); go to memory[1518]
1590 | set: r0 = r1
1591 | call: push(4266); go to memory[1518]
1592 | out: printf(46);
1593 | out: printf(10);
1594 | out: printf(10);
1595 | pop: r2 = pop();
1596 | pop: r1 = pop();
1597 | pop: r0 = pop();
1598 | ret: go to memory[pop()];
1599 | push: push(r0);
1600 | push: push(r1);
1601 | push: push(r2);
1602 | add: r2 = 2716 + 2
1603 | rmem: r2 = memory[r2]
1604 | jt: if (r2 != 0 { go to memory[4398] }
1605 | call: push(4297); go to memory[4405]
1606 | push: push(r0);
1607 | rmem: r0 = memory[3951]
1608 | add: r1 = r0 + 3945
1609 | rmem: r1 = memory[r1]
1610 | set: r0 = 26122
1611 | call: push(4314); go to memory[1518]
1612 | set: r0 = r1
1613 | call: push(4319); go to memory[1518]
1614 | set: r0 = 26170
1615 | call: push(4324); go to memory[1518]
1616 | pop: r0 = pop();
1617 | set: r1 = r0
1618 | rmem: r0 = memory[3952]
1619 | rmem: r2 = memory[3951]
1620 | add: r2 = r2 + 3948
1621 | rmem: r2 = memory[r2]
1622 | call: push(4344); go to memory[r2]
1623 | jt: if (r1 != 0 { go to memory[4391] }
1624 | rmem: r1 = memory[3952]
1625 | wmem: memory[3952] = r0
1626 | gt: if (r0 > r1) { r2 == 1 } else { r2 == 0 }
1627 | push: push(r0);
1628 | set: r0 = 26235
1629 | call: push(4367); go to memory[1518]
1630 | pop: r0 = pop();
1631 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
1632 | push: push(r0);
1633 | set: r0 = 26267
1634 | call: push(4383); go to memory[1518]
1635 | pop: r0 = pop();
1636 | out: printf(10);
1637 | out: printf(10);
1638 | jmp: go to memory[4398]
1639 | call: push(4393); go to memory[4660]
1640 | set: r0 = 26299
1641 | call: push(4398); go to memory[1518]
1642 | pop: r2 = pop();
1643 | pop: r1 = pop();
1644 | pop: r0 = pop();
1645 | ret: go to memory[pop()];
1646 | push: push(r0);
1647 | push: push(r1);
1648 | push: push(r2);
1649 | push: push(r3);
1650 | push: push(r4);
1651 | push: push(r5);
1652 | rmem: r5 = memory[3953]
1653 | gt: if (r5 > 29999) { r3 == 1 } else { r3 == 0 }
1654 | add: r5 = r5 + 1
1655 | wmem: memory[3953] = r5
1656 | set: r3 = r0
1657 | set: r4 = r1
1658 | add: r0 = r5 + 2
1659 | call: push(4446); go to memory[2281]
1660 | rmem: r1 = memory[3954]
1661 | or: r0 = r1 or r0
1662 | set: r1 = r4
1663 | call: push(4458); go to memory[2248]
1664 | wmem: memory[3954] = r0
1665 | set: r0 = 3955
1666 | add: r1 = r5 + 2
1667 | set: r2 = r4
1668 | call: push(4473); go to memory[4515]
1669 | set: r0 = 3956
1670 | mult: r1 = r5 * r5
1671 | mult: r2 = r4 * r4
1672 | call: push(4486); go to memory[4515]
1673 | set: r0 = 3957
1674 | set: r1 = 13
1675 | mult: r2 = r3 * 9
1676 | mult: r2 = r2 * r2
1677 | call: push(4502); go to memory[4515]
1678 | pop: r5 = pop();
1679 | pop: r4 = pop();
1680 | pop: r3 = pop();
1681 | pop: r2 = pop();
1682 | pop: r1 = pop();
1683 | pop: r0 = pop();
1684 | ret: go to memory[pop()];
1685 | push: push(r0);
1686 | rmem: r0 = memory[r0]
1687 | call: push(4522); go to memory[2248]
1688 | set: r1 = r2
1689 | call: push(4527); go to memory[2125]
1690 | pop: r1 = pop();
1691 | wmem: memory[r1] = r0
1692 | ret: go to memory[pop()];
1693 | push: push(r0);
1694 | add: r0 = 2716 + 2
1695 | rmem: r0 = memory[r0]
1696 | jt: if (r0 != 0 { go to memory[4608] }
1697 | set: r0 = 26321
1698 | call: push(4550); go to memory[1518]
1699 | rmem: r0 = memory[3952]
1700 | eq: if (r0 == 30) { r0 == 1 } else { r0 == 0 }
1701 | set: r0 = 26354
1702 | call: push(4565); go to memory[1518]
1703 | set: r0 = 26398
1704 | call: push(4570); go to memory[1518]
1705 | call: push(4572); go to memory[4660]
1706 | jmp: go to memory[4608]
1707 | set: r0 = 26440
1708 | call: push(4579); go to memory[1518]
1709 | rmem: r0 = memory[3954]
1710 | add: r0 = r0 + 1
1711 | jt: if (r0 != 0 { go to memory[4596] }
1712 | set: r0 = 26484
1713 | call: push(4594); go to memory[1518]
1714 | jmp: go to memory[4565]
1715 | set: r0 = 26584
1716 | call: push(4601); go to memory[1518]
1717 | add: r0 = 2716 + 2
1718 | wmem: memory[r0] = 32767
1719 | pop: r0 = pop();
1720 | ret: go to memory[pop()];
1721 | push: push(r0);
1722 | add: r0 = 2716 + 2
1723 | rmem: r0 = memory[r0]
1724 | jt: if (r0 != 0 { go to memory[4657] }
1725 | set: r0 = 26717
1726 | call: push(4628); go to memory[1518]
1727 | rmem: r0 = memory[2732]
1728 | eq: if (r0 == 2623) { r0 == 1 } else { r0 == 0 }
1729 | set: r0 = 26725
1730 | call: push(4643); go to memory[1518]
1731 | jmp: go to memory[4650]
1732 | set: r0 = 26731
1733 | call: push(4650); go to memory[1518]
1734 | set: r0 = 26737
1735 | call: push(4655); go to memory[1518]
1736 | call: push(4657); go to memory[4660]
1737 | pop: r0 = pop();
1738 | ret: go to memory[pop()];
1739 | push: push(r0);
1740 | wmem: memory[3952] = 22
1741 | wmem: memory[3953] = 0
1742 | wmem: memory[3954] = 0
1743 | wmem: memory[3955] = 0
1744 | wmem: memory[3956] = 0
1745 | wmem: memory[3957] = 0
1746 | add: r0 = 2716 + 2
1747 | wmem: memory[r0] = 2623
1748 | pop: r0 = pop();
1749 | ret: go to memory[pop()];
1750 | push: push(r0);
1751 | add: r0 = 2716 + 2
1752 | rmem: r0 = memory[r0]
1753 | eq: if (r0 == 32767) { r0 == 1 } else { r0 == 0 }
1754 | set: r0 = 26824
1755 | call: push(4711); go to memory[1518]
1756 | wmem: memory[2732] = 2578
1757 | wmem: memory[2733] = 2578
1758 | pop: r0 = pop();
1759 | ret: go to memory[pop()];
1760 | push: push(r0);
1761 | push: push(r1);
1762 | push: push(r2);
1763 | push: push(r3);
1764 | push: push(r0);
1765 | push: push(r1);
1766 | push: push(r2);
1767 | set: r0 = 28369
1768 | set: r1 = 1531
1769 | add: r2 = 22584 + 2859
1770 | call: push(4746); go to memory[1458]
1771 | pop: r2 = pop();
1772 | pop: r1 = pop();
1773 | pop: r0 = pop();
1774 | set: r0 = 4242
1775 | set: r1 = 25866
1776 | set: r2 = 32767
1777 | set: r3 = 28397
1778 | call: push(4766); go to memory[1841]
1779 | push: push(r0);
1780 | push: push(r1);
1781 | push: push(r2);
1782 | set: r0 = 28401
1783 | set: r1 = 1531
1784 | add: r2 = 19892 + 6964
1785 | call: push(4784); go to memory[1458]
1786 | pop: r2 = pop();
1787 | pop: r1 = pop();
1788 | pop: r0 = pop();
1789 | pop: r3 = pop();
1790 | pop: r2 = pop();
1791 | pop: r1 = pop();
1792 | pop: r0 = pop();
1793 | ret: go to memory[pop()];
1794 | push: push(r0);
1795 | add: r0 = 2672 + 2
1796 | rmem: r0 = memory[r0]
1797 | jt: if (r0 != 0 { go to memory[4858] }
1798 | add: r0 = 2684 + 2
1799 | wmem: memory[r0] = 32767
1800 | add: r0 = 2672 + 2
1801 | wmem: memory[r0] = 32767
1802 | add: r0 = 2676 + 2
1803 | wmem: memory[r0] = 0
1804 | push: push(r0);
1805 | push: push(r1);
1806 | push: push(r2);
1807 | set: r0 = 28453
1808 | set: r1 = 1531
1809 | add: r2 = 3547 + 1312
1810 | call: push(4850); go to memory[1458]
1811 | pop: r2 = pop();
1812 | pop: r1 = pop();
1813 | pop: r0 = pop();
1814 | jmp: go to memory[4882]
1815 | push: push(r0);
1816 | push: push(r1);
1817 | push: push(r2);
1818 | set: r0 = 28510
1819 | set: r1 = 1531
1820 | add: r2 = 415 + 7516
1821 | call: push(4876); go to memory[1458]
1822 | pop: r2 = pop();
1823 | pop: r1 = pop();
1824 | pop: r0 = pop();
1825 | pop: r0 = pop();
1826 | ret: go to memory[pop()];
1827 | push: push(r0);
1828 | add: r0 = 2676 + 2
1829 | wmem: memory[r0] = 32767
1830 | add: r0 = 2680 + 2
1831 | wmem: memory[r0] = 0
1832 | push: push(r0);
1833 | push: push(r1);
1834 | push: push(r2);
1835 | set: r0 = 28569
1836 | set: r1 = 1531
1837 | add: r2 = 1728 + 9889
1838 | call: push(4919); go to memory[1458]
1839 | pop: r2 = pop();
1840 | pop: r1 = pop();
1841 | pop: r0 = pop();
1842 | wmem: memory[2733] = 0
1843 | pop: r0 = pop();
1844 | ret: go to memory[pop()];
1845 | push: push(r0);
1846 | add: r0 = 2676 + 2
1847 | wmem: memory[r0] = 0
1848 | add: r0 = 2680 + 2
1849 | wmem: memory[r0] = 32767
1850 | push: push(r0);
1851 | push: push(r1);
1852 | push: push(r2);
1853 | set: r0 = 28595
1854 | set: r1 = 1531
1855 | add: r2 = 15889 + 6356
1856 | call: push(4965); go to memory[1458]
1857 | pop: r2 = pop();
1858 | pop: r1 = pop();
1859 | pop: r0 = pop();
1860 | wmem: memory[2733] = 0
1861 | pop: r0 = pop();
1862 | ret: go to memory[pop()];
1863 | push: push(r2);
1864 | push: push(r3);
1865 | rmem: r2 = memory[2732]
1866 | eq: if (r2 == 2457) { r2 == 1 } else { r2 == 0 }
1867 | push: push(r0);
1868 | push: push(r1);
1869 | push: push(r2);
1870 | set: r0 = 28621
1871 | set: r1 = 1531
1872 | add: r2 = 8339 + 3287
1873 | call: push(5009); go to memory[1458]
1874 | pop: r2 = pop();
1875 | pop: r1 = pop();
1876 | pop: r0 = pop();
1877 | jmp: go to memory[5336]
1878 | add: r2 = r0 + 2
1879 | wmem: memory[r2] = 32767
1880 | rmem: r2 = memory[2462]
1881 | add: r2 = r2 + 27095
1882 | add: r2 = r2 + 1
1883 | rmem: r2 = memory[r2]
1884 | add: r3 = 2457 + 1
1885 | rmem: r3 = memory[r3]
1886 | add: r3 = r3 + r2
1887 | add: r2 = r1 + 48
1888 | wmem: memory[r3] = r2
1889 | rmem: r2 = memory[2462]
1890 | add: r2 = r2 + 27101
1891 | add: r2 = r2 + 1
1892 | wmem: memory[r2] = r1
1893 | push: push(r0);
1894 | push: push(r0);
1895 | push: push(r1);
1896 | push: push(r2);
1897 | set: r0 = 28664
1898 | set: r1 = 1531
1899 | add: r2 = 1418 + 6113
1900 | call: push(5090); go to memory[1458]
1901 | pop: r2 = pop();
1902 | pop: r1 = pop();
1903 | pop: r0 = pop();
1904 | pop: r0 = pop();
1905 | push: push(r0);
1906 | add: r2 = r0 + 0
1907 | rmem: r0 = memory[r2]
1908 | call: push(5109); go to memory[1518]
1909 | pop: r0 = pop();
1910 | push: push(r0);
1911 | push: push(r0);
1912 | push: push(r1);
1913 | push: push(r2);
1914 | set: r0 = 28679
1915 | set: r1 = 1531
1916 | add: r2 = 14257 + 17220
1917 | call: push(5131); go to memory[1458]
1918 | pop: r2 = pop();
1919 | pop: r1 = pop();
1920 | pop: r0 = pop();
1921 | pop: r0 = pop();
1922 | rmem: r2 = memory[2462]
1923 | add: r2 = r2 + 1
1924 | wmem: memory[2462] = r2
1925 | rmem: r3 = memory[27101]
1926 | eq: if (r2 == r3) { r3 == 1 } else { r3 == 0 }
1927 | set: r0 = 0
1928 | add: r1 = 27101 + 1
1929 | rmem: r1 = memory[r1]
1930 | add: r0 = r0 + r1
1931 | add: r1 = 27101 + 2
1932 | rmem: r1 = memory[r1]
1933 | add: r2 = 27101 + 3
1934 | rmem: r2 = memory[r2]
1935 | mult: r2 = r2 * r2
1936 | mult: r1 = r1 * r2
1937 | add: r0 = r0 + r1
1938 | add: r1 = 27101 + 4
1939 | rmem: r1 = memory[r1]
1940 | mult: r2 = r1 * r1
1941 | mult: r2 = r2 * r1
1942 | add: r0 = r0 + r2
1943 | add: r1 = 27101 + 5
1944 | rmem: r1 = memory[r1]
1945 | mult: r1 = r1 * 32767
1946 | add: r0 = r0 + r1
1947 | eq: if (r0 == 399) { r1 == 1 } else { r1 == 0 }
1948 | add: r2 = 2688 + 2
1949 | wmem: memory[r2] = 2457
1950 | add: r2 = 2692 + 2
1951 | wmem: memory[r2] = 2457
1952 | add: r2 = 2696 + 2
1953 | wmem: memory[r2] = 2457
1954 | add: r2 = 2700 + 2
1955 | wmem: memory[r2] = 2457
1956 | add: r2 = 2704 + 2
1957 | wmem: memory[r2] = 2457
1958 | wmem: memory[2462] = 0
1959 | set: r0 = 27095
1960 | set: r1 = 5341
1961 | call: push(5286); go to memory[1458]
1962 | push: push(r0);
1963 | push: push(r1);
1964 | push: push(r2);
1965 | set: r0 = 28710
1966 | set: r1 = 1531
1967 | add: r2 = 7370 + 9114
1968 | call: push(5304); go to memory[1458]
1969 | pop: r2 = pop();
1970 | pop: r1 = pop();
1971 | pop: r0 = pop();
1972 | jmp: go to memory[5336]
1973 | push: push(r0);
1974 | push: push(r1);
1975 | push: push(r2);
1976 | set: r0 = 28777
1977 | set: r1 = 1531
1978 | add: r2 = 2171 + 20463
1979 | call: push(5330); go to memory[1458]
1980 | pop: r2 = pop();
1981 | pop: r1 = pop();
1982 | pop: r0 = pop();
1983 | pop: r3 = pop();
1984 | pop: r2 = pop();
1985 | ret: go to memory[pop()];
1986 | push: push(r2);
1987 | add: r2 = 2457 + 1
1988 | rmem: r2 = memory[r2]
1989 | add: r2 = r2 + r0
1990 | wmem: memory[r2] = 95
1991 | pop: r2 = pop();
1992 | ret: go to memory[pop()];
1993 | push: push(r0);
1994 | push: push(r1);
1995 | set: r0 = 2688
1996 | set: r1 = 2
1997 | call: push(5372); go to memory[4977]
1998 | pop: r1 = pop();
1999 | pop: r0 = pop();
2000 | ret: go to memory[pop()];
2001 | push: push(r0);
2002 | push: push(r1);
2003 | set: r0 = 2692
2004 | set: r1 = 3
2005 | call: push(5389); go to memory[4977]
2006 | pop: r1 = pop();
2007 | pop: r0 = pop();
2008 | ret: go to memory[pop()];
2009 | push: push(r0);
2010 | push: push(r1);
2011 | set: r0 = 2696
2012 | set: r1 = 5
2013 | call: push(5406); go to memory[4977]
2014 | pop: r1 = pop();
2015 | pop: r0 = pop();
2016 | ret: go to memory[pop()];
2017 | push: push(r0);
2018 | push: push(r1);
2019 | set: r0 = 2700
2020 | set: r1 = 7
2021 | call: push(5423); go to memory[4977]
2022 | pop: r1 = pop();
2023 | pop: r0 = pop();
2024 | ret: go to memory[pop()];
2025 | push: push(r0);
2026 | push: push(r1);
2027 | set: r0 = 2704
2028 | set: r1 = 9
2029 | call: push(5440); go to memory[4977]
2030 | pop: r1 = pop();
2031 | pop: r0 = pop();
2032 | ret: go to memory[pop()];
2033 | push: push(r0);
2034 | push: push(r1);
2035 | push: push(r2);
2036 | jt: if (r7 == 0 { go to 5605 }
2037 | push: push(r0);
2038 | push: push(r1);
2039 | push: push(r2);
2040 | set: r0 = 28844
2041 | set: r1 = 1531
2042 | add: r2 = 1543 + 866
2043 | call: push(5472); go to memory[1458]
2044 | pop: r2 = pop();
2045 | pop: r1 = pop();
2046 | pop: r0 = pop();
2047 | noop: 2048 | noop: 2049 | noop: 2050 | eq: if (r1 == 1) { 1 == 1 } else { 1 == 0 }
2051 | eq: if (r0 == 6) { r1 == 1 } else { r1 == 0 }
2052 | push: push(r0);
2053 | push: push(r1);
2054 | push: push(r2);
2055 | set: r0 = 29014
2056 | set: r1 = 1531
2057 | add: r2 = 8025 + 7965
2058 | call: push(5516); go to memory[1458]
2059 | pop: r2 = pop();
2060 | pop: r1 = pop();
2061 | pop: r0 = pop();
2062 | set: r0 = r7
2063 | set: r1 = 25866
2064 | set: r2 = 32767
2065 | push: push(r3);
2066 | set: r3 = 29241
2067 | call: push(5538); go to memory[1841]
2068 | pop: r3 = pop();
2069 | push: push(r0);
2070 | push: push(r1);
2071 | push: push(r2);
2072 | set: r0 = 29245
2073 | set: r1 = 1531
2074 | add: r2 = 1211 + 23978
2075 | call: push(5558); go to memory[1458]
2076 | pop: r2 = pop();
2077 | pop: r1 = pop();
2078 | pop: r0 = pop();
2079 | wmem: memory[2732] = 2498
2080 | wmem: memory[2733] = 0
2081 | add: r1 = 2708 + 2
2082 | wmem: memory[r1] = 32767
2083 | jmp: go to memory[5714]
2084 | push: push(r0);
2085 | push: push(r1);
2086 | push: push(r2);
2087 | set: r0 = 29400
2088 | set: r1 = 1531
2089 | add: r2 = 10577 + 19216
2090 | call: push(5597); go to memory[1458]
2091 | pop: r2 = pop();
2092 | pop: r1 = pop();
2093 | pop: r0 = pop();
2094 | jmp: go to memory[5714]
2095 | push: push(r0);
2096 | push: push(r1);
2097 | push: push(r2);
2098 | set: r0 = 29545
2099 | set: r1 = 1531
2100 | add: r2 = 13726 + 9414
2101 | call: push(5623); go to memory[1458]
2102 | pop: r2 = pop();
2103 | pop: r1 = pop();
2104 | pop: r0 = pop();
2105 | set: r0 = 0
2106 | add: r2 = 1 + 27101
2107 | rmem: r1 = memory[r2]
2108 | add: r0 = r0 + r1
2109 | mult: r0 = r0 * 31660
2110 | call: push(5649); go to memory[2125]
2111 | rmem: r1 = memory[27101]
2112 | add: r1 = r1 + 27101
2113 | add: r2 = r2 + 1
2114 | gt: if (r2 > r1) { r1 == 1 } else { r1 == 0 }
2115 | set: r1 = 25866
2116 | set: r2 = 32767
2117 | push: push(r3);
2118 | set: r3 = 29663
2119 | call: push(5680); go to memory[1841]
2120 | pop: r3 = pop();
2121 | push: push(r0);
2122 | push: push(r1);
2123 | push: push(r2);
2124 | set: r0 = 29667
2125 | set: r1 = 1531
2126 | add: r2 = 74 + 44
2127 | call: push(5700); go to memory[1458]
2128 | pop: r2 = pop();
2129 | pop: r1 = pop();
2130 | pop: r0 = pop();
2131 | wmem: memory[2732] = 2488
2132 | wmem: memory[2733] = 0
2133 | jmp: go to memory[5714]
2134 | pop: r2 = pop();
2135 | pop: r1 = pop();
2136 | pop: r0 = pop();
2137 | ret: go to memory[pop()];
2138 | push: push(r0);
2139 | push: push(r1);
2140 | push: push(r2);
2141 | push: push(r3);
2142 | push: push(r0);
2143 | push: push(r1);
2144 | push: push(r2);
2145 | set: r0 = 29757
2146 | set: r1 = 1531
2147 | add: r2 = 2318 + 8533
2148 | call: push(5747); go to memory[1458]
2149 | pop: r2 = pop();
2150 | pop: r1 = pop();
2151 | pop: r0 = pop();
2152 | rmem: r0 = memory[3955]
2153 | rmem: r1 = memory[3956]
2154 | call: push(5761); go to memory[2125]
2155 | rmem: r1 = memory[3957]
2156 | call: push(5766); go to memory[2125]
2157 | set: r1 = 25919
2158 | set: r2 = 4
2159 | push: push(r3);
2160 | set: r3 = 29942
2161 | call: push(5779); go to memory[1841]
2162 | pop: r3 = pop();
2163 | push: push(r0);
2164 | push: push(r1);
2165 | push: push(r2);
2166 | set: r0 = 29946
2167 | set: r1 = 1531
2168 | add: r2 = 16156 + 6613
2169 | call: push(5799); go to memory[1458]
2170 | pop: r2 = pop();
2171 | pop: r1 = pop();
2172 | pop: r0 = pop();
2173 | pop: r3 = pop();
2174 | pop: r2 = pop();
2175 | pop: r1 = pop();
2176 | pop: r0 = pop();
2177 | ret: go to memory[pop()];
2178 | out: printf(45);
2179 | out: printf(32);
2180 | call: push(5820); go to memory[1518]
2181 | out: printf(10);
2182 | ret: go to memory[pop()];
2183 | push: push(r1);
2184 | push: push(r2);
2185 | set: r0 = 27381
2186 | set: r1 = 5846
2187 | set: r2 = 0
2188 | call: push(5838); go to memory[1458]
2189 | set: r0 = r2
2190 | pop: r2 = pop();
2191 | pop: r1 = pop();
2192 | ret: go to memory[pop()];
2193 | push: push(r3);
2194 | push: push(r4);
2195 | rmem: r3 = memory[2732]
2196 | add: r4 = r0 + 2
2197 | rmem: r4 = memory[r4]
2198 | eq: if (r3 == r4) { r3 == 1 } else { r3 == 0 }
2199 | add: r2 = r2 + 1
2200 | pop: r4 = pop();
2201 | pop: r3 = pop();
2202 | ret: go to memory[pop()];
2203 | push: push(r0);
2204 | push: push(r1);
2205 | set: r0 = 27381
2206 | set: r1 = 5893
2207 | call: push(5888); go to memory[1458]
2208 | pop: r1 = pop();
2209 | pop: r0 = pop();
2210 | ret: go to memory[pop()];
2211 | push: push(r3);
2212 | add: r3 = r0 + 2
2213 | rmem: r3 = memory[r3]
2214 | eq: if (r2 == r3) { r3 == 1 } else { r3 == 0 }
2215 | add: r0 = r0 + 0
2216 | rmem: r0 = memory[r0]
2217 | call: push(5918); go to memory[5814]
2218 | pop: r3 = pop();
2219 | ret: go to memory[pop()];
2220 | push: push(r1);
2221 | push: push(r2);
2222 | set: r2 = r0
2223 | set: r0 = 27381
2224 | set: r1 = 5964
2225 | call: push(5936); go to memory[1543]
2226 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
2227 | add: r1 = 27381 + r0
2228 | add: r1 = r1 + 1
2229 | rmem: r0 = memory[r1]
2230 | jmp: go to memory[5959]
2231 | set: r0 = 0
2232 | pop: r2 = pop();
2233 | pop: r1 = pop();
2234 | ret: go to memory[pop()];
2235 | push: push(r1);
2236 | set: r1 = r2
2237 | add: r0 = r0 + 0
2238 | rmem: r0 = memory[r0]
2239 | call: push(5978); go to memory[1667]
2240 | pop: r1 = pop();
2241 | jt: if (r0 == 0 { go to 5989 }
2242 | set: r2 = r1
2243 | set: r1 = 32767
2244 | ret: go to memory[pop()];
2245 | push: push(r1);
2246 | push: push(r2);
2247 | add: r0 = r0 + 2
2248 | rmem: r0 = memory[r0]
2249 | jt: if (r0 == 0 { go to 6019 }
2250 | rmem: r1 = memory[2732]
2251 | eq: if (r0 == r1) { r1 == 1 } else { r1 == 0 }
2252 | set: r0 = 0
2253 | jmp: go to memory[6022]
2254 | set: r0 = 1
2255 | pop: r2 = pop();
2256 | pop: r1 = pop();
2257 | ret: go to memory[pop()];
2258 | jt: if (r0 != 0 { go to memory[6035] }
2259 | add: r0 = r1 + 1
2260 | ret: go to memory[pop()];
2261 | jt: if (r1 != 0 { go to memory[6048] }
2262 | add: r0 = r0 + 32767
2263 | set: r1 = r7
2264 | call: push(6047); go to memory[6027]
2265 | ret: go to memory[pop()];
2266 | push: push(r0);
2267 | add: r1 = r1 + 32767
2268 | call: push(6056); go to memory[6027]
2269 | set: r1 = r0
2270 | pop: r0 = pop();
2271 | add: r0 = r0 + 32767
2272 | call: push(6067); go to memory[6027]
2273 | ret: go to memory[pop()];
2274 | mod: 84 = 101 % 115
2275 | mult: 8 = 99 * 111
2276 | pop: 0 = pop();
2277 | halt: 
2278 | halt: 
2279 | and: 0 = 0 and 0
2280 | halt: 
2281 | halt: 
2282 | halt: 
2283 | halt: 
2284 | halt: 
2285 | halt: 
2286 | halt: 
2287 | halt: 
2288 | halt: 
2289 | add: 70 = 111 + 111
2290 | jt: if (100 != 0 { go to memory[111] }
2291 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2292 | add: 70 = 111 + 111
2293 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2294 | add: 68 = 97 + 114
2295 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2296 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2297 | add: 68 = 97 + 114
2298 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2299 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2300 | add: 68 = 97 + 114
2301 | jmp: go to memory[98]
2302 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2303 | mod: 82 = 111 % 112
2304 | jt: if (99 == 0 { go to 111 }
2305 | eq: if (97 == 99) { 98 == 1 } else { 98 == 0 }
2306 | eq: if (111 == 119) { 100 == 1 } else { 100 == 0 }
2307 | mod: 77 = 111 % 115
2308 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2309 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2310 | mod: 77 = 111 % 115
2311 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2312 | mod: 77 = 111 % 115
2313 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2314 | jt: if (112 != 0 { go to memory[97] }
2315 | jt: if (80 != 0 { go to memory[97] }
2316 | jmp: go to memory[99]
2317 | jmp: go to memory[108]
2318 | jt: if (100 == 0 { go to 97 }
2319 | jt: if (80 != 0 { go to memory[97] }
2320 | jt: if (99 == 0 { go to 111 }
2321 | eq: if (97 == 99) { 98 == 1 } else { 98 == 0 }
2322 | rmem: 84 = memory[119]
2323 | jmp: go to memory[108]
2324 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2325 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2326 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2327 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2328 | rmem: 84 = memory[119]
2329 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2330 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2331 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2332 | rmem: 84 = memory[119]
2333 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2334 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2335 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2336 | rmem: 84 = memory[119]
2337 | mult: 10 = 84 * 104
2338 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2339 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2340 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2341 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2342 | rmem: 84 = memory[119]
2343 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2344 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2345 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2346 | rmem: 84 = memory[119]
2347 | mult: 10 = 84 * 104
2348 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2349 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2350 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2351 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2352 | rmem: 84 = memory[119]
2353 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2354 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2355 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2356 | rmem: 84 = memory[119]
2357 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2358 | rmem: 84 = memory[119]
2359 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2360 | rmem: 84 = memory[119]
2361 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2362 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2363 | and: 68 = 97 and 114
2364 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2365 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2366 | and: 68 = 97 and 114
2367 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2368 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2369 | and: 68 = 97 and 114
2370 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2371 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2372 | and: 68 = 97 and 114
2373 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2374 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2375 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2376 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2377 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2378 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2379 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2380 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2381 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2382 | mult: 10 = 95 * 32
2383 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2384 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2385 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2386 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2387 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2388 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2389 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2390 | eq: if (111 == 119) { 100 == 1 } else { 100 == 0 }
2391 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2392 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2393 | push: push(117);
2394 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2395 | push: push(117);
2396 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2397 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2398 | eq: if (111 == 119) { 100 == 1 } else { 100 == 0 }
2399 | in: 83 = getchar();
2400 | jt: if (111 != 0 { go to memory[117] }
2401 | in: 83 = getchar();
2402 | jmp: go to memory[105]
2403 | gt: if (101 > 97) { 66 == 1 } else { 66 == 0 }
2404 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2405 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2406 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2407 | gt: if (101 > 97) { 66 == 1 } else { 66 == 0 }
2408 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2409 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2410 | gt: if (101 > 97) { 66 == 1 } else { 66 == 0 }
2411 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2412 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2413 | rmem: 84 = memory[114]
2414 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2415 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2416 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2417 | rmem: 84 = memory[114]
2418 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2419 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2420 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2421 | rmem: 84 = memory[114]
2422 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2423 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2424 | rmem: 84 = memory[114]
2425 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2426 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2427 | rmem: 84 = memory[114]
2428 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2429 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2430 | or: 84 = 114 or 111
2431 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2432 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2433 | or: 84 = 114 or 111
2434 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2435 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2436 | or: 84 = 114 or 111
2437 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2438 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2439 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2440 | in: 84 = getchar();
2441 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2442 | or: 84 = 114 or 111
2443 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2444 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2445 | mult: 86 = 97 * 117
2446 | mult: 10 = 84 * 104
2447 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2448 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2449 | mult: 86 = 97 * 117
2450 | mult: 10 = 84 * 104
2451 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2452 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2453 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2454 | mult: 86 = 97 * 117
2455 | mult: 10 = 84 * 104
2456 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2457 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2458 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2459 | mult: 86 = 97 * 117
2460 | mult: 10 = 84 * 104
2461 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2462 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2463 | gt: if (97 > 117) { 118 == 1 } else { 118 == 0 }
2464 | mult: 86 = 97 * 117
2465 | mult: 10 = 84 * 104
2466 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2467 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2468 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2469 | mult: 86 = 97 * 117
2470 | mult: 10 = 84 * 104
2471 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2472 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2473 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2474 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2475 | mult: 86 = 97 * 117
2476 | mult: 10 = 84 * 104
2477 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2478 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2479 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2480 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2481 | mult: 86 = 97 * 117
2482 | mult: 10 = 84 * 104
2483 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2484 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2485 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2486 | mult: 86 = 97 * 117
2487 | mult: 10 = 84 * 104
2488 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2489 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2490 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2491 | mult: 86 = 97 * 117
2492 | mult: 10 = 84 * 104
2493 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2494 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2495 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2496 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2497 | mult: 86 = 97 * 117
2498 | mult: 10 = 84 * 104
2499 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2500 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2501 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2502 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2503 | mult: 86 = 97 * 117
2504 | mult: 10 = 84 * 104
2505 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2506 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2507 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2508 | call: push(16793); go to memory[86]
2509 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2510 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2511 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2512 | mult: 86 = 97 * 117
2513 | mult: 10 = 84 * 104
2514 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2515 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2516 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2517 | mult: 86 = 97 * 117
2518 | mult: 10 = 84 * 104
2519 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2520 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2521 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2522 | mult: 86 = 97 * 117
2523 | mult: 10 = 84 * 104
2524 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2525 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2526 | gt: if (97 > 117) { 86 == 1 } else { 86 == 0 }
2527 | gt: if (101 > 97) { 108 == 1 } else { 108 == 0 }
2528 | jt: if (102 != 0 { go to memory[111] }
2529 | eq: if (97 == 99) { 98 == 1 } else { 98 == 0 }
2530 | pop: 114 = pop();
2531 | mod: 105 = 110 % 118
2532 | call: push(17951); go to memory[80]
2533 | pop: 114 = pop();
2534 | eq: if (97 == 105) { 119 == 1 } else { 119 == 0 }
2535 | eq: if (105 == 100) { 104 == 1 } else { 104 == 0 }
2536 | gt: if (97 > 116) { 101 == 1 } else { 101 == 0 }
2537 | halt: 
2538 | jmp: go to memory[116]
2539 | or: 101 = 109 or 112
2540 | jt: if (108 != 0 { go to memory[97] }
2541 | mod: 108 = 105 % 116
2542 | pop: 99 = pop();
2543 | jt: if (114 == 0 { go to 101 }
2544 | or: 99 = 111 or 114
2545 | mult: 115 = 104 * 105
2546 | and: 99 = 111 and 110
2547 | add: 98 = 108 + 117
2548 | mult: 116 = 101 * 108
2549 | or: 98 = 117 or 115
2550 | pop: 111 = pop();
2551 | jmp: go to memory[109]
2552 | and: 115 = 116 and 114
2553 | mult: 10 = 82 * 101
2554 | mult: 112 = 114 * 101
2555 | mult: 105 = 110 * 116
2556 | mult: 112 = 117 * 114
2557 | mult: 105 = 110 * 116
2558 | mult: 70 = 117 * 114
2559 | mult: 116 = 104 * 105
2560 | mult: 114 = 101 * 103
2561 | mult: 10 = 65 * 32
2562 | mult: 100 = 101 * 115
2563 | mult: 109 = 105 * 110
2564 | mult: 104 = 97 * 115
2565 | mult: 115 = 104 * 111
2566 | mult: 10 = 84 * 104
2567 | mult: 101 = 110 * 101
2568 | mult: 99 = 111 * 110
2569 | mult: 73 = 102 * 32
2570 | mult: 108 = 111 * 99
2571 | mult: 105 = 116 * 115
2572 | mult: 116 = 104 * 101
2573 | mult: 101 = 120 * 97
2574 | mult: 10 = 84 * 104
2575 | mult: 99 = 111 * 109
2576 | mult: 115 = 99 * 97
2577 | mult: 121 = 101 * 97
2578 | mult: 10 = 73 * 102
2579 | mult: 104 = 97 * 110
2580 | mult: 114 = 101 * 105
2581 | mult: 118 = 101 * 114
2582 | mult: 104 = 97 * 118
2583 | mult: 10 = 84 * 104
2584 | mult: 98 = 121 * 112
2585 | mult: 97 = 110 * 111
2586 | mult: 110 = 111 * 119
2587 | mult: 10 = 79 * 102
2588 | jt: if (106 != 0 { go to memory[111] }
2589 | mult: 10 = 68 * 97
2590 | mult: 10 = 68 * 97
2591 | mult: 10 = 68 * 97
2592 | mult: 10 = 68 * 97
2593 | mult: 10 = 68 * 97
2594 | mult: 10 = 68 * 97
2595 | mult: 10 = 68 * 97
2596 | mult: 10 = 68 * 97
2597 | mult: 10 = 68 * 97
2598 | mult: 10 = 68 * 97
2599 | mult: 10 = 68 * 97
2600 | mult: 10 = 68 * 97
2601 | push: push(103);
2602 | eq: if (111 == 111) { 108 == 1 } else { 108 == 0 }
2603 | eq: if (101 == 108) { 104 == 1 } else { 104 == 0 }
2604 | pop: 105 = pop();
2605 | eq: if (97 == 107) { 116 == 1 } else { 116 == 0 }
2606 | eq: if (114 == 111) { 100 == 1 } else { 100 == 0 }
2607 | pop: 117 = pop();
2608 | halt: 
2609 | halt: 
2610 | halt: 
2611 | halt: 
2612 | halt: 
2613 | halt: 
2614 | halt: 
2615 | halt: 
2616 | halt: 
2617 | halt: 
2618 | halt: 
2619 | halt: 
2620 | halt: 
2621 | halt: 
2622 | halt: 
2623 | halt: 
2624 | halt: 
2625 | halt: 
2626 | halt: 
2627 | halt: 
2628 | halt: 
2629 | halt: 
2630 | halt: 
2631 | halt: 
2632 | halt: 
2633 | halt: 
2634 | halt: 
2635 | halt: 
2636 | halt: 
2637 | halt: 
2638 | halt: 
2639 | halt: 
2640 | halt: 
2641 | gt: if (114 > 101) { 103 == 1 } else { 103 == 0 }
2642 | pop: 114 = pop();
2643 | jmp: go to memory[121]
2644 | noop: 2645 | mult: 10 = 32 * 65
2646 | mult: 10 = 43 * 116
2647 | mult: 10 = 7 * 65
2648 | gt: if (101 > 97) { 108 == 1 } else { 108 == 0 }
2649 | gt: if (110 > 116) { 101 == 1 } else { 101 == 0 }
2650 | mult: 10 = 26 * 84
2651 | mult: 48 = 7586 * 7582
2652 | push: push(6336);
2653 | push: push(2327);
2654 | set: 6435 = 1
2655 | push: push(6585);
2656 | push: push(2332);
2657 | push: push(6699);
2658 | push: push(2337);
2659 | push: push(6909);
2660 | push: push(2342);
2661 | push: push(7056);
2662 | push: push(2347);
2663 | set: 7265 = 1
2664 | push: push(7492);
2665 | push: push(2362);
2666 | set: 7611 = 1
2667 | push: push(7786);
2668 | push: push(2352);
2669 | pop: 7984 = pop();
2670 | pop: 2362 = pop();
2671 | push: push(8015);
2672 | push: push(8149);
2673 | push: push(2427);
2674 | gt: if (8310 > 8316) { 8303 == 1 } else { 8303 == 0 }
2675 | gt: if (2382 > 2387) { 2367 == 1 } else { 2367 == 0 }
2676 | pop: 8404 = pop();
2677 | pop: 2387 = pop();
2678 | pop: 8493 = pop();
2679 | pop: 2377 = pop();
2680 | eq: if (8657 == 8663) { 8651 == 1 } else { 8651 == 0 }
2681 | eq: if (2392 == 2377) { 2407 == 1 } else { 2407 == 0 }
2682 | pop: 8745 = pop();
2683 | pop: 2397 = pop();
2684 | eq: if (8916 == 8922) { 8910 == 1 } else { 8910 == 0 }
2685 | eq: if (2382 == 2387) { 2412 == 1 } else { 2412 == 0 }
2686 | pop: 9004 = pop();
2687 | pop: 2387 = pop();
2688 | set: 9093 = 1
2689 | set: 9170 = 1
2690 | push: push(9247);
2691 | push: push(2387);
2692 | push: push(9387);
2693 | push: push(2432);
2694 | push: push(9445);
2695 | push: push(2427);
2696 | push: push(9503);
2697 | push: push(2432);
2698 | push: push(9627);
2699 | push: push(2437);
2700 | push: push(9892);
2701 | push: push(2442);
2702 | push: push(10091);
2703 | push: push(2457);
2704 | eq: if (10409 == 10415) { 10403 == 1 } else { 10403 == 0 }
2705 | eq: if (2452 == 2468) { 2463 == 1 } else { 2463 == 0 }
2706 | gt: if (271 > 275) { 267 == 1 } else { 267 == 0 }
2707 | gt: if (0 > 0) { 0 == 1 } else { 0 == 0 }
2708 | halt: 
2709 | set: 10599 = 1
2710 | push: push(10750);
2711 | push: push(2473);
2712 | set: 10889 = 1
2713 | push: push(11078);
2714 | push: push(2483);
2715 | set: 11262 = 1
2716 | set: 11544 = 1
2717 | set: 11719 = 1
2718 | pop: 11903 = pop();
2719 | pop: 2503 = pop();
2720 | push: push(12188);
2721 | push: push(2498);
2722 | push: push(12448);
2723 | push: push(2498);
2724 | pop: 12674 = pop();
2725 | pop: 2523 = pop();
2726 | pop: 12830 = pop();
2727 | pop: 2523 = pop();
2728 | push: push(13094);
2729 | push: push(2528);
2730 | push: push(13408);
2731 | push: push(2533);
2732 | push: push(13682);
2733 | push: push(2538);
2734 | push: push(13929);
2735 | push: push(2543);
2736 | push: push(14078);
2737 | push: push(2548);
2738 | pop: 14427 = pop();
2739 | pop: 2558 = pop();
2740 | set: 14629 = 1
2741 | push: push(14753);
2742 | push: push(2623);
2743 | push: push(14905);
2744 | push: push(2568);
2745 | pop: 15058 = pop();
2746 | pop: 2573 = pop();
2747 | pop: 15214 = pop();
2748 | pop: 2578 = pop();
2749 | pop: 15488 = pop();
2750 | pop: 2598 = pop();
2751 | pop: 15647 = pop();
2752 | pop: 2563 = pop();
2753 | eq: if (15810 == 15815) { 15804 == 1 } else { 15804 == 0 }
2754 | eq: if (2593 == 2608) { 2568 == 1 } else { 2568 == 0 }
2755 | eq: if (15975 == 15980) { 15969 == 1 } else { 15969 == 0 }
2756 | eq: if (2598 == 2613) { 2573 == 1 } else { 2573 == 0 }
2757 | pop: 16131 = pop();
2758 | pop: 2578 = pop();
2759 | pop: 16288 = pop();
2760 | pop: 2583 = pop();
2761 | eq: if (16453 == 16458) { 16447 == 1 } else { 16447 == 0 }
2762 | eq: if (2613 == 2628) { 2588 == 1 } else { 2588 == 0 }
2763 | eq: if (16615 == 16620) { 16609 == 1 } else { 16609 == 0 }
2764 | eq: if (2618 == 2633) { 2593 == 1 } else { 2593 == 0 }
2765 | pop: 16774 = pop();
2766 | pop: 2598 = pop();
2767 | pop: 16954 = pop();
2768 | pop: 2603 = pop();
2769 | pop: 17111 = pop();
2770 | pop: 2608 = pop();
2771 | pop: 17269 = pop();
2772 | pop: 2613 = pop();
2773 | push: push(17425);
2774 | push: push(2618);
2775 | set: 17655 = 1
2776 | push: push(17793);
2777 | push: push(2653);
2778 | push: push(17933);
2779 | push: push(2658);
2780 | pop: 18041 = pop();
2781 | pop: 2663 = pop();
2782 | halt: 
2783 | halt: 
2784 | wmem: memory[2668] = 2672
2785 | jt: if (25943 != 0 { go to memory[25946] }
2786 | jt: if (3245 != 0 { go to memory[2964] }
2787 | call: push(27416); go to memory[13804]
2788 | wmem: memory[6454] = 6400
2789 | jt: if (23103 != 0 { go to memory[23050] }
2790 | add: 32291 = 32277 + 32264
2791 | pop: 7174 = pop();
2792 | noop: 2793 | pop: 25220 = pop();
2794 | not: 7474 = ~7428
2795 | pop: 16822 = pop();
2796 | pop: 18634 = pop();
2797 | wmem: memory[2] = 19
2798 | eq: if (23 == 86) { 86 == 1 } else { 86 == 0 }
2799 | out: printf(1);
2800 | out: printf(24);
2801 | push: push(5);
2802 | rmem: 25 = memory[3]
2803 | wmem: memory[31] = 24
2804 | ret: go to memory[pop()];
2805 | rmem: 25 = memory[3]
2806 | eq: if (19 == 26) { 5 == 1 } else { 5 == 0 }
2807 | in: 23 = getchar();
2808 | noop: 2809 | gt: if (26 > 31) { 25 == 1 } else { 25 == 0 }
2810 | call: push(29725); go to memory[4]
2811 | pop: 24 = pop();
2812 | ret: go to memory[pop()];
2813 | ret: go to memory[pop()];
2814 | push: push(2);
2815 | out: printf(86);
2816 | ret: go to memory[pop()];
2817 | gt: if (4 > 31) { 25 == 1 } else { 25 == 0 }
2818 | push: push(19);
2819 | ret: go to memory[pop()];
2820 | pop: 7905 = pop();
2821 | halt: 
2822 | halt: 
2823 | halt: 
2824 | halt: 
2825 | halt: 
2826 | halt: 
2827 | halt: 
2828 | halt: 
2829 | halt: 
2830 | halt: 
2831 | halt: 
2832 | halt: 
2833 | halt: 
2834 | halt: 
2835 | halt: 
2836 | halt: 
2837 | halt: 
2838 | halt: 
2839 | halt: 
2840 | halt: 
2841 | halt: 
2842 | halt: 
2843 | halt: 
2844 | halt: 
2845 | halt: 
2846 | halt: 
2847 | halt: 
2848 | halt: 
2849 | halt: 
2850 | halt: 
2851 | halt: 
2852 | halt: 
2853 | halt: 
2854 | halt: 
2855 | halt: 
2856 | halt: 
2857 | halt: 
2858 | halt: 
2859 | halt: 
2860 | halt: 
2861 | halt: 
2862 | halt: 
2863 | halt: 
2864 | halt: 
2865 | halt: 
2866 | halt: 
2867 | halt: 
2868 | halt: 
2869 | halt: 
2870 | halt: 
2871 | halt: 
2872 | halt: 
2873 | halt: 
2874 | halt: 
2875 | halt: 
2876 | halt: 
2877 | halt: 
2878 | halt: 
2879 | halt: 
2880 | halt: 
2881 | halt: 
2882 | halt: 
2883 | halt: 
2884 | halt: 
2885 | halt: 
2886 | halt: 
2887 | halt: 
2888 | halt: 
2889 | halt: 
2890 | halt: 
2891 | halt: 
2892 | halt: 
2893 | halt: 
2894 | halt: 
2895 | halt: 
2896 | halt: 
2897 | halt: 
2898 | halt: 
2899 | halt: 
2900 | halt: 
2901 | halt: 
2902 | halt: 
2903 | halt: 
2904 | halt: 
2905 | halt: 
2906 | halt: 
2907 | halt: 
2908 | halt: 
2909 | halt: 
2910 | halt: 
2911 | halt: 
2912 | halt: 
2913 | halt: 
2914 | halt: 
2915 | halt: 
2916 | halt: 
2917 | halt: 
2918 | halt: 
2919 | halt: 
2920 | halt: 
2921 | halt: 
2922 | halt: 
2923 | halt: 
2924 | halt: 
2925 | halt: 
2926 | halt: 
2927 | halt: 
2928 | halt: 
2929 | halt: 
2930 | halt: 
2931 | halt: 
2932 | halt: 
2933 | halt: 
2934 | halt: 
2935 | halt: 
2936 | halt: 
2937 | halt: 
2938 | halt: 
2939 | halt: 
2940 | halt: 
2941 | halt: 
2942 | halt: 
2943 | halt: 
2944 | halt: 
2945 | halt: 
2946 | halt: 
2947 | halt: 
2948 | halt: 
2949 | halt: 
2950 | halt: 
2951 | halt: 
2952 | halt: 
2953 | halt: 
2954 | halt: 
2955 | halt: 
2956 | halt: 
2957 | halt: 
2958 | halt: 
2959 | halt: 
2960 | halt: 
2961 | halt: 
2962 | halt: 
2963 | halt: 
2964 | halt: 
2965 | halt: 
2966 | halt: 
2967 | halt: 
2968 | halt: 
2969 | halt: 
2970 | halt: 
2971 | halt: 
2972 | halt: 
2973 | halt: 
2974 | halt: 
2975 | halt: 
2976 | halt: 
2977 | halt: 
2978 | halt: 
2979 | halt: 
2980 | halt: 
2981 | halt: 
2982 | halt: 
2983 | halt: 
2984 | halt: 
2985 | halt: 
2986 | halt: 
2987 | halt: 
2988 | halt: 
2989 | halt: 
2990 | halt: 
2991 | halt: 
2992 | halt: 
2993 | halt: 
2994 | halt: 
2995 | halt: 
2996 | halt: 
2997 | halt: 
2998 | halt: 
2999 | halt: 
3000 | halt: 
3001 | halt: 
3002 | halt: 
3003 | halt: 
3004 | halt: 
3005 | halt: 
3006 | halt: 
3007 | halt: 
3008 | halt: 
3009 | halt: 
3010 | halt: 
3011 | halt: 
3012 | halt: 
3013 | halt: 
3014 | halt: 
3015 | halt: 
3016 | halt: 
3017 | halt: 
3018 | halt: 
3019 | halt: 
3020 | halt: 
3021 | halt: 
3022 | halt: 
3023 | halt: 
3024 | halt: 
3025 | halt: 
3026 | halt: 
3027 | halt: 
3028 | halt: 
3029 | halt: 
3030 | halt: 
3031 | halt: 
3032 | halt: 
3033 | halt: 
3034 | halt: 
3035 | halt: 
3036 | halt: 
3037 | halt: 
3038 | halt: 
3039 | halt: 
3040 | halt: 
3041 | halt: 
3042 | halt: 
3043 | halt: 
3044 | halt: 
3045 | halt: 
3046 | halt: 
3047 | halt: 
3048 | halt: 
3049 | halt: 
3050 | halt: 
3051 | halt: 
3052 | halt: 
3053 | halt: 
3054 | halt: 
3055 | halt: 
3056 | halt: 
3057 | halt: 
3058 | halt: 
3059 | halt: 
3060 | halt: 
3061 | halt: 
3062 | halt: 
3063 | halt: 
3064 | halt: 
3065 | halt: 
3066 | halt: 
3067 | halt: 
3068 | halt: 
3069 | halt: 
3070 | halt: 
3071 | halt: 
3072 | halt: 
3073 | halt: 
3074 | halt: 
3075 | halt: 
3076 | halt: 
3077 | halt: 
3078 | halt: 
3079 | halt: 
3080 | halt: 
3081 | halt: 
3082 | halt: 
3083 | halt: 
3084 | halt: 
3085 | halt: 
3086 | halt: 
3087 | halt: 
3088 | halt: 
3089 | halt: 
3090 | halt: 
3091 | halt: 
3092 | halt: 
3093 | halt: 
3094 | halt: 
3095 | halt: 
3096 | halt: 
3097 | halt: 
3098 | halt: 
3099 | halt: 
3100 | halt: 
3101 | halt: 
3102 | halt: 
3103 | halt: 
3104 | halt: 
3105 | halt: 
3106 | halt: 
3107 | halt: 
3108 | halt: 
3109 | halt: 
3110 | halt: 
3111 | halt: 
3112 | halt: 
3113 | halt: 
3114 | halt: 
3115 | halt: 
3116 | halt: 
3117 | halt: 
3118 | halt: 
3119 | halt: 
3120 | halt: 
3121 | halt: 
3122 | halt: 
3123 | halt: 
3124 | halt: 
3125 | halt: 
3126 | halt: 
3127 | halt: 
3128 | halt: 
3129 | halt: 
3130 | halt: 
3131 | halt: 
3132 | halt: 
3133 | halt: 
3134 | halt: 
3135 | halt: 
3136 | halt: 
3137 | halt: 
3138 | halt: 
3139 | halt: 
3140 | halt: 
3141 | halt: 
3142 | halt: 
3143 | halt: 
3144 | halt: 
3145 | halt: 
3146 | halt: 
3147 | halt: 
3148 | halt: 
3149 | halt: 
3150 | halt: 
3151 | halt: 
3152 | halt: 
3153 | halt: 
3154 | halt: 
3155 | halt: 
3156 | halt: 
3157 | halt: 
3158 | halt: 
3159 | halt: 
3160 | halt: 
3161 | halt: 
3162 | halt: 
3163 | halt: 
3164 | halt: 
3165 | halt: 
3166 | halt: 
3167 | halt: 
3168 | halt: 
3169 | halt: 
3170 | halt: 
3171 | halt: 
3172 | halt: 
3173 | halt: 
3174 | halt: 
3175 | halt: 
3176 | halt: 
3177 | halt: 
3178 | halt: 
3179 | halt: 
3180 | halt: 
3181 | halt: 
3182 | halt: 
3183 | halt: 
3184 | halt: 
3185 | halt: 
3186 | halt: 
3187 | halt: 
3188 | halt: 
3189 | halt: 
3190 | halt: 
3191 | halt: 
3192 | halt: 
3193 | halt: 
3194 | halt: 
3195 | halt: 
3196 | halt: 
3197 | halt: 
3198 | halt: 
3199 | halt: 
3200 | halt: 
3201 | halt: 
3202 | halt: 
3203 | halt: 
3204 | halt: 
3205 | halt: 
3206 | halt: 
3207 | halt: 
3208 | halt: 
3209 | halt: 
3210 | halt: 
3211 | halt: 
3212 | halt: 
3213 | halt: 
3214 | halt: 
3215 | halt: 
3216 | halt: 
3217 | halt: 
3218 | halt: 
3219 | halt: 
3220 | halt: 
3221 | halt: 
3222 | halt: 
3223 | halt: 
3224 | halt: 
3225 | halt: 
3226 | halt: 
3227 | halt: 
3228 | halt: 
3229 | halt: 
3230 | halt: 
3231 | halt: 
3232 | halt: 
3233 | halt: 
3234 | halt: 
3235 | halt: 
3236 | halt: 
3237 | halt: 
3238 | halt: 
3239 | halt: 
3240 | halt: 
3241 | halt: 
3242 | halt: 
3243 | halt: 
3244 | halt: 
3245 | halt: 
3246 | halt: 
3247 | halt: 
3248 | halt: 
3249 | halt: 
3250 | halt: 
3251 | halt: 
3252 | halt: 
3253 | halt: 
3254 | halt: 
3255 | halt: 
3256 | halt: 
3257 | halt: 
3258 | halt: 
3259 | halt: 
3260 | halt: 
3261 | halt: 
3262 | halt: 
3263 | halt: 
3264 | halt: 
3265 | halt: 
3266 | halt: 
3267 | halt: 
3268 | halt: 
3269 | halt: 
3270 | halt: 
3271 | halt: 
3272 | halt: 
3273 | halt: 
3274 | halt: 
3275 | halt: 
3276 | halt: 
3277 | halt: 
3278 | halt: 
3279 | halt: 
3280 | halt: 
3281 | halt: 
3282 | halt: 
3283 | halt: 
3284 | halt: 
3285 | halt: 
3286 | halt: 
3287 | halt: 
3288 | halt: 
3289 | halt: 
3290 | halt: 
3291 | halt: 
3292 | halt: 
3293 | halt: 
3294 | halt: 
3295 | halt: 
3296 | halt: 
3297 | halt: 
3298 | halt: 
3299 | halt: 
3300 | halt: 
3301 | halt: 
3302 | halt: 
3303 | halt: 
3304 | halt: 
3305 | halt: 
3306 | halt: 
3307 | halt: 
3308 | halt: 
3309 | halt: 
3310 | halt: 
3311 | halt: 
3312 | halt: 
3313 | halt: 
3314 | halt: 
3315 | halt: 
3316 | halt: 
3317 | halt: 
3318 | halt: 
3319 | halt: 
3320 | halt: 
3321 | halt: 
3322 | halt: 
3323 | halt: 
3324 | halt: 
3325 | halt: 
3326 | halt: 
3327 | halt: 
3328 | halt: 
3329 | halt: 
3330 | halt: 
3331 | halt: 
3332 | halt: 
3333 | halt: 
3334 | halt: 
3335 | halt: 
3336 | halt: 
3337 | halt: 
3338 | halt: 
3339 | halt: 
3340 | halt: 
3341 | halt: 
3342 | halt: 
3343 | halt: 
3344 | halt: 
3345 | halt: 
3346 | halt: 
3347 | halt: 
3348 | halt: 
3349 | halt: 
3350 | halt: 
3351 | halt: 
3352 | halt: 
3353 | halt: 
3354 | halt: 
3355 | halt: 
3356 | halt: 
3357 | halt: 
3358 | halt: 
3359 | halt: 
3360 | halt: 
3361 | halt: 
3362 | halt: 
3363 | halt: 
3364 | halt: 
3365 | halt: 
3366 | halt: 
3367 | halt: 
3368 | halt: 
3369 | halt: 
3370 | halt: 
3371 | halt: 
3372 | halt: 
3373 | halt: 
3374 | halt: 
3375 | halt: 
3376 | halt: 
3377 | halt: 
3378 | halt: 
3379 | halt: 
3380 | halt: 
3381 | halt: 
3382 | halt: 
3383 | halt: 
3384 | halt: 
3385 | halt: 
3386 | halt: 
3387 | halt: 
3388 | halt: 
3389 | halt: 
3390 | halt: 
3391 | halt: 
3392 | halt: 
3393 | halt: 
3394 | halt: 
3395 | halt: 
3396 | halt: 
3397 | halt: 
3398 | halt: 
3399 | halt: 
3400 | halt: 
3401 | halt: 
3402 | halt: 
3403 | halt: 
3404 | halt: 
3405 | halt: 
3406 | halt: 
3407 | halt: 
3408 | halt: 
3409 | halt: 
3410 | halt: 
3411 | halt: 
3412 | halt: 
3413 | halt: 
3414 | halt: 
3415 | halt: 
3416 | halt: 
3417 | halt: 
3418 | halt: 
3419 | halt: 
3420 | halt: 
3421 | halt: 
3422 | halt: 
3423 | halt: 
3424 | halt: 
3425 | halt: 
3426 | halt: 
3427 | halt: 
3428 | halt: 
3429 | halt: 
3430 | halt: 
3431 | halt: 
3432 | halt: 
3433 | halt: 
3434 | halt: 
3435 | halt: 
3436 | halt: 
3437 | halt: 
3438 | halt: 
3439 | halt: 
3440 | halt: 
3441 | halt: 
3442 | halt: 
3443 | halt: 
3444 | halt: 
3445 | halt: 
3446 | halt: 
3447 | halt: 
3448 | halt: 
3449 | halt: 
3450 | halt: 
3451 | halt: 
3452 | halt: 
3453 | halt: 
3454 | halt: 
3455 | halt: 
3456 | halt: 
3457 | halt: 
3458 | halt: 
3459 | halt: 
3460 | halt: 
3461 | halt: 
3462 | halt: 
3463 | halt: 
3464 | halt: 
3465 | halt: 
3466 | halt: 
3467 | halt: 
3468 | halt: 
3469 | halt: 
3470 | halt: 
3471 | halt: 
3472 | halt: 
3473 | halt: 
3474 | halt: 
3475 | halt: 
3476 | halt: 
3477 | halt: 
3478 | halt: 
3479 | halt: 
3480 | halt: 
3481 | halt: 
3482 | halt: 
3483 | halt: 
3484 | halt: 
3485 | halt: 
3486 | halt: 
3487 | halt: 
3488 | halt: 
3489 | halt: 
3490 | halt: 
3491 | halt: 
3492 | halt: 
3493 | halt: 
3494 | halt: 
3495 | halt: 
3496 | halt: 
3497 | halt: 
3498 | halt: 
3499 | halt: 
3500 | halt: 
3501 | halt: 
3502 | halt: 
3503 | halt: 
3504 | halt: 
3505 | halt: 
3506 | halt: 
3507 | halt: 
3508 | halt: 
3509 | halt: 
3510 | halt: 
3511 | halt: 
3512 | halt: 
3513 | halt: 
3514 | halt: 
3515 | halt: 
3516 | halt: 
3517 | halt: 
3518 | halt: 
3519 | halt: 
3520 | halt: 
3521 | halt: 
3522 | halt: 
3523 | halt: 
3524 | halt: 
3525 | halt: 
3526 | halt: 
3527 | halt: 
3528 | halt: 
3529 | halt: 
3530 | halt: 
3531 | halt: 
3532 | halt: 
3533 | halt: 
3534 | halt: 
3535 | halt: 
3536 | halt: 
3537 | halt: 
3538 | halt: 
3539 | halt: 
3540 | halt: 
3541 | halt: 
3542 | halt: 
3543 | halt: 
3544 | halt: 
3545 | halt: 
3546 | halt: 
3547 | halt: 
3548 | halt: 
3549 | halt: 
3550 | halt: 
3551 | halt: 
3552 | halt: 
3553 | halt: 
3554 | halt: 
3555 | halt: 
3556 | halt: 
3557 | halt: 
3558 | halt: 
3559 | halt: 
3560 | halt: 
3561 | halt: 
3562 | halt: 
3563 | halt: 
3564 | halt: 
3565 | halt: 
3566 | halt: 
3567 | halt: 
3568 | halt: 
3569 | halt: 
3570 | halt: 
3571 | halt: 
3572 | halt: 
3573 | halt: 
3574 | halt: 
3575 | halt: 
3576 | halt: 
3577 | halt: 
3578 | halt: 
3579 | halt: 
3580 | halt: 
3581 | halt: 
3582 | halt: 
3583 | halt: 
3584 | halt: 
3585 | halt: 
3586 | halt: 
3587 | halt: 
3588 | halt: 
3589 | halt: 
3590 | halt: 
3591 | halt: 
3592 | halt: 
3593 | halt: 
3594 | halt: 
3595 | halt: 
3596 | halt: 
3597 | halt: 
3598 | halt: 
3599 | halt: 
3600 | halt: 
3601 | halt: 
3602 | halt: 
3603 | halt: 
3604 | halt: 
3605 | halt: 
3606 | halt: 
3607 | halt: 
3608 | halt: 
3609 | halt: 
3610 | halt: 
3611 | halt: 
3612 | halt: 
3613 | halt: 
3614 | halt: 
3615 | halt: 
3616 | halt: 
3617 | halt: 
3618 | halt: 
3619 | halt: 
3620 | halt: 
3621 | halt: 
3622 | halt: 
3623 | halt: 
3624 | halt: 
3625 | halt: 
3626 | halt: 
3627 | halt: 
3628 | halt: 
3629 | halt: 
3630 | halt: 
3631 | halt: 
3632 | halt: 
3633 | halt: 
3634 | halt: 
3635 | halt: 
3636 | halt: 
3637 | halt: 
3638 | halt: 
3639 | halt: 
3640 | halt: 
3641 | halt: 
3642 | halt: 
3643 | halt: 
3644 | halt: 
3645 | halt: 
3646 | halt: 
3647 | halt: 
3648 | halt: 
3649 | halt: 
3650 | halt: 
3651 | halt: 
3652 | halt: 
3653 | halt: 
3654 | halt: 
3655 | halt: 
3656 | halt: 
3657 | halt: 
3658 | halt: 
3659 | halt: 
3660 | halt: 
3661 | halt: 
3662 | halt: 
3663 | halt: 
3664 | halt: 
3665 | halt: 
3666 | halt: 
3667 | halt: 
3668 | halt: 
3669 | halt: 
3670 | halt: 
3671 | halt: 
3672 | halt: 
3673 | halt: 
3674 | halt: 
3675 | halt: 
3676 | halt: 
3677 | halt: 
3678 | halt: 
3679 | halt: 
3680 | halt: 
3681 | halt: 
3682 | halt: 
3683 | halt: 
3684 | halt: 
3685 | halt: 
3686 | halt: 
3687 | halt: 
3688 | halt: 
3689 | halt: 
3690 | halt: 
3691 | halt: 
3692 | halt: 
3693 | halt: 
3694 | halt: 
3695 | halt: 
3696 | halt: 
3697 | halt: 
3698 | halt: 
3699 | halt: 
3700 | halt: 
3701 | halt: 
3702 | halt: 
3703 | halt: 
3704 | halt: 
3705 | halt: 
3706 | halt: 
3707 | halt: 
3708 | halt: 
3709 | halt: 
3710 | halt: 
3711 | halt: 
3712 | halt: 
3713 | halt: 
3714 | halt: 
3715 | halt: 
3716 | halt: 
3717 | halt: 
3718 | halt: 
3719 | halt: 
3720 | halt: 
3721 | halt: 
3722 | halt: 
3723 | halt: 
3724 | halt: 
3725 | halt: 
3726 | halt: 
3727 | halt: 
3728 | halt: 
3729 | halt: 
3730 | halt: 
3731 | halt: 
3732 | halt: 
3733 | halt: 
3734 | halt: 
3735 | halt: 
3736 | halt: 
3737 | halt: 
3738 | halt: 
3739 | halt: 
3740 | halt: 
3741 | halt: 
3742 | halt: 
3743 | halt: 
3744 | halt: 
3745 | halt: 
3746 | halt: 
3747 | halt: 
3748 | halt: 
3749 | halt: 
3750 | halt: 
3751 | halt: 
3752 | halt: 
3753 | halt: 
3754 | halt: 
3755 | halt: 
3756 | halt: 
3757 | halt: 
3758 | halt: 
3759 | halt: 
3760 | halt: 
3761 | halt: 
3762 | halt: 
3763 | halt: 
3764 | halt: 
3765 | halt: 
3766 | halt: 
3767 | halt: 
3768 | halt: 
3769 | halt: 
3770 | halt: 
3771 | halt: 
3772 | halt: 
3773 | halt: 
3774 | halt: 
3775 | halt: 
3776 | halt: 
3777 | halt: 
3778 | halt: 
3779 | halt: 
3780 | halt: 
3781 | halt: 
3782 | halt: 
3783 | halt: 
3784 | halt: 
3785 | halt: 
3786 | halt: 
3787 | halt: 
3788 | halt: 
3789 | halt: 
3790 | halt: 
3791 | halt: 
3792 | halt: 
3793 | halt: 
3794 | halt: 
3795 | halt: 
3796 | halt: 
3797 | halt: 
3798 | halt: 
3799 | halt: 
3800 | halt: 
3801 | halt: 
3802 | halt: 
3803 | halt: 
3804 | halt: 
3805 | halt: 
3806 | halt: 
3807 | halt: 
3808 | halt: 
3809 | halt: 
3810 | halt: 
3811 | halt: 
3812 | halt: 
3813 | halt: 
3814 | halt: 
3815 | halt: 
3816 | halt: 
3817 | halt: 
3818 | halt: 
3819 | halt: 
3820 | halt: 
3821 | halt: 
3822 | halt: 
3823 | halt: 
3824 | halt: 
3825 | halt: 
3826 | halt: 
3827 | halt: 
3828 | halt: 
3829 | halt: 
3830 | halt: 
3831 | halt: 
3832 | halt: 
3833 | halt: 
3834 | halt: 
3835 | halt: 
3836 | halt: 
3837 | halt: 
3838 | halt: 
3839 | halt: 
3840 | halt: 
3841 | halt: 
3842 | halt: 
3843 | halt: 
3844 | halt: 
3845 | halt: 
3846 | halt: 
3847 | halt: 
3848 | halt: 
3849 | halt: 
3850 | halt: 
3851 | halt: 
3852 | halt: 
3853 | halt: 
3854 | halt: 
3855 | halt: 
3856 | halt: 
3857 | halt: 
3858 | halt: 
3859 | halt: 
3860 | halt: 
3861 | halt: 
3862 | halt: 
3863 | halt: 
3864 | halt: 
3865 | halt: 
3866 | halt: 
3867 | halt: 
3868 | halt: 
3869 | halt: 
3870 | halt: 
3871 | halt: 
3872 | halt: 
3873 | halt: 
3874 | halt: 
3875 | halt: 
3876 | halt: 
3877 | halt: 
3878 | halt: 
3879 | halt: 
3880 | halt: 
3881 | halt: 
3882 | halt: 
3883 | halt: 
3884 | halt: 
3885 | halt: 
3886 | halt: 
3887 | halt: 
3888 | halt: 
3889 | halt: 
3890 | halt: 
3891 | halt: 
3892 | halt: 
3893 | halt: 
3894 | halt: 
3895 | halt: 
3896 | halt: 
3897 | halt: 
3898 | halt: 
3899 | halt: 
3900 | halt: 
3901 | halt: 
3902 | halt: 
3903 | halt: 
3904 | halt: 
3905 | halt: 
3906 | halt: 
3907 | halt: 
3908 | halt: 
3909 | halt: 
3910 | halt: 
3911 | halt: 
3912 | halt: 
3913 | halt: 
3914 | halt: 
3915 | halt: 
3916 | halt: 
3917 | halt: 
3918 | halt: 
3919 | halt: 
3920 | halt: 
3921 | halt: 
3922 | halt: 
3923 | halt: 
3924 | halt: 
3925 | halt: 
3926 | halt: 
3927 | halt: 
3928 | halt: 
3929 | halt: 
3930 | halt: 
3931 | halt: 
3932 | halt: 
3933 | halt: 
3934 | halt: 
3935 | halt: 
3936 | halt: 
3937 | halt: 
3938 | halt: 
3939 | halt: 
3940 | halt: 
3941 | halt: 
3942 | halt: 
3943 | halt: 
3944 | halt: 
3945 | halt: 
3946 | halt: 
3947 | halt: 
3948 | halt: 
3949 | halt: 
3950 | halt: 
3951 | halt: 
3952 | halt: 
3953 | halt: 
3954 | halt: 
3955 | halt: 
3956 | halt: 
3957 | halt: 
3958 | halt: 
3959 | halt: 
3960 | halt: 
3961 | halt: 
3962 | halt: 
3963 | halt: 
3964 | halt: 
3965 | halt: 
3966 | halt: 
3967 | halt: 
3968 | halt: 
3969 | halt: 
3970 | halt: 
3971 | halt: 
3972 | halt: 
3973 | halt: 
3974 | halt: 
3975 | halt: 
3976 | halt: 
3977 | halt: 
3978 | halt: 
3979 | halt: 
3980 | halt: 
3981 | halt: 
3982 | halt: 
3983 | halt: 
3984 | halt: 
3985 | halt: 
3986 | halt: 
3987 | halt: 
3988 | halt: 
3989 | halt: 
3990 | halt: 
3991 | halt: 
3992 | halt: 
3993 | halt: 
3994 | halt: 
3995 | halt: 
3996 | halt: 
3997 | halt: 
3998 | halt: 
3999 | halt: 
4000 | halt: 
4001 | halt: 
4002 | halt: 
4003 | halt: 
4004 | halt: 
4005 | halt: 
4006 | halt: 
4007 | halt: 
4008 | halt: 
4009 | halt: 
4010 | halt: 
4011 | halt: 
4012 | halt: 
4013 | halt: 
4014 | halt: 
4015 | halt: 
4016 | halt: 
4017 | halt: 
4018 | halt: 
4019 | halt: 
4020 | halt: 
4021 | halt: 
4022 | halt: 
4023 | halt: 
4024 | halt: 
4025 | halt: 
4026 | halt: 
4027 | halt: 
4028 | halt: 
4029 | halt: 
4030 | push: push(0);
4031 | halt: 
4032 | halt: 
4033 | halt: 
4034 | halt: 
4035 | halt: 
4036 | halt: 
4037 | halt: 
4038 | halt: 
4039 | halt: 
4040 | halt: 
4041 | halt: 
4042 | halt: 
4043 | halt: 
4044 | halt: 
4045 | halt: 
4046 | halt: 
4047 | halt: 
4048 | gt: if (0 > 0) { 0 == 1 } else { 0 == 0 }
4049 | halt: 
4050 | halt: 
4051 | halt: 
4052 | halt: 
4053 | halt: 
4054 | halt: 
4055 | halt: 
4056 | halt: 
4057 | halt: 
4058 | halt: 
4059 | pop: 0 = pop();
4060 | halt: 
4061 | halt: 
4062 | halt: 
4063 | halt: 
4064 | halt: 
4065 | halt: 
4066 | halt: 
4067 | halt: 
4068 | halt: 
4069 | halt: 
4070 | halt: 
4071 | halt: 
4072 | halt: 
4073 | halt: 
4074 | halt: 
4075 | halt: 
4076 | halt: 
4077 | halt: 
4078 | halt: 
4079 | halt: 
4080 | halt: 
4081 | halt: 
4082 | halt: 
4083 | halt: 
4084 | halt: 
4085 | halt: 
4086 | halt: 
4087 | halt: 
4088 | halt: 
4089 | halt: 
4090 | halt: 
4091 | halt: 
4092 | halt: 
4093 | halt: 
4094 | halt: 
4095 | halt: 
4096 | halt: 
4097 | halt: 
4098 | halt: 
4099 | halt: 
4100 | halt: 
4101 | halt: 
4102 | halt: 
4103 | halt: 
4104 | halt: 
4105 | halt: 
4106 | halt: 
4107 | halt: 
4108 | halt: 
4109 | halt: 
4110 | halt: 
4111 | halt: 
4112 | halt: 
4113 | halt: 
4114 | halt: 
4115 | halt: 
4116 | halt: 
4117 | halt: 
4118 | halt: 
4119 | halt: 
4120 | halt: 
4121 | halt: 
4122 | halt: 
4123 | halt: 
4124 | halt: 
4125 | halt: 
4126 | halt: 
4127 | halt: 
4128 | halt: 
4129 | halt: 
4130 | halt: 
4131 | halt: 
4132 | halt: 
4133 | halt: 
4134 | halt: 
4135 | halt: 
4136 | halt: 
4137 | halt: 
4138 | halt: 
4139 | halt: 
4140 | halt: 
4141 | halt: 
4142 | halt: 
4143 | halt: 
4144 | halt: 
4145 | halt: 
4146 | halt: 
4147 | halt: 
4148 | halt: 
4149 | halt: 
4150 | halt: 
4151 | halt: 
4152 | halt: 
4153 | halt: 
4154 | halt: 
4155 | halt: 
4156 | halt: 
4157 | halt: 
4158 | halt: 
4159 | halt: 
4160 | halt: 
4161 | halt: 
4162 | halt: 
4163 | halt: 
4164 | halt: 
4165 | halt: 
4166 | halt: 
4167 | halt: 
4168 | halt: 
4169 | halt: 
4170 | halt: 
4171 | halt: 
4172 | halt: 
4173 | halt: 
4174 | halt: 
4175 | halt: 
4176 | halt: 
4177 | halt: 
4178 | halt: 
4179 | halt: 
4180 | halt: 
4181 | halt: 
4182 | halt: 
4183 | halt: 
4184 | halt: 
4185 | halt: 
4186 | halt: 
4187 | halt: 
4188 | halt: 
4189 | halt: 
4190 | add: 0 = 0 + 0
4191 | halt: 
4192 | halt: 
4193 | halt: 
4194 | halt: 
4195 | halt: 
4196 | halt: 
4197 | halt: 
4198 | halt: 
4199 | halt: 
4200 | mult: 0 = 0 * 0
4201 | halt: 
4202 | halt: 
4203 | halt: 
4204 | halt: 
4205 | halt: 
4206 | halt: 
4207 | halt: 
4208 | halt: 
4209 | halt: 
4210 | halt: 
4211 | halt: 
4212 | halt: 
4213 | halt: 
4214 | halt: 
4215 | halt: 
4216 | halt: 
4217 | halt: 
4218 | halt: 
4219 | set: 0 = 0
4220 | halt: 
4221 | halt: 
4222 | halt: 
4223 | halt: 
4224 | halt: 
4225 | halt: 
4226 | halt: 
4227 | halt: 
4228 | halt: 
4229 | halt: 
4230 | halt: 
4231 | halt: 
4232 | halt: 
4233 | jmp: go to memory[1]
4234 | halt: 
4235 | jmp: go to memory[0]
4236 | halt: 
4237 | halt: 
4238 | halt: 
4239 | halt: 
4240 | halt: 
4241 | halt: 
4242 | pop: 0 = pop();
4243 | halt: 
4244 | halt: 
4245 | halt: 
4246 | halt: 
4247 | halt: 
4248 | halt: 
4249 | halt: 
4250 | jmp: go to memory[0]
4251 | halt: 
4252 | set: 0 = 0
4253 | halt: 
4254 | halt: 
4255 | halt: 
4256 | halt: 
4257 | halt: 
4258 | halt: 
4259 | halt: 
4260 | halt: 
4261 | halt: 
4262 | halt: 
4263 | halt: 
4264 | halt: 
4265 | halt: 
4266 | halt: 
4267 | halt: 
4268 | halt: 
4269 | halt: 
4270 | halt: 
4271 | halt: 
4272 | halt: 
4273 | halt: 
4274 | halt: 
4275 | halt: 
4276 | halt: 
4277 | halt: 
4278 | halt: 
4279 | halt: 
4280 | halt: 
4281 | halt: 
4282 | halt: 
4283 | halt: 
4284 | halt: 
4285 | halt: 
4286 | halt: 
4287 | halt: 
4288 | halt: 
4289 | halt: 
4290 | halt: 
4291 | halt: 
4292 | halt: 
4293 | halt: 
4294 | halt: 
4295 | halt: 
4296 | halt: 
4297 | halt: 
4298 | halt: 
4299 | halt: 
4300 | halt: 
4301 | halt: 
4302 | halt: 
4303 | halt: 
4304 | halt: 
4305 | halt: 
4306 | halt: 
4307 | halt: 
4308 | halt: 
4309 | halt: 
4310 | halt: 
4311 | halt: 
4312 | halt: 
4313 | halt: 
4314 | halt: 
4315 | halt: 
4316 | set: 0 = 0
4317 | halt: 
4318 | halt: 
4319 | halt: 
4320 | halt: 
4321 | halt: 
4322 | halt: 
4323 | halt: 
4324 | halt: 
4325 | halt: 
4326 | halt: 
4327 | halt: 
4328 | halt: 
4329 | halt: 
4330 | halt: 
4331 | halt: 
4332 | halt: 
4333 | set: 0 = 10
4334 | halt: 
4335 | halt: 
4336 | halt: 
4337 | halt: 
4338 | halt: 
4339 | halt: 
4340 | halt: 
4341 | halt: 
4342 | halt: 
4343 | halt: 
4344 | halt: 
4345 | halt: 
4346 | halt: 
4347 | halt: 
4348 | halt: 
4349 | halt: 
4350 | halt: 
4351 | halt: 
4352 | halt: 
4353 | halt: 
4354 | halt: 
4355 | halt: 
4356 | halt: 
4357 | halt: 
4358 | halt: 
4359 | halt: 
4360 | halt: 
4361 | halt: 
4362 | halt: 
4363 | halt: 
4364 | halt: 
4365 | halt: 
4366 | halt: 
4367 | halt: 
4368 | halt: 
4369 | halt: 
4370 | halt: 
4371 | halt: 
4372 | halt: 
4373 | pop: 62 = pop();
4374 | set: 0 = 4832
4375 | push: push(0);
4376 | halt: 
4377 | halt: 
4378 | halt: 
4379 | halt: 
4380 | halt: 
4381 | halt: 
4382 | halt: 
4383 | halt: 
4384 | mult: 64 = 73 * 72
4385 | jmp: go to memory[0]
4386 | gt: if (64 > 0) { 0 == 1 } else { 0 == 0 }
4387 | halt: 
4388 | halt: 
4389 | halt: 
4390 | halt: 
4391 | halt: 
4392 | halt: 
4393 | halt: 
4394 | halt: 
4395 | halt: 
4396 | halt: 
4397 | halt: 
4398 | halt: 
4399 | halt: 
4400 | jt: if (0 == 0 { go to 0 }
4401 | halt: 
4402 | pop: 0 = pop();
4403 | eq: if (r23792 == 26) { 0 == 1 } else { 0 == 0 }
4404 | halt: 
4405 | halt: 
4406 | halt: 
4407 | halt: 
4408 | halt: 
4409 | halt: 
4410 | halt: 
4411 | halt: 
4412 | halt: 
4413 | halt: 
4414 | halt: 
4415 | wmem: memory[0] = 0
4416 | halt: 
4417 | set: 0 = 5
4418 | halt: 
4419 | halt: 
4420 | halt: 
4421 | halt: 
4422 | halt: 
4423 | halt: 
4424 | halt: 
4425 | halt: 
4426 | halt: 
4427 | halt: 
4428 | halt: 
4429 | halt: 
4430 | halt: 
4431 | halt: 
4432 | halt: 
4433 | halt: 
4434 | halt: 
4435 | halt: 
4436 | halt: 
4437 | halt: 
4438 | set: 0 = 6
4439 | halt: 
4440 | halt: 
4441 | halt: 
4442 | halt: 
4443 | halt: 
4444 | halt: 
4445 | halt: 
4446 | halt: 
4447 | halt: 
4448 | halt: 
4449 | halt: 
4450 | halt: 
4451 | halt: 
4452 | halt: 
4453 | halt: 
4454 | halt: 
4455 | push: push(0);
4456 | jmp: go to memory[0]
4457 | halt: 
4458 | halt: 
4459 | halt: 
4460 | halt: 
4461 | halt: 
4462 | halt: 
4463 | halt: 
4464 | halt: 
4465 | halt: 
4466 | halt: 
4467 | halt: 
4468 | halt: 
4469 | jt: if (0 == 0 { go to 0 }
4470 | halt: 
4471 | eq: if (4 == 0) { 0 == 1 } else { 0 == 0 }
4472 | halt: 
4473 | halt: 
4474 | halt: 
4475 | halt: 
4476 | halt: 
4477 | halt: 
4478 | halt: 
4479 | halt: 
4480 | halt: 
4481 | halt: 
4482 | halt: 
4483 | halt: 
4484 | halt: 
4485 | halt: 
4486 | halt: 
4487 | eq: if (0 == 0) { 0 == 1 } else { 0 == 0 }
4488 | halt: 
4489 | eq: if (26456 == 29) { 0 == 1 } else { 0 == 0 }
4490 | halt: 
4491 | halt: 
4492 | halt: 
4493 | halt: 
4494 | halt: 
4495 | wmem: memory[0] = 0
4496 | halt: 
4497 | halt: 
4498 | halt: 
4499 | halt: 
4500 | jt: if (0 == 0 { go to 0 }
4501 | halt: 
4502 | eq: if (r23820 == 26) { 0 == 1 } else { 0 == 0 }
4503 | halt: 
4504 | halt: 
4505 | halt: 
4506 | halt: 
4507 | halt: 
4508 | halt: 
4509 | halt: 
4510 | halt: 
4511 | halt: 
4512 | halt: 
4513 | halt: 
4514 | eq: if (0 == 0) { 0 == 1 } else { 0 == 0 }
4515 | jmp: go to memory[0]
4516 | halt: 
4517 | halt: 
4518 | halt: 
4519 | halt: 
4520 | halt: 
4521 | halt: 
4522 | halt: 
4523 | halt: 
4524 | halt: 
4525 | halt: 
4526 | halt: 
4527 | halt: 
4528 | halt: 
4529 | halt: 
4530 | push: push(0);
4531 | halt: 
4532 | halt: 
4533 | halt: 
4534 | halt: 
4535 | halt: 
4536 | halt: 
4537 | push: push(0);
4538 | halt: 
4539 | halt: 
4540 | halt: 
4541 | halt: 
4542 | halt: 
4543 | halt: 
4544 | halt: 
4545 | halt: 
4546 | halt: 
4547 | halt: 
4548 | halt: 
4549 | halt: 
4550 | halt: 
4551 | halt: 
4552 | halt: 
4553 | halt: 
4554 | halt: 
4555 | halt: 
4556 | halt: 
4557 | halt: 
4558 | halt: 
4559 | halt: 
4560 | halt: 
4561 | halt: 
4562 | halt: 
4563 | set: 0 = 0
4564 | halt: 
4565 | halt: 
4566 | halt: 
4567 | halt: 
4568 | halt: 
4569 | halt: 
4570 | halt: 
4571 | halt: 
4572 | halt: 
4573 | halt: 
4574 | halt: 
4575 | halt: 
4576 | halt: 
4577 | halt: 
4578 | halt: 
4579 | halt: 
4580 | halt: 
4581 | halt: 
4582 | halt: 
4583 | pop: 0 = pop();
4584 | halt: 
4585 | halt: 
4586 | halt: 
4587 | halt: 
4588 | halt: 
4589 | halt: 
4590 | halt: 
4591 | halt: 
4592 | halt: 
4593 | halt: 
4594 | halt: 
4595 | halt: 
4596 | halt: 
4597 | halt: 
4598 | halt: 
4599 | halt: 
4600 | halt: 
4601 | halt: 
4602 | halt: 
4603 | halt: 
4604 | halt: 
4605 | set: 0 = 0
4606 | halt: 
4607 | halt: 
4608 | halt: 
4609 | halt: 
4610 | halt: 
4611 | halt: 
4612 | halt: 
4613 | set: 0 = 0
4614 | halt: 
4615 | halt: 
4616 | set: 0 = 0
4617 | halt: 
4618 | halt: 
4619 | halt: 
4620 | halt: 
4621 | halt: 
4622 | set: 0 = 0
4623 | halt: 
4624 | halt: 
4625 | halt: 
4626 | halt: 
4627 | halt: 
4628 | halt: 
4629 | halt: 
4630 | halt: 
4631 | halt: 
4632 | halt: 
4633 | halt: 
4634 | halt: 
4635 | halt: 
4636 | set: 0 = r6608
4637 | halt: 
4638 | halt: 
4639 | halt: 
4640 | halt: 
4641 | halt: 
4642 | halt: 
4643 | halt: 
4644 | halt: 
4645 | halt: 
4646 | halt: 
4647 | halt: 
4648 | halt: 
4649 | halt: 
4650 | halt: 
4651 | halt: 
4652 | halt: 
4653 | halt: 
4654 | halt: 
4655 | halt: 
4656 | halt: 
4657 | halt: 
4658 | halt: 
4659 | halt: 
4660 | halt: 
4661 | halt: 
4662 | halt: 
4663 | halt: 
4664 | halt: 
4665 | halt: 
4666 | halt: 
4667 | halt: 
4668 | halt: 
4669 | halt: 
4670 | halt: 
4671 | halt: 
4672 | halt: 
4673 | halt: 
4674 | halt: 
4675 | halt: 
4676 | jt: if (0 != 0 { go to memory[0] }
4677 | halt: 
4678 | halt: 
4679 | halt: 
4680 | jt: if (0 != 0 { go to memory[6] }
4681 | halt: 
4682 | halt: 
4683 | halt: 
4684 | set: 0 = 0
4685 | halt: 
4686 | halt: 
4687 | halt: 
4688 | halt: 
4689 | halt: 
4690 | halt: 
4691 | halt: 
4692 | halt: 
4693 | halt: 
4694 | halt: 
4695 | halt: 
4696 | halt: 
4697 | halt: 
4698 | halt: 
4699 | halt: 
4700 | halt: 
4701 | halt: 
4702 | halt: 
4703 | halt: 
4704 | halt: 
4705 | halt: 
4706 | halt: 
4707 | halt: 
4708 | halt: 
4709 | halt: 
4710 | halt: 
4711 | halt: 
4712 | halt: 
4713 | halt: 
4714 | halt: 
4715 | halt: 
4716 | halt: 
4717 | halt: 
4718 | halt: 
4719 | halt: 
4720 | halt: 
4721 | halt: 
4722 | halt: 
4723 | halt: 
4724 | halt: 
4725 | halt: 
4726 | halt: 
4727 | halt: 
4728 | halt: 
4729 | halt: 
4730 | halt: 
4731 | halt: 
4732 | halt: 
4733 | halt: 
4734 | halt: 
4735 | halt: 
4736 | jt: if (0 == 0 { go to 0 }
4737 | halt: 
4738 | halt: 
4739 | halt: 
4740 | halt: 
4741 | halt: 
4742 | jt: if (0 == 0 { go to 0 }
4743 | halt: 
4744 | halt: 
4745 | halt: 
4746 | halt: 
4747 | halt: 
4748 | halt: 
4749 | halt: 
4750 | halt: 
4751 | halt: 
4752 | halt: 
4753 | halt: 
4754 | halt: 
4755 | halt: 
4756 | halt: 
4757 | halt: 
4758 | halt: 
4759 | halt: 
4760 | halt: 
4761 | halt: 
4762 | halt: 
4763 | halt: 
4764 | halt: 
4765 | halt: 
4766 | halt: 
4767 | halt: 
4768 | halt: 
4769 | halt: 
4770 | halt: 
4771 | halt: 
4772 | halt: 
4773 | set: 0 = 0
4774 | halt: 
4775 | halt: 
4776 | halt: 
4777 | halt: 
4778 | halt: 
4779 | halt: 
4780 | halt: 
4781 | halt: 
4782 | halt: 
4783 | halt: 
4784 | halt: 
4785 | halt: 
4786 | halt: 
4787 | halt: 
4788 | halt: 
4789 | halt: 
4790 | halt: 
4791 | halt: 
4792 | halt: 
4793 | halt: 
4794 | halt: 
4795 | halt: 
4796 | halt: 
4797 | halt: 
4798 | halt: 
4799 | halt: 
4800 | halt: 
4801 | halt: 
4802 | halt: 
4803 | halt: 
4804 | halt: 
4805 | halt: 
4806 | halt: 
4807 | halt: 
4808 | halt: 
4809 | halt: 
4810 | halt: 
4811 | halt: 
4812 | halt: 
4813 | halt: 
4814 | halt: 
4815 | halt: 
4816 | halt: 
4817 | halt: 
4818 | halt: 
4819 | halt: 
4820 | halt: 
4821 | halt: 
4822 | halt: 
4823 | halt: 
4824 | halt: 
4825 | halt: 
4826 | halt: 
4827 | halt: 
4828 | halt: 
4829 | halt: 
4830 | halt: 
4831 | halt: 
4832 | halt: 
4833 | halt: 
4834 | halt: 
4835 | halt: 
4836 | halt: 
4837 | halt: 
4838 | halt: 
4839 | halt: 
4840 | halt: 
4841 | halt: 
4842 | halt: 
4843 | halt: 
4844 | halt: 
4845 | halt: 
4846 | halt: 
4847 | halt: 
4848 | halt: 
4849 | halt: 
4850 | halt: 
4851 | halt: 
4852 | halt: 
4853 | halt: 
4854 | halt: 
4855 | halt: 
4856 | halt: 
4857 | halt: 
4858 | halt: 
4859 | halt: 
4860 | halt: 
4861 | halt: 
4862 | halt: 
4863 | halt: 
4864 | halt: 
4865 | halt: 
