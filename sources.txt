0 | noop: 
2 | out: printf(87);
4 | out: printf(101);
6 | out: printf(108);
8 | out: printf(99);
10 | out: printf(111);
12 | out: printf(109);
14 | out: printf(101);
16 | out: printf(32);
18 | out: printf(116);
20 | out: printf(111);
22 | out: printf(32);
24 | out: printf(116);
26 | out: printf(104);
28 | out: printf(101);
30 | out: printf(32);
32 | out: printf(83);
34 | out: printf(121);
36 | out: printf(110);
38 | out: printf(97);
40 | out: printf(99);
42 | out: printf(111);
44 | out: printf(114);
46 | out: printf(32);
48 | out: printf(67);
50 | out: printf(104);
52 | out: printf(97);
54 | out: printf(108);
56 | out: printf(108);
58 | out: printf(101);
60 | out: printf(110);
62 | out: printf(103);
64 | out: printf(101);
66 | out: printf(33);
68 | out: printf(10);
70 | out: printf(80);
72 | out: printf(108);
74 | out: printf(101);
76 | out: printf(97);
78 | out: printf(115);
80 | out: printf(101);
82 | out: printf(32);
84 | out: printf(114);
86 | out: printf(101);
88 | out: printf(99);
90 | out: printf(111);
92 | out: printf(114);
94 | out: printf(100);
96 | out: printf(32);
98 | out: printf(121);
100 | out: printf(111);
102 | out: printf(117);
104 | out: printf(114);
106 | out: printf(32);
108 | out: printf(112);
110 | out: printf(114);
112 | out: printf(111);
114 | out: printf(103);
116 | out: printf(114);
118 | out: printf(101);
120 | out: printf(115);
122 | out: printf(115);
124 | out: printf(32);
126 | out: printf(98);
128 | out: printf(121);
130 | out: printf(32);
132 | out: printf(112);
134 | out: printf(117);
136 | out: printf(116);
138 | out: printf(116);
140 | out: printf(105);
142 | out: printf(110);
144 | out: printf(103);
146 | out: printf(32);
148 | out: printf(99);
150 | out: printf(111);
152 | out: printf(100);
154 | out: printf(101);
156 | out: printf(115);
158 | out: printf(32);
160 | out: printf(108);
162 | out: printf(105);
164 | out: printf(107);
166 | out: printf(101);
168 | out: printf(10);
170 | out: printf(116);
172 | out: printf(104);
174 | out: printf(105);
176 | out: printf(115);
178 | out: printf(32);
180 | out: printf(111);
182 | out: printf(110);
184 | out: printf(101);
186 | out: printf(32);
188 | out: printf(105);
190 | out: printf(110);
192 | out: printf(116);
194 | out: printf(111);
196 | out: printf(32);
198 | out: printf(116);
200 | out: printf(104);
202 | out: printf(101);
204 | out: printf(32);
206 | out: printf(99);
208 | out: printf(104);
210 | out: printf(97);
212 | out: printf(108);
214 | out: printf(108);
216 | out: printf(101);
218 | out: printf(110);
220 | out: printf(103);
222 | out: printf(101);
224 | out: printf(32);
226 | out: printf(119);
228 | out: printf(101);
230 | out: printf(98);
232 | out: printf(115);
234 | out: printf(105);
236 | out: printf(116);
238 | out: printf(101);
240 | out: printf(58);
242 | out: printf(32);
244 | out: printf(113);
246 | out: printf(70);
248 | out: printf(116);
250 | out: printf(80);
252 | out: printf(105);
254 | out: printf(109);
256 | out: printf(115);
258 | out: printf(98);
260 | out: printf(110);
262 | out: printf(108);
264 | out: printf(89);
266 | out: printf(73);
268 | out: printf(10);
270 | out: printf(10);
272 | out: printf(69);
274 | out: printf(120);
276 | out: printf(101);
278 | out: printf(99);
280 | out: printf(117);
282 | out: printf(116);
284 | out: printf(105);
286 | out: printf(110);
288 | out: printf(103);
290 | out: printf(32);
292 | out: printf(115);
294 | out: printf(101);
296 | out: printf(108);
298 | out: printf(102);
300 | out: printf(45);
302 | out: printf(116);
304 | out: printf(101);
306 | out: printf(115);
308 | out: printf(116);
310 | out: printf(46);
312 | out: printf(46);
314 | out: printf(46);
316 | out: printf(10);
318 | out: printf(10);
320 | jmp: go to memory[347]
322 | out: printf(106);
324 | out: printf(109);
326 | out: printf(112);
328 | out: printf(32);
330 | out: printf(102);
332 | out: printf(97);
334 | out: printf(105);
336 | out: printf(108);
338 | out: printf(115);
340 | out: printf(10);
342 | halt: 
343 | noop: 
345 | noop: 
347 | noop: 
349 | noop: 
351 | noop: 
354 | jmp: go to memory[368]
356 | jmp: go to memory[397]
358 | jmp: go to memory[484]
360 | jmp: go to memory[424]
362 | jmp: go to memory[453]
364 | noop: 
366 | noop: 
368 | out: printf(106);
370 | out: printf(109);
372 | out: printf(112);
374 | out: printf(32);
376 | out: printf(108);
378 | out: printf(97);
380 | out: printf(110);
382 | out: printf(100);
384 | out: printf(115);
386 | out: printf(32);
388 | out: printf(45);
390 | out: printf(50);
392 | out: printf(10);
394 | halt: 
395 | noop: 
397 | out: printf(106);
399 | out: printf(109);
401 | out: printf(112);
403 | out: printf(32);
405 | out: printf(108);
407 | out: printf(97);
409 | out: printf(110);
411 | out: printf(100);
413 | out: printf(115);
415 | out: printf(32);
417 | out: printf(45);
419 | out: printf(49);
421 | out: printf(10);
423 | halt: 
424 | noop: 
426 | out: printf(106);
428 | out: printf(109);
430 | out: printf(112);
432 | out: printf(32);
434 | out: printf(108);
436 | out: printf(97);
438 | out: printf(110);
440 | out: printf(100);
442 | out: printf(115);
444 | out: printf(32);
446 | out: printf(43);
448 | out: printf(49);
450 | out: printf(10);
452 | halt: 
453 | noop: 
455 | noop: 
457 | out: printf(106);
459 | out: printf(109);
461 | out: printf(112);
463 | out: printf(32);
465 | out: printf(108);
467 | out: printf(97);
469 | out: printf(110);
471 | out: printf(100);
473 | out: printf(115);
475 | out: printf(32);
477 | out: printf(43);
479 | out: printf(50);
481 | out: printf(10);
483 | halt: 
484 | jt: if (0 != 0 { go to memory[1074] }
487 | jt: if (1 == 0 { go to memory[1074] }
490 | jt: if (1 != 0 { go to memory[495] }
493 | jmp: go to memory[1074]
495 | jt: if (0 == 0 { go to memory[500] }
498 | jmp: go to memory[1074]
500 | jt: if (r0 != 0 { go to memory[1093] }
503 | jt: if (r1 != 0 { go to memory[1093] }
506 | jt: if (r2 != 0 { go to memory[1093] }
509 | jt: if (r3 != 0 { go to memory[1093] }
512 | jt: if (r4 != 0 { go to memory[1093] }
515 | jt: if (r5 != 0 { go to memory[1093] }
518 | jt: if (r6 != 0 { go to memory[1093] }
521 | jt: if (r7 != 0 { go to memory[1093] }
524 | set: r0 = 1
527 | jt: if (r0 == 0 { go to memory[1118] }
530 | set: r0 = 0
533 | jt: if (r0 != 0 { go to memory[1118] }
536 | add: r0 = 1 + 1
540 | jt: if (r0 != 0 { go to memory[564] }
543 | out: printf(110);
545 | out: printf(111);
547 | out: printf(32);
549 | out: printf(97);
551 | out: printf(100);
553 | out: printf(100);
555 | out: printf(32);
557 | out: printf(111);
559 | out: printf(112);
561 | out: printf(10);
563 | halt: 
564 | eq: if (r0 == 2) { r1 == 1 } else { r1 == 0 }
571 | out: printf(110);
573 | out: printf(111);
575 | out: printf(32);
577 | out: printf(101);
579 | out: printf(113);
581 | out: printf(32);
583 | out: printf(111);
585 | out: printf(112);
587 | out: printf(10);
589 | halt: 
590 | push: push(r0);
592 | push: push(r1);
594 | pop: r0 = pop();
596 | pop: r1 = pop();
598 | eq: if (r1 == 2) { r2 == 1 } else { r2 == 0 }
605 | eq: if (r0 == 1) { r2 == 1 } else { r2 == 0 }
612 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
619 | gt: if (r0 > r1) { r2 == 1 } else { r2 == 0 }
626 | gt: if (42 > 42) { r2 == 1 } else { r2 == 0 }
633 | and: r0 = 28912 and 19626
637 | eq: if (r0 == 16544) { r1 == 1 } else { r1 == 0 }
644 | or: r1 = 28912 or 19626
648 | eq: if (r1 == 31994) { r0 == 1 } else { r0 == 0 }
655 | out: printf(110);
657 | out: printf(111);
659 | out: printf(32);
661 | out: printf(98);
663 | out: printf(105);
665 | out: printf(116);
667 | out: printf(119);
669 | out: printf(105);
671 | out: printf(115);
673 | out: printf(101);
675 | out: printf(32);
677 | out: printf(111);
679 | out: printf(114);
681 | out: printf(10);
683 | halt: 
684 | not: r0 = ~0
687 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
694 | not: r0 = ~21845
697 | eq: if (r0 == 10922) { r1 == 1 } else { r1 == 0 }
704 | call: push(706); go to memory[1285]
706 | jmp: go to memory[1289]
708 | pop: r0 = pop();
710 | eq: if (r0 == 708) { r1 == 1 } else { r1 == 0 }
717 | eq: if (r0 == 706) { r1 == 1 } else { r1 == 0 }
724 | set: r0 = 1287
727 | call: push(729); go to memory[r0]
729 | jmp: go to memory[1289]
731 | pop: r0 = pop();
733 | eq: if (r0 == 731) { r1 == 1 } else { r1 == 0 }
740 | eq: if (r0 == 729) { r1 == 1 } else { r1 == 0 }
747 | add: r0 = 32767 + 32767
751 | eq: if (r0 == 32766) { r1 == 1 } else { r1 == 0 }
758 | eq: if (32766 == r0) { r1 == 1 } else { r1 == 0 }
765 | add: r0 = 16384 + 16384
769 | jt: if (r0 != 0 { go to memory[1312] }
772 | add: r0 = 16384 + 16384
776 | jt: if (r0 != 0 { go to memory[1312] }
779 | mult: r0 = 6 * 9
783 | eq: if (r0 == 42) { r1 == 1 } else { r1 == 0 }
790 | eq: if (r0 == 54) { r1 == 1 } else { r1 == 0 }
797 | mult: r0 = 12345 * 32123
801 | eq: if (r0 == 99) { r1 == 1 } else { r1 == 0 }
808 | mod: r0 = 6 % 3
812 | eq: if (r0 == 0) { r1 == 1 } else { r1 == 0 }
819 | mod: r0 = 70 % 6
823 | eq: if (r0 == 4) { r1 == 1 } else { r1 == 0 }
830 | mult: r0 = 32766 * 15
834 | eq: if (r0 == 32738) { r1 == 1 } else { r1 == 0 }
841 | jmp: go to memory[845]
845 | rmem: r0 = memory[843]
848 | eq: if (r0 == 20000) { r1 == 1 } else { r1 == 0 }
855 | add: r2 = 843 + 1
859 | rmem: r0 = memory[r2]
862 | eq: if (r0 == 10000) { r1 == 1 } else { r1 == 0 }
869 | set: r0 = 843
872 | wmem: memory[r0] = 30000
875 | rmem: r2 = memory[r0]
878 | eq: if (r2 == 30000) { r1 == 1 } else { r1 == 0 }
885 | call: push(887); go to memory[1723]
887 | rmem: r0 = memory[6068]
890 | eq: if (r0 == 11) { r1 == 1 } else { r1 == 0 }
897 | add: r2 = 6068 + 1
901 | rmem: r0 = memory[r2]
904 | eq: if (r0 == 116) { r1 == 1 } else { r1 == 0 }
911 | wmem: memory[r2] = 84
914 | rmem: r0 = memory[r2]
917 | eq: if (r0 == 116) { r1 == 1 } else { r1 == 0 }
924 | eq: if (r0 == 84) { r1 == 1 } else { r1 == 0 }
931 | wmem: memory[937] = 21
934 | wmem: memory[938] = 7
937 | noop: 
939 | out: printf(978);
941 | out: printf(119);
943 | out: printf(109);
945 | out: printf(101);
947 | out: printf(109);
949 | out: printf(32);
951 | out: printf(111);
953 | out: printf(112);
955 | out: printf(119);
957 | out: printf(114);
959 | out: printf(105);
961 | out: printf(116);
963 | out: printf(101);
965 | out: printf(32);
967 | out: printf(102);
969 | out: printf(97);
971 | out: printf(105);
973 | out: printf(108);
975 | out: printf(10);
977 | halt: 
978 | add: r1 = 10 + 6080
982 | add: r1 = r1 + 1
986 | rmem: r2 = memory[6116]
989 | add: r2 = r2 + 6116
993 | set: r0 = 6116
996 | add: r0 = r0 + 1
1000 | gt: if (r0 > r2) { r3 == 1 } else { r3 == 0 }
1007 | rmem: r4 = memory[r0]
1010 | wmem: memory[r1] = r4
1013 | add: r0 = r0 + 1
1017 | add: r1 = r1 + 1
1021 | jmp: go to memory[1000]
1023 | rmem: r0 = memory[6080]
1026 | rmem: r1 = memory[6099]
1029 | add: r0 = r0 + r1
1033 | add: r0 = r0 + 1
1037 | wmem: memory[6080] = r0
1040 | wmem: memory[6099] = 44
1043 | set: r0 = 6080
1046 | call: push(1048); go to memory[1518]
1048 | push: push(r0);
1050 | push: push(r1);
1052 | push: push(r2);
1054 | set: r0 = 26851
1057 | set: r1 = 1531
1060 | add: r2 = 7511 + 159
1064 | call: push(1066); go to memory[1458]
1066 | pop: r2 = pop();
1068 | pop: r1 = pop();
1070 | pop: r0 = pop();
1072 | jmp: go to memory[2734]
1074 | out: printf(110);
1076 | out: printf(111);
1078 | out: printf(32);
1080 | out: printf(106);
1082 | out: printf(116);
1084 | out: printf(47);
1086 | out: printf(106);
1088 | out: printf(102);
1090 | out: printf(10);
1092 | halt: 
1093 | out: printf(110);
1095 | out: printf(111);
1097 | out: printf(110);
1099 | out: printf(122);
1101 | out: printf(101);
1103 | out: printf(114);
1105 | out: printf(111);
1107 | out: printf(32);
1109 | out: printf(114);
1111 | out: printf(101);
1113 | out: printf(103);
1115 | out: printf(10);
1117 | halt: 
1118 | out: printf(110);
1120 | out: printf(111);
1122 | out: printf(32);
1124 | out: printf(115);
1126 | out: printf(101);
1128 | out: printf(116);
1130 | out: printf(32);
1132 | out: printf(111);
1134 | out: printf(112);
1136 | out: printf(10);
1138 | halt: 
1139 | out: printf(110);
1141 | out: printf(111);
1143 | out: printf(32);
1145 | out: printf(103);
1147 | out: printf(116);
1149 | out: printf(32);
1151 | out: printf(111);
1153 | out: printf(112);
1155 | out: printf(10);
1157 | halt: 
1158 | out: printf(110);
1160 | out: printf(111);
1162 | out: printf(32);
1164 | out: printf(115);
1166 | out: printf(116);
1168 | out: printf(97);
1170 | out: printf(99);
1172 | out: printf(107);
1174 | out: printf(10);
1176 | halt: 
1177 | out: printf(110);
1179 | out: printf(111);
1181 | out: printf(32);
1183 | out: printf(98);
1185 | out: printf(105);
1187 | out: printf(116);
1189 | out: printf(119);
1191 | out: printf(105);
1193 | out: printf(115);
1195 | out: printf(101);
1197 | out: printf(32);
1199 | out: printf(97);
1201 | out: printf(110);
1203 | out: printf(100);
1205 | out: printf(10);
1207 | halt: 
1208 | out: printf(110);
1210 | out: printf(111);
1212 | out: printf(32);
1214 | out: printf(98);
1216 | out: printf(105);
1218 | out: printf(116);
1220 | out: printf(119);
1222 | out: printf(105);
1224 | out: printf(115);
1226 | out: printf(101);
1228 | out: printf(32);
1230 | out: printf(110);
1232 | out: printf(111);
1234 | out: printf(116);
1236 | out: printf(10);
1238 | halt: 
1239 | out: printf(110);
1241 | out: printf(111);
1243 | out: printf(32);
1245 | out: printf(114);
1247 | out: printf(109);
1249 | out: printf(101);
1251 | out: printf(109);
1253 | out: printf(32);
1255 | out: printf(111);
1257 | out: printf(112);
1259 | out: printf(10);
1261 | halt: 
1262 | out: printf(110);
1264 | out: printf(111);
1266 | out: printf(32);
1268 | out: printf(119);
1270 | out: printf(109);
1272 | out: printf(101);
1274 | out: printf(109);
1276 | out: printf(32);
1278 | out: printf(111);
1280 | out: printf(112);
1282 | out: printf(10);
1284 | halt: 
1285 | jmp: go to memory[708]
1287 | jmp: go to memory[731]
1289 | out: printf(110);
1291 | out: printf(111);
1293 | out: printf(32);
1295 | out: printf(99);
1297 | out: printf(97);
1299 | out: printf(108);
1301 | out: printf(108);
1303 | out: printf(32);
1305 | out: printf(111);
1307 | out: printf(112);
1309 | out: printf(10);
1311 | halt: 
1312 | out: printf(110);
1314 | out: printf(111);
1316 | out: printf(32);
1318 | out: printf(109);
1320 | out: printf(111);
1322 | out: printf(100);
1324 | out: printf(117);
1326 | out: printf(108);
1328 | out: printf(111);
1330 | out: printf(32);
1332 | out: printf(109);
1334 | out: printf(97);
1336 | out: printf(116);
1338 | out: printf(104);
1340 | out: printf(32);
1342 | out: printf(100);
1344 | out: printf(117);
1346 | out: printf(114);
1348 | out: printf(105);
1350 | out: printf(110);
1352 | out: printf(103);
1354 | out: printf(32);
1356 | out: printf(97);
1358 | out: printf(100);
1360 | out: printf(100);
1362 | out: printf(32);
1364 | out: printf(111);
1366 | out: printf(114);
1368 | out: printf(32);
1370 | out: printf(109);
1372 | out: printf(117);
1374 | out: printf(108);
1376 | out: printf(116);
1378 | out: printf(10);
1380 | halt: 
1381 | out: printf(110);
1383 | out: printf(111);
1385 | out: printf(116);
1387 | out: printf(32);
1389 | out: printf(104);
1391 | out: printf(105);
1393 | out: printf(116);
1395 | out: printf(99);
1397 | out: printf(104);
1399 | out: printf(104);
1401 | out: printf(105);
1403 | out: printf(107);
1405 | out: printf(105);
1407 | out: printf(110);
1409 | out: printf(103);
1411 | out: printf(10);
1413 | halt: 
1414 | out: printf(110);
1416 | out: printf(111);
1418 | out: printf(32);
1420 | out: printf(109);
1422 | out: printf(117);
1424 | out: printf(108);
1426 | out: printf(116);
1428 | out: printf(32);
1430 | out: printf(111);
1432 | out: printf(112);
1434 | out: printf(10);
1436 | halt: 
1437 | out: printf(110);
1439 | out: printf(111);
1441 | out: printf(32);
1443 | out: printf(109);
1445 | out: printf(111);
1447 | out: printf(100);
1449 | out: printf(32);
1451 | out: printf(111);
1453 | out: printf(112);
1455 | out: printf(10);
1457 | halt: 
1458 | push: push(r0);
1460 | push: push(r3);
1462 | push: push(r4);
1464 | push: push(r5);
1466 | push: push(r6);
1468 | set: r6 = r0
1471 | set: r5 = r1
1474 | rmem: r4 = memory[r0]
1477 | set: r1 = 0
1480 | add: r3 = 1 + r1
1484 | gt: if (r3 > r4) { r0 == 1 } else { r0 == 0 }
1491 | add: r3 = r3 + r6
1495 | rmem: r0 = memory[r3]
1498 | call: push(1500); go to memory[r5]
1500 | add: r1 = r1 + 1
1504 | jt: if (r1 != 0 { go to memory[1480] }
1507 | pop: r6 = pop();
1509 | pop: r5 = pop();
1511 | pop: r4 = pop();
1513 | pop: r3 = pop();
1515 | pop: r0 = pop();
1517 | ret: go to memory[pop()];
1518 | push: push(r1);
1520 | set: r1 = 1528
1523 | call: push(1525); go to memory[1458]
1525 | pop: r1 = pop();
1527 | ret: go to memory[pop()];
1528 | out: printf(r0);
1530 | ret: go to memory[pop()];
1531 | push: push(r1);
1533 | set: r1 = r2
1536 | call: push(1538); go to memory[2125]
1538 | out: printf(r0);
1540 | pop: r1 = pop();
1542 | ret: go to memory[pop()];
1543 | push: push(r1);
1545 | push: push(r3);
1547 | rmem: r3 = memory[r0]
1550 | jt: if (r3 == 0 { go to memory[1563] }
1553 | call: push(1555); go to memory[1458]
1555 | jt: if (r1 != 0 { go to memory[1563] }
1558 | set: r0 = r2
1561 | jmp: go to memory[1566]
1563 | set: r0 = 32767
1566 | pop: r3 = pop();
1568 | pop: r1 = pop();
1570 | ret: go to memory[pop()];
1571 | push: push(r1);
1573 | push: push(r2);
1575 | set: r2 = r1
1578 | set: r1 = 1605
1581 | call: push(1583); go to memory[1543]
1583 | pop: r2 = pop();
1585 | pop: r1 = pop();
1587 | ret: go to memory[pop()];
1588 | push: push(r1);
1590 | push: push(r2);
1592 | set: r2 = r1
1595 | set: r1 = 1648
1598 | call: push(1600); go to memory[1543]
1600 | pop: r2 = pop();
1602 | pop: r1 = pop();
1604 | ret: go to memory[pop()];
1605 | eq: if (r0 == r2) { r0 == 1 } else { r0 == 0 }
1612 | set: r2 = r1
1615 | set: r1 = 32767
1618 | ret: go to memory[pop()];
1619 | push: push(r3);
1621 | add: r3 = r2 + 1
1625 | add: r3 = r3 + r1
1629 | rmem: r3 = memory[r3]
1632 | eq: if (r0 == r3) { r3 == 1 } else { r3 == 0 }
1639 | set: r2 = r1
1642 | set: r1 = 32767
1645 | pop: r3 = pop();
1647 | ret: go to memory[pop()];
1648 | push: push(r1);
1650 | set: r1 = r2
1653 | call: push(1655); go to memory[1667]
1655 | pop: r1 = pop();
1657 | jt: if (r0 == 0 { go to memory[1666] }
1660 | set: r2 = r1
1663 | set: r1 = 32767
1666 | ret: go to memory[pop()];
1667 | push: push(r1);
1669 | push: push(r2);
1671 | push: push(r3);
1673 | push: push(r4);
1675 | rmem: r3 = memory[r0]
1678 | rmem: r4 = memory[r1]
1681 | eq: if (r3 == r4) { r2 == 1 } else { r2 == 0 }
1688 | or: r2 = r3 or r4
1692 | jt: if (r2 == 0 { go to memory[1706] }
1695 | set: r2 = r1
1698 | set: r1 = 1619
1701 | call: push(1703); go to memory[1458]
1703 | jt: if (r1 == 0 { go to memory[1711] }
1706 | set: r0 = 1
1709 | jmp: go to memory[1714]
1711 | set: r0 = 0
1714 | pop: r4 = pop();
1716 | pop: r3 = pop();
1718 | pop: r2 = pop();
1720 | pop: r1 = pop();
1722 | ret: go to memory[pop()];
1723 | push: push(r0);
1725 | push: push(r1);
1727 | set: r1 = 6068
1730 | rmem: r0 = memory[r1]
1733 | push: push(r1);
1735 | mult: r1 = r1 * r1
1739 | call: push(1741); go to memory[2125]
1741 | set: r1 = 16724
1744 | call: push(1746); go to memory[2125]
1746 | pop: r1 = pop();
1748 | wmem: memory[r1] = r0
1751 | add: r1 = r1 + 1
1755 | eq: if (30050 == r1) { r0 == 1 } else { r0 == 0 }
1762 | pop: r1 = pop();
1764 | pop: r0 = pop();
1766 | ret: go to memory[pop()];
1767 | push: push(r0);
1769 | push: push(r2);
1771 | push: push(r3);
1773 | push: push(r4);
1775 | push: push(r5);
1777 | add: r2 = r1 + r0
1781 | set: r0 = r1
1784 | set: r5 = 0
1787 | add: r0 = r0 + 1
1791 | gt: if (r0 > r2) { r3 == 1 } else { r3 == 0 }
1798 | in: r4 = getchar();
1800 | eq: if (r4 == 10) { r3 == 1 } else { r3 == 0 }
1807 | wmem: memory[r0] = r4
1810 | add: r5 = r5 + 1
1814 | jmp: go to memory[1787]
1816 | wmem: memory[r1] = r5
1819 | eq: if (r4 == 10) { r3 == 1 } else { r3 == 0 }
1826 | in: r4 = getchar();
1828 | jmp: go to memory[1819]
1830 | pop: r5 = pop();
1832 | pop: r4 = pop();
1834 | pop: r3 = pop();
1836 | pop: r2 = pop();
1838 | pop: r0 = pop();
1840 | ret: go to memory[pop()];
1841 | push: push(r3);
1843 | push: push(r4);
1845 | push: push(r5);
1847 | push: push(r6);
1849 | set: r6 = 1
1852 | add: r4 = r3 + r6
1856 | rmem: r4 = memory[r4]
1859 | add: r5 = 6125 + r6
1863 | wmem: memory[r5] = r4
1866 | add: r6 = r6 + 1
1870 | rmem: r5 = memory[6125]
1873 | gt: if (r6 > r5) { r4 == 1 } else { r4 == 0 }
1880 | set: r3 = 0
1883 | set: r4 = 0
1886 | rmem: r5 = memory[6125]
1889 | mod: r5 = r4 % r5
1893 | add: r5 = r5 + 6125
1897 | add: r5 = r5 + 1
1901 | rmem: r6 = memory[r5]
1904 | mult: r6 = r6 * 5249
1908 | add: r6 = r6 + 12345
1912 | wmem: memory[r5] = r6
1915 | push: push(r0);
1917 | push: push(r1);
1919 | set: r1 = r6
1922 | call: push(1924); go to memory[2125]
1924 | set: r6 = r0
1927 | pop: r1 = pop();
1929 | pop: r0 = pop();
1931 | rmem: r5 = memory[r1]
1934 | mod: r6 = r6 % r5
1938 | add: r6 = r6 + 1
1942 | gt: if (r6 > r2) { r5 == 1 } else { r5 == 0 }
1949 | set: r3 = 1
1952 | add: r6 = r6 + r1
1956 | rmem: r6 = memory[r6]
1959 | add: r4 = r4 + 1
1963 | add: r5 = r4 + 6129
1967 | wmem: memory[r5] = r6
1970 | rmem: r5 = memory[6129]
1973 | eq: if (r4 == r5) { r5 == 1 } else { r5 == 0 }
1980 | jt: if (r3 == 0 { go to memory[1880] }
1983 | push: push(r0);
1985 | set: r0 = 6129
1988 | call: push(1990); go to memory[1518]
1990 | pop: r0 = pop();
1992 | pop: r6 = pop();
1994 | pop: r5 = pop();
1996 | pop: r4 = pop();
1998 | pop: r3 = pop();
2000 | ret: go to memory[pop()];
2001 | push: push(r0);
2003 | push: push(r1);
2005 | push: push(r2);
2007 | push: push(r3);
2009 | push: push(r4);
2011 | push: push(r5);
2013 | set: r2 = 1
2016 | set: r5 = 0
2019 | jt: if (r0 == 0 { go to memory[2092] }
2022 | eq: if (r2 == 10000) { r4 == 1 } else { r4 == 0 }
2029 | jt: if (r4 != 0 { go to memory[2040] }
2032 | mult: r1 = r2 * 10
2036 | mod: r3 = r0 % r1
2040 | set: r4 = 0
2043 | mult: r2 = r2 * 32767
2047 | jt: if (r3 == 0 { go to memory[2060] }
2050 | add: r4 = r4 + 1
2054 | add: r3 = r3 + r2
2058 | jmp: go to memory[2047]
2060 | mult: r2 = r2 * 32767
2064 | mult: r3 = r4 * r2
2068 | mult: r3 = r3 * 32767
2072 | add: r0 = r0 + r3
2076 | add: r4 = r4 + 48
2080 | mult: r2 = r2 * 10
2084 | add: r5 = r5 + 1
2088 | push: push(r4);
2090 | jmp: go to memory[2019]
2092 | jt: if (r5 != 0 { go to memory[2099] }
2095 | out: printf(48);
2097 | jmp: go to memory[2112]
2099 | jt: if (r5 == 0 { go to memory[2112] }
2102 | pop: r0 = pop();
2104 | out: printf(r0);
2106 | add: r5 = r5 + 32767
2110 | jmp: go to memory[2099]
2112 | pop: r5 = pop();
2114 | pop: r4 = pop();
2116 | pop: r3 = pop();
2118 | pop: r2 = pop();
2120 | pop: r1 = pop();
2122 | pop: r0 = pop();
2124 | ret: go to memory[pop()];
2125 | push: push(r1);
2127 | push: push(r2);
2129 | and: r2 = r0 and r1
2133 | not: r2 = ~r2
2136 | or: r0 = r0 or r1
2140 | and: r0 = r0 and r2
2144 | pop: r2 = pop();
2146 | pop: r1 = pop();
2148 | ret: go to memory[pop()];
2149 | add: r0 = r0 + r1
2153 | gt: if (r1 > r0) { r1 == 1 } else { r1 == 0 }
2158 | push: push(r2);
2160 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
2168 | add: r0 = r0 + r1
2172 | set: r1 = r2
2175 | pop: r2 = pop();
2177 | ret: go to memory[pop()];
2178 | jt: if (r0 == 0 { go to memory[2241] }
2181 | jt: if (r1 == 0 { go to memory[2241] }
2184 | push: push(r2);
2186 | push: push(r3);
2188 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
2195 | set: r2 = r0
2198 | set: r0 = r1
2201 | set: r1 = r2
2204 | set: r2 = r0
2207 | set: r0 = 0
2210 | add: r0 = r0 + r1
2214 | gt: if (r1 > r0) { r3 == 1 } else { r3 == 0 }
2221 | add: r2 = r2 + 32767
2225 | jt: if (r2 != 0 { go to memory[2210] }
2228 | set: r1 = 0
2231 | jmp: go to memory[2236]
2233 | set: r1 = 1
2236 | pop: r3 = pop();
2238 | pop: r2 = pop();
2240 | ret: go to memory[pop()];
2241 | set: r0 = 0
2244 | set: r1 = 0
2247 | ret: go to memory[pop()];
2248 | push: push(r1);
2250 | push: push(r2);
2252 | jt: if (r1 == 0 { go to memory[2276] }
2255 | add: r1 = r1 + 32767
2259 | and: r2 = r0 and 16384
2263 | mult: r0 = r0 * 2
2267 | jt: if (r2 == 0 { go to memory[2252] }
2270 | or: r0 = r0 or 1
2274 | jmp: go to memory[2252]
2276 | pop: r2 = pop();
2278 | pop: r1 = pop();
2280 | ret: go to memory[pop()];
2281 | push: push(r1);
2283 | gt: if (r0 > 14) { r1 == 1 } else { r1 == 0 }
2290 | set: r1 = r0
2293 | set: r0 = 1
2296 | jt: if (r1 == 0 { go to memory[2312] }
2299 | add: r1 = r1 + 32767
2303 | mult: r0 = r0 * 2
2307 | jmp: go to memory[2296]
2309 | set: r0 = 32767
2312 | pop: r1 = pop();
2314 | ret: go to memory[pop()];
2315 | jmp: go to memory[2734]
2321 | halt: 
2326 | halt: 
2331 | halt: 
2336 | halt: 
2341 | halt: 
2346 | halt: 
2351 | halt: 
2356 | halt: 
2361 | halt: 
2366 | halt: 
2371 | halt: 
2376 | halt: 
2421 | halt: 
2451 | halt: 
2456 | halt: 
2461 | halt: 
2462 | halt: 
2472 | halt: 
2477 | halt: 
2482 | halt: 
2487 | halt: 
2492 | halt: 
2497 | halt: 
2502 | halt: 
2507 | halt: 
2512 | halt: 
2517 | halt: 
2522 | halt: 
2527 | halt: 
2532 | halt: 
2537 | halt: 
2542 | halt: 
2547 | halt: 
2552 | halt: 
2557 | halt: 
2652 | halt: 
2657 | halt: 
2662 | halt: 
2675 | halt: 
2715 | halt: 
2719 | halt: 
2727 | halt: 
2731 | halt: 
2734 | push: push(r0);
2736 | push: push(r1);
2738 | push: push(r2);
2740 | push: push(r3);
2742 | rmem: r1 = memory[2732]
2745 | rmem: r0 = memory[2733]
2748 | eq: if (r0 == r1) { r0 == 1 } else { r0 == 0 }
2755 | rmem: r0 = memory[2732]
2758 | add: r0 = r0 + 4
2762 | rmem: r0 = memory[r0]
2765 | jt: if (r0 == 0 { go to memory[2770] }
2768 | call: push(2770); go to memory[r0]
2770 | rmem: r1 = memory[2732]
2773 | rmem: r0 = memory[2733]
2776 | eq: if (r0 == r1) { r0 == 1 } else { r0 == 0 }
2783 | set: r0 = 25974
2786 | wmem: memory[r0] = 0
2789 | call: push(2791); go to memory[2964]
2791 | wmem: memory[2733] = r1
2794 | push: push(r0);
2796 | push: push(r1);
2798 | push: push(r2);
2800 | set: r0 = 27414
2803 | set: r1 = 1531
2806 | add: r2 = 961 + 12837
2810 | call: push(2812); go to memory[1458]
2812 | pop: r2 = pop();
2814 | pop: r1 = pop();
2816 | pop: r0 = pop();
2818 | set: r0 = 32
2821 | set: r1 = 25974
2824 | call: push(2826); go to memory[1767]
2826 | out: printf(10);
2828 | out: printf(10);
2830 | set: r0 = 25974
2833 | set: r1 = 32
2836 | call: push(2838); go to memory[1571]
2838 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
2845 | rmem: r0 = memory[25974]
2848 | set: r2 = r0
2851 | rmem: r1 = memory[25974]
2854 | push: push(r1);
2856 | wmem: memory[25974] = r2
2859 | set: r0 = 27398
2862 | set: r1 = 25974
2865 | call: push(2867); go to memory[1588]
2867 | pop: r1 = pop();
2869 | wmem: memory[25974] = r1
2872 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
2879 | set: r0 = 0
2882 | set: r2 = 0
2885 | add: r1 = 27406 + 1
2889 | add: r1 = r1 + r0
2893 | rmem: r1 = memory[r1]
2896 | rmem: r3 = memory[25974]
2899 | eq: if (r3 == r2) { r3 == 1 } else { r3 == 0 }
2906 | mult: r0 = r2 * 32767
2910 | rmem: r3 = memory[25974]
2913 | add: r3 = r0 + r3
2917 | jt: if (r2 == 0 { go to memory[2924] }
2920 | add: r3 = r3 + 32767
2924 | mod: r3 = r3 % 32
2928 | add: r0 = 25974 + r2
2932 | jt: if (r2 == 0 { go to memory[2939] }
2935 | add: r0 = r0 + 1
2939 | wmem: memory[r0] = r3
2942 | jmp: go to memory[2950]
2944 | set: r0 = 25974
2947 | wmem: memory[r0] = 0
2950 | call: push(2952); go to memory[r1]
2952 | jt: if (r1 != 0 { go to memory[2742] }
2955 | pop: r3 = pop();
2957 | pop: r2 = pop();
2959 | pop: r1 = pop();
2961 | pop: r0 = pop();
2963 | ret: go to memory[pop()];
2964 | push: push(r0);
2966 | push: push(r1);
2968 | push: push(r2);
2970 | rmem: r1 = memory[r0]
2973 | jt: if (r1 == 0 { go to memory[3032] }
2976 | call: push(2978); go to memory[5921]
2978 | jt: if (r0 == 0 { go to memory[3006] }
2981 | push: push(r0);
2983 | call: push(2985); go to memory[5990]
2985 | set: r1 = r0
2988 | pop: r0 = pop();
2990 | jt: if (r1 == 0 { go to memory[3006] }
2993 | add: r1 = r0 + 1
2997 | rmem: r0 = memory[r1]
3000 | call: push(3002); go to memory[1518]
3002 | out: printf(10);
3004 | jmp: go to memory[3238]
3006 | push: push(r0);
3008 | push: push(r1);
3010 | push: push(r2);
3012 | set: r0 = 27432
3015 | set: r1 = 1531
3018 | add: r2 = 1808 + 735
3022 | call: push(3024); go to memory[1458]
3024 | pop: r2 = pop();
3026 | pop: r1 = pop();
3028 | pop: r0 = pop();
3030 | jmp: go to memory[3238]
3032 | rmem: r0 = memory[2732]
3035 | push: push(r0);
3037 | out: printf(61);
3039 | out: printf(61);
3041 | out: printf(32);
3043 | add: r0 = r0 + 0
3047 | rmem: r0 = memory[r0]
3050 | call: push(3052); go to memory[1518]
3052 | out: printf(32);
3054 | out: printf(61);
3056 | out: printf(61);
3058 | out: printf(10);
3060 | pop: r0 = pop();
3062 | push: push(r0);
3064 | add: r0 = r0 + 1
3068 | rmem: r0 = memory[r0]
3071 | rmem: r1 = memory[r0]
3074 | eq: if (r1 == 2) { r1 == 1 } else { r1 == 0 }
3081 | push: push(r0);
3083 | set: r0 = 2680
3086 | call: push(3088); go to memory[5990]
3088 | set: r1 = r0
3091 | pop: r0 = pop();
3093 | add: r0 = r0 + 1
3097 | add: r0 = r0 + r1
3101 | rmem: r0 = memory[r0]
3104 | call: push(3106); go to memory[1518]
3106 | out: printf(10);
3108 | pop: r0 = pop();
3110 | push: push(r0);
3112 | call: push(3114); go to memory[5823]
3114 | jt: if (r0 == 0 { go to memory[3146] }
3117 | push: push(r0);
3119 | push: push(r1);
3121 | push: push(r2);
3123 | set: r0 = 27455
3126 | set: r1 = 1531
3129 | add: r2 = 11048 + 15296
3133 | call: push(3135); go to memory[1458]
3135 | pop: r2 = pop();
3137 | pop: r1 = pop();
3139 | pop: r0 = pop();
3141 | rmem: r2 = memory[2732]
3144 | call: push(3146); go to memory[5876]
3146 | pop: r0 = pop();
3148 | push: push(r0);
3150 | add: r0 = r0 + 2
3154 | rmem: r0 = memory[r0]
3157 | rmem: r0 = memory[r0]
3160 | eq: if (r0 == 1) { r2 == 1 } else { r2 == 0 }
3165 | mult: 19 = 84 * 19
3170 | out: printf(101);
3172 | out: printf(114);
3174 | out: printf(101);
3176 | out: printf(32);
3178 | jt: if (r2 != 0 { go to memory[3189] }
3181 | out: printf(97);
3183 | out: printf(114);
3185 | out: printf(101);
3187 | jmp: go to memory[3193]
3189 | out: printf(105);
3191 | out: printf(115);
3193 | out: printf(32);
3195 | call: push(3197); go to memory[2001]
3197 | out: printf(32);
3199 | out: printf(101);
3201 | out: printf(120);
3203 | out: printf(105);
3205 | out: printf(116);
3207 | eq: if (r0 == 1) { r2 == 1 } else { r2 == 0 }
3214 | out: printf(115);
3216 | out: printf(58);
3218 | out: printf(10);
3220 | pop: r0 = pop();
3222 | push: push(r0);
3224 | add: r0 = r0 + 2
3228 | rmem: r0 = memory[r0]
3231 | set: r1 = 5814
3234 | call: push(3236); go to memory[1458]
3236 | pop: r0 = pop();
3238 | pop: r2 = pop();
3240 | pop: r1 = pop();
3242 | pop: r0 = pop();
3244 | ret: go to memory[pop()];
3245 | push: push(r0);
3247 | push: push(r1);
3249 | push: push(r2);
3251 | set: r1 = r0
3254 | rmem: r0 = memory[2732]
3257 | add: r0 = r0 + 2
3261 | rmem: r0 = memory[r0]
3264 | call: push(3266); go to memory[1588]
3266 | eq: if (r0 == 32767) { r2 == 1 } else { r2 == 0 }
3273 | rmem: r2 = memory[2732]
3276 | add: r2 = r2 + 3
3280 | rmem: r2 = memory[r2]
3283 | add: r2 = r2 + 1
3287 | add: r2 = r2 + r0
3291 | rmem: r2 = memory[r2]
3294 | wmem: memory[2732] = r2
3297 | wmem: memory[2733] = 0
3300 | jmp: go to memory[3326]
3302 | push: push(r0);
3304 | push: push(r1);
3306 | push: push(r2);
3308 | set: r0 = 27482
3311 | set: r1 = 1531
3314 | add: r2 = 3414 + 19101
3318 | call: push(3320); go to memory[1458]
3320 | pop: r2 = pop();
3322 | pop: r1 = pop();
3324 | pop: r0 = pop();
3326 | pop: r2 = pop();
3328 | pop: r1 = pop();
3330 | pop: r0 = pop();
3332 | ret: go to memory[pop()];
3333 | push: push(r0);
3335 | push: push(r0);
3337 | push: push(r1);
3339 | push: push(r2);
3341 | set: r0 = 27532
3344 | set: r1 = 1531
3347 | add: r2 = 24913 + 1440
3351 | call: push(3353); go to memory[1458]
3353 | pop: r2 = pop();
3355 | pop: r1 = pop();
3357 | pop: r0 = pop();
3359 | pop: r0 = pop();
3361 | ret: go to memory[pop()];
3362 | push: push(r0);
3364 | push: push(r2);
3366 | push: push(r0);
3368 | push: push(r1);
3370 | push: push(r2);
3372 | set: r0 = 28037
3375 | set: r1 = 1531
3378 | add: r2 = 1736 + 4775
3382 | call: push(3384); go to memory[1458]
3384 | pop: r2 = pop();
3386 | pop: r1 = pop();
3388 | pop: r0 = pop();
3390 | set: r2 = 0
3393 | call: push(3395); go to memory[5876]
3395 | pop: r2 = pop();
3397 | pop: r0 = pop();
3399 | ret: go to memory[pop()];
3400 | push: push(r0);
3402 | push: push(r1);
3404 | push: push(r2);
3406 | call: push(3408); go to memory[5921]
3408 | jt: if (r0 == 0 { go to memory[3457] }
3411 | add: r1 = r0 + 2
3415 | rmem: r0 = memory[r1]
3418 | rmem: r2 = memory[2732]
3421 | eq: if (r0 == r2) { r2 == 1 } else { r2 == 0 }
3428 | wmem: memory[r1] = 0
3431 | push: push(r0);
3433 | push: push(r1);
3435 | push: push(r2);
3437 | set: r0 = 28054
3440 | set: r1 = 1531
3443 | add: r2 = 149 + 22998
3447 | call: push(3449); go to memory[1458]
3449 | pop: r2 = pop();
3451 | pop: r1 = pop();
3453 | pop: r0 = pop();
3455 | jmp: go to memory[3481]
3457 | push: push(r0);
3459 | push: push(r1);
3461 | push: push(r2);
3463 | set: r0 = 28062
3466 | set: r1 = 1531
3469 | add: r2 = 2956 + 231
3473 | call: push(3475); go to memory[1458]
3475 | pop: r2 = pop();
3477 | pop: r1 = pop();
3479 | pop: r0 = pop();
3481 | pop: r2 = pop();
3483 | pop: r1 = pop();
3485 | pop: r0 = pop();
3487 | ret: go to memory[pop()];
3488 | push: push(r0);
3490 | push: push(r1);
3492 | call: push(3494); go to memory[5921]
3494 | jt: if (r0 == 0 { go to memory[3539] }
3497 | add: r1 = r0 + 2
3501 | rmem: r0 = memory[r1]
3504 | jt: if (r0 != 0 { go to memory[3539] }
3507 | rmem: r0 = memory[2732]
3510 | wmem: memory[r1] = r0
3513 | push: push(r0);
3515 | push: push(r1);
3517 | push: push(r2);
3519 | set: r0 = 28090
3522 | set: r1 = 1531
3525 | add: r2 = 27045 + 5314
3529 | call: push(3531); go to memory[1458]
3531 | pop: r2 = pop();
3533 | pop: r1 = pop();
3535 | pop: r0 = pop();
3537 | jmp: go to memory[3563]
3539 | push: push(r0);
3541 | push: push(r1);
3543 | push: push(r2);
3545 | set: r0 = 28100
3548 | set: r1 = 1531
3551 | add: r2 = 5789 + 21597
3555 | call: push(3557); go to memory[1458]
3557 | pop: r2 = pop();
3559 | pop: r1 = pop();
3561 | pop: r0 = pop();
3563 | pop: r1 = pop();
3565 | pop: r0 = pop();
3567 | ret: go to memory[pop()];
3568 | push: push(r0);
3570 | push: push(r1);
3572 | call: push(3574); go to memory[5921]
3574 | jt: if (r0 == 0 { go to memory[3601] }
3577 | add: r1 = r0 + 2
3581 | rmem: r1 = memory[r1]
3584 | jt: if (r1 != 0 { go to memory[3601] }
3587 | add: r1 = r0 + 3
3591 | rmem: r1 = memory[r1]
3594 | jt: if (r1 == 0 { go to memory[3627] }
3597 | call: push(3599); go to memory[r1]
3599 | jmp: go to memory[3651]
3601 | push: push(r0);
3603 | push: push(r1);
3605 | push: push(r2);
3607 | set: r0 = 28135
3610 | set: r1 = 1531
3613 | add: r2 = 17722 + 8111
3617 | call: push(3619); go to memory[1458]
3619 | pop: r2 = pop();
3621 | pop: r1 = pop();
3623 | pop: r0 = pop();
3625 | jmp: go to memory[3651]
3627 | push: push(r0);
3629 | push: push(r1);
3631 | push: push(r2);
3633 | set: r0 = 28170
3636 | set: r1 = 1531
3639 | add: r2 = 17316 + 2764
3643 | call: push(3645); go to memory[1458]
3645 | pop: r2 = pop();
3647 | pop: r1 = pop();
3649 | pop: r0 = pop();
3651 | pop: r1 = pop();
3653 | pop: r0 = pop();
3655 | ret: go to memory[pop()];
3656 | push: push(r0);
3658 | push: push(r1);
3660 | push: push(r2);
3662 | set: r0 = 2680
3665 | call: push(3667); go to memory[5990]
3667 | jt: if (r0 != 0 { go to memory[3694] }
3670 | add: r0 = 2676 + 2
3674 | wmem: memory[r0] = 32767
3677 | add: r0 = 2680 + 2
3681 | wmem: memory[r0] = 32767
3684 | add: r0 = 2672 + 2
3688 | wmem: memory[r0] = 32767
3691 | wmem: memory[2732] = 2648
3694 | pop: r2 = pop();
3696 | pop: r1 = pop();
3698 | pop: r0 = pop();
3700 | ret: go to memory[pop()];
3701 | push: push(r0);
3703 | push: push(r1);
3705 | push: push(r2);
3707 | set: r0 = 28204
3710 | set: r1 = 1531
3713 | add: r2 = 19975 + 3675
3717 | call: push(3719); go to memory[1458]
3719 | pop: r2 = pop();
3721 | pop: r1 = pop();
3723 | pop: r0 = pop();
3725 | halt: 
3726 | halt: 
3727 | push: push(r1);
3729 | rmem: r1 = memory[3726]
3732 | or: r1 = r1 or r0
3736 | wmem: memory[3726] = r1
3739 | pop: r1 = pop();
3741 | ret: go to memory[pop()];
3742 | wmem: memory[3726] = 0
3745 | ret: go to memory[pop()];
3746 | push: push(r0);
3748 | set: r0 = 1
3751 | call: push(3753); go to memory[3727]
3753 | pop: r0 = pop();
3755 | ret: go to memory[pop()];
3756 | push: push(r0);
3758 | set: r0 = 2
3761 | call: push(3763); go to memory[3727]
3763 | pop: r0 = pop();
3765 | ret: go to memory[pop()];
3766 | push: push(r0);
3768 | set: r0 = 4
3771 | call: push(3773); go to memory[3727]
3773 | pop: r0 = pop();
3775 | ret: go to memory[pop()];
3776 | push: push(r0);
3778 | set: r0 = 8
3781 | call: push(3783); go to memory[3727]
3783 | pop: r0 = pop();
3785 | ret: go to memory[pop()];
3786 | push: push(r0);
3788 | set: r0 = 16
3791 | call: push(3793); go to memory[3727]
3793 | pop: r0 = pop();
3795 | ret: go to memory[pop()];
3796 | push: push(r0);
3798 | set: r0 = 32
3801 | call: push(3803); go to memory[3727]
3803 | pop: r0 = pop();
3805 | ret: go to memory[pop()];
3806 | push: push(r0);
3808 | push: push(r1);
3810 | push: push(r2);
3812 | push: push(r3);
3814 | set: r0 = 64
3817 | call: push(3819); go to memory[3727]
3819 | push: push(r0);
3821 | push: push(r1);
3823 | push: push(r2);
3825 | set: r0 = 28236
3828 | set: r1 = 1531
3831 | add: r2 = 7385 + 11042
3835 | call: push(3837); go to memory[1458]
3837 | pop: r2 = pop();
3839 | pop: r1 = pop();
3841 | pop: r0 = pop();
3843 | rmem: r0 = memory[3726]
3846 | set: r1 = 25866
3849 | set: r2 = 32767
3852 | set: r3 = 28299
3855 | call: push(3857); go to memory[1841]
3857 | push: push(r0);
3859 | push: push(r1);
3861 | push: push(r2);
3863 | set: r0 = 28303
3866 | set: r1 = 1531
3869 | add: r2 = 17281 + 9448
3873 | call: push(3875); go to memory[1458]
3875 | pop: r2 = pop();
3877 | pop: r1 = pop();
3879 | pop: r0 = pop();
3881 | wmem: memory[2732] = 2417
3884 | pop: r3 = pop();
3886 | pop: r2 = pop();
3888 | pop: r1 = pop();
3890 | pop: r0 = pop();
3892 | ret: go to memory[pop()];
3893 | push: push(r0);
3895 | push: push(r1);
3897 | rmem: r0 = memory[2462]
3900 | rmem: r1 = memory[27101]
3903 | eq: if (r0 == r1) { r0 == 1 } else { r0 == 0 }
3910 | push: push(r0);
3912 | push: push(r1);
3914 | push: push(r2);
3916 | set: r0 = 28347
3919 | set: r1 = 1531
3922 | add: r2 = 3847 + 21852
3926 | call: push(3928); go to memory[1458]
3928 | pop: r2 = pop();
3930 | pop: r1 = pop();
3932 | pop: r0 = pop();
3934 | wmem: memory[2732] = 2457
3937 | wmem: memory[2733] = 2457
3940 | pop: r1 = pop();
3942 | pop: r0 = pop();
3944 | ret: go to memory[pop()];
3951 | halt: 
3953 | halt: 
3954 | halt: 
3955 | halt: 
3956 | halt: 
3957 | halt: 
3958 | push: push(r0);
3960 | push: push(r1);
3962 | set: r0 = 2
3965 | set: r1 = 0
3968 | call: push(3970); go to memory[4218]
3970 | pop: r1 = pop();
3972 | pop: r0 = pop();
3974 | ret: go to memory[pop()];
3975 | push: push(r0);
3977 | push: push(r1);
3979 | set: r0 = 8
3982 | set: r1 = 1
3985 | call: push(3987); go to memory[4279]
3987 | pop: r1 = pop();
3989 | pop: r0 = pop();
3991 | ret: go to memory[pop()];
3992 | push: push(r0);
3994 | push: push(r1);
3996 | set: r0 = 1
3999 | set: r1 = 2
4002 | call: push(4004); go to memory[4218]
4004 | pop: r1 = pop();
4006 | pop: r0 = pop();
4008 | ret: go to memory[pop()];
4009 | push: push(r0);
4011 | push: push(r1);
4013 | set: r0 = 1
4016 | set: r1 = 3
4019 | call: push(4021); go to memory[4279]
4021 | call: push(4023); go to memory[4533]
4023 | pop: r1 = pop();
4025 | pop: r0 = pop();
4027 | ret: go to memory[pop()];
4028 | push: push(r0);
4030 | push: push(r1);
4032 | set: r0 = 4
4035 | set: r1 = 4
4038 | call: push(4040); go to memory[4279]
4040 | pop: r1 = pop();
4042 | pop: r0 = pop();
4044 | ret: go to memory[pop()];
4045 | push: push(r0);
4047 | push: push(r1);
4049 | set: r0 = 2
4052 | set: r1 = 5
4055 | call: push(4057); go to memory[4218]
4057 | pop: r1 = pop();
4059 | pop: r0 = pop();
4061 | ret: go to memory[pop()];
4062 | push: push(r0);
4064 | push: push(r1);
4066 | set: r0 = 11
4069 | set: r1 = 6
4072 | call: push(4074); go to memory[4279]
4074 | pop: r1 = pop();
4076 | pop: r0 = pop();
4078 | ret: go to memory[pop()];
4079 | push: push(r0);
4081 | push: push(r1);
4083 | set: r0 = 2
4086 | set: r1 = 7
4089 | call: push(4091); go to memory[4218]
4091 | pop: r1 = pop();
4093 | pop: r0 = pop();
4095 | ret: go to memory[pop()];
4096 | push: push(r0);
4098 | push: push(r1);
4100 | set: r0 = 0
4103 | set: r1 = 8
4106 | call: push(4108); go to memory[4218]
4108 | pop: r1 = pop();
4110 | pop: r0 = pop();
4112 | ret: go to memory[pop()];
4113 | push: push(r0);
4115 | push: push(r1);
4117 | set: r0 = 4
4120 | set: r1 = 9
4123 | call: push(4125); go to memory[4279]
4125 | pop: r1 = pop();
4127 | pop: r0 = pop();
4129 | ret: go to memory[pop()];
4130 | push: push(r0);
4132 | push: push(r1);
4134 | set: r0 = 1
4137 | set: r1 = 10
4140 | call: push(4142); go to memory[4218]
4142 | pop: r1 = pop();
4144 | pop: r0 = pop();
4146 | ret: go to memory[pop()];
4147 | push: push(r0);
4149 | push: push(r1);
4151 | set: r0 = 18
4154 | set: r1 = 11
4157 | call: push(4159); go to memory[4279]
4159 | pop: r1 = pop();
4161 | pop: r0 = pop();
4163 | ret: go to memory[pop()];
4164 | call: push(4166); go to memory[4611]
4166 | ret: go to memory[pop()];
4167 | push: push(r0);
4169 | push: push(r1);
4171 | set: r0 = 1
4174 | set: r1 = 12
4177 | call: push(4179); go to memory[4218]
4179 | pop: r1 = pop();
4181 | pop: r0 = pop();
4183 | ret: go to memory[pop()];
4184 | push: push(r0);
4186 | push: push(r1);
4188 | set: r0 = 9
4191 | set: r1 = 13
4194 | call: push(4196); go to memory[4279]
4196 | pop: r1 = pop();
4198 | pop: r0 = pop();
4200 | ret: go to memory[pop()];
4201 | push: push(r0);
4203 | push: push(r1);
4205 | set: r0 = 2
4208 | set: r1 = 14
4211 | call: push(4213); go to memory[4218]
4213 | pop: r1 = pop();
4215 | pop: r0 = pop();
4217 | ret: go to memory[pop()];
4218 | push: push(r0);
4220 | push: push(r1);
4222 | push: push(r2);
4224 | add: r2 = 2716 + 2
4228 | rmem: r2 = memory[r2]
4231 | jt: if (r2 != 0 { go to memory[4272] }
4234 | call: push(4236); go to memory[4405]
4236 | wmem: memory[3951] = r0
4239 | add: r1 = r0 + 3945
4243 | rmem: r1 = memory[r1]
4246 | set: r0 = 26024
4249 | call: push(4251); go to memory[1518]
4251 | set: r0 = r1
4254 | call: push(4256); go to memory[1518]
4256 | set: r0 = 26088
4259 | call: push(4261); go to memory[1518]
4261 | set: r0 = r1
4264 | call: push(4266); go to memory[1518]
4266 | out: printf(46);
4268 | out: printf(10);
4270 | out: printf(10);
4272 | pop: r2 = pop();
4274 | pop: r1 = pop();
4276 | pop: r0 = pop();
4278 | ret: go to memory[pop()];
4279 | push: push(r0);
4281 | push: push(r1);
4283 | push: push(r2);
4285 | add: r2 = 2716 + 2
4289 | rmem: r2 = memory[r2]
4292 | jt: if (r2 != 0 { go to memory[4398] }
4295 | call: push(4297); go to memory[4405]
4297 | push: push(r0);
4299 | rmem: r0 = memory[3951]
4302 | add: r1 = r0 + 3945
4306 | rmem: r1 = memory[r1]
4309 | set: r0 = 26122
4312 | call: push(4314); go to memory[1518]
4314 | set: r0 = r1
4317 | call: push(4319); go to memory[1518]
4319 | set: r0 = 26170
4322 | call: push(4324); go to memory[1518]
4324 | pop: r0 = pop();
4326 | set: r1 = r0
4329 | rmem: r0 = memory[3952]
4332 | rmem: r2 = memory[3951]
4335 | add: r2 = r2 + 3948
4339 | rmem: r2 = memory[r2]
4342 | call: push(4344); go to memory[r2]
4344 | jt: if (r1 != 0 { go to memory[4391] }
4347 | rmem: r1 = memory[3952]
4350 | wmem: memory[3952] = r0
4353 | gt: if (r0 > r1) { r2 == 1 } else { r2 == 0 }
4360 | push: push(r0);
4362 | set: r0 = 26235
4365 | call: push(4367); go to memory[1518]
4367 | pop: r0 = pop();
4369 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
4376 | push: push(r0);
4378 | set: r0 = 26267
4381 | call: push(4383); go to memory[1518]
4383 | pop: r0 = pop();
4385 | out: printf(10);
4387 | out: printf(10);
4389 | jmp: go to memory[4398]
4391 | call: push(4393); go to memory[4660]
4393 | set: r0 = 26299
4396 | call: push(4398); go to memory[1518]
4398 | pop: r2 = pop();
4400 | pop: r1 = pop();
4402 | pop: r0 = pop();
4404 | ret: go to memory[pop()];
4405 | push: push(r0);
4407 | push: push(r1);
4409 | push: push(r2);
4411 | push: push(r3);
4413 | push: push(r4);
4415 | push: push(r5);
4417 | rmem: r5 = memory[3953]
4420 | gt: if (r5 > 29999) { r3 == 1 } else { r3 == 0 }
4427 | add: r5 = r5 + 1
4431 | wmem: memory[3953] = r5
4434 | set: r3 = r0
4437 | set: r4 = r1
4440 | add: r0 = r5 + 2
4444 | call: push(4446); go to memory[2281]
4446 | rmem: r1 = memory[3954]
4449 | or: r0 = r1 or r0
4453 | set: r1 = r4
4456 | call: push(4458); go to memory[2248]
4458 | wmem: memory[3954] = r0
4461 | set: r0 = 3955
4464 | add: r1 = r5 + 2
4468 | set: r2 = r4
4471 | call: push(4473); go to memory[4515]
4473 | set: r0 = 3956
4476 | mult: r1 = r5 * r5
4480 | mult: r2 = r4 * r4
4484 | call: push(4486); go to memory[4515]
4486 | set: r0 = 3957
4489 | set: r1 = 13
4492 | mult: r2 = r3 * 9
4496 | mult: r2 = r2 * r2
4500 | call: push(4502); go to memory[4515]
4502 | pop: r5 = pop();
4504 | pop: r4 = pop();
4506 | pop: r3 = pop();
4508 | pop: r2 = pop();
4510 | pop: r1 = pop();
4512 | pop: r0 = pop();
4514 | ret: go to memory[pop()];
4515 | push: push(r0);
4517 | rmem: r0 = memory[r0]
4520 | call: push(4522); go to memory[2248]
4522 | set: r1 = r2
4525 | call: push(4527); go to memory[2125]
4527 | pop: r1 = pop();
4529 | wmem: memory[r1] = r0
4532 | ret: go to memory[pop()];
4533 | push: push(r0);
4535 | add: r0 = 2716 + 2
4539 | rmem: r0 = memory[r0]
4542 | jt: if (r0 != 0 { go to memory[4608] }
4545 | set: r0 = 26321
4548 | call: push(4550); go to memory[1518]
4550 | rmem: r0 = memory[3952]
4553 | eq: if (r0 == 30) { r0 == 1 } else { r0 == 0 }
4560 | set: r0 = 26354
4563 | call: push(4565); go to memory[1518]
4565 | set: r0 = 26398
4568 | call: push(4570); go to memory[1518]
4570 | call: push(4572); go to memory[4660]
4572 | jmp: go to memory[4608]
4574 | set: r0 = 26440
4577 | call: push(4579); go to memory[1518]
4579 | rmem: r0 = memory[3954]
4582 | add: r0 = r0 + 1
4586 | jt: if (r0 != 0 { go to memory[4596] }
4589 | set: r0 = 26484
4592 | call: push(4594); go to memory[1518]
4594 | jmp: go to memory[4565]
4596 | set: r0 = 26584
4599 | call: push(4601); go to memory[1518]
4601 | add: r0 = 2716 + 2
4605 | wmem: memory[r0] = 32767
4608 | pop: r0 = pop();
4610 | ret: go to memory[pop()];
4611 | push: push(r0);
4613 | add: r0 = 2716 + 2
4617 | rmem: r0 = memory[r0]
4620 | jt: if (r0 != 0 { go to memory[4657] }
4623 | set: r0 = 26717
4626 | call: push(4628); go to memory[1518]
4628 | rmem: r0 = memory[2732]
4631 | eq: if (r0 == 2623) { r0 == 1 } else { r0 == 0 }
4638 | set: r0 = 26725
4641 | call: push(4643); go to memory[1518]
4643 | jmp: go to memory[4650]
4645 | set: r0 = 26731
4648 | call: push(4650); go to memory[1518]
4650 | set: r0 = 26737
4653 | call: push(4655); go to memory[1518]
4655 | call: push(4657); go to memory[4660]
4657 | pop: r0 = pop();
4659 | ret: go to memory[pop()];
4660 | push: push(r0);
4662 | wmem: memory[3952] = 22
4665 | wmem: memory[3953] = 0
4668 | wmem: memory[3954] = 0
4671 | wmem: memory[3955] = 0
4674 | wmem: memory[3956] = 0
4677 | wmem: memory[3957] = 0
4680 | add: r0 = 2716 + 2
4684 | wmem: memory[r0] = 2623
4687 | pop: r0 = pop();
4689 | ret: go to memory[pop()];
4690 | push: push(r0);
4692 | add: r0 = 2716 + 2
4696 | rmem: r0 = memory[r0]
4699 | eq: if (r0 == 32767) { r0 == 1 } else { r0 == 0 }
4706 | set: r0 = 26824
4709 | call: push(4711); go to memory[1518]
4711 | wmem: memory[2732] = 2578
4714 | wmem: memory[2733] = 2578
4717 | pop: r0 = pop();
4719 | ret: go to memory[pop()];
4720 | push: push(r0);
4722 | push: push(r1);
4724 | push: push(r2);
4726 | push: push(r3);
4728 | push: push(r0);
4730 | push: push(r1);
4732 | push: push(r2);
4734 | set: r0 = 28369
4737 | set: r1 = 1531
4740 | add: r2 = 22584 + 2859
4744 | call: push(4746); go to memory[1458]
4746 | pop: r2 = pop();
4748 | pop: r1 = pop();
4750 | pop: r0 = pop();
4752 | set: r0 = 4242
4755 | set: r1 = 25866
4758 | set: r2 = 32767
4761 | set: r3 = 28397
4764 | call: push(4766); go to memory[1841]
4766 | push: push(r0);
4768 | push: push(r1);
4770 | push: push(r2);
4772 | set: r0 = 28401
4775 | set: r1 = 1531
4778 | add: r2 = 19892 + 6964
4782 | call: push(4784); go to memory[1458]
4784 | pop: r2 = pop();
4786 | pop: r1 = pop();
4788 | pop: r0 = pop();
4790 | pop: r3 = pop();
4792 | pop: r2 = pop();
4794 | pop: r1 = pop();
4796 | pop: r0 = pop();
4798 | ret: go to memory[pop()];
4799 | push: push(r0);
4801 | add: r0 = 2672 + 2
4805 | rmem: r0 = memory[r0]
4808 | jt: if (r0 != 0 { go to memory[4858] }
4811 | add: r0 = 2684 + 2
4815 | wmem: memory[r0] = 32767
4818 | add: r0 = 2672 + 2
4822 | wmem: memory[r0] = 32767
4825 | add: r0 = 2676 + 2
4829 | wmem: memory[r0] = 0
4832 | push: push(r0);
4834 | push: push(r1);
4836 | push: push(r2);
4838 | set: r0 = 28453
4841 | set: r1 = 1531
4844 | add: r2 = 3547 + 1312
4848 | call: push(4850); go to memory[1458]
4850 | pop: r2 = pop();
4852 | pop: r1 = pop();
4854 | pop: r0 = pop();
4856 | jmp: go to memory[4882]
4858 | push: push(r0);
4860 | push: push(r1);
4862 | push: push(r2);
4864 | set: r0 = 28510
4867 | set: r1 = 1531
4870 | add: r2 = 415 + 7516
4874 | call: push(4876); go to memory[1458]
4876 | pop: r2 = pop();
4878 | pop: r1 = pop();
4880 | pop: r0 = pop();
4882 | pop: r0 = pop();
4884 | ret: go to memory[pop()];
4885 | push: push(r0);
4887 | add: r0 = 2676 + 2
4891 | wmem: memory[r0] = 32767
4894 | add: r0 = 2680 + 2
4898 | wmem: memory[r0] = 0
4901 | push: push(r0);
4903 | push: push(r1);
4905 | push: push(r2);
4907 | set: r0 = 28569
4910 | set: r1 = 1531
4913 | add: r2 = 1728 + 9889
4917 | call: push(4919); go to memory[1458]
4919 | pop: r2 = pop();
4921 | pop: r1 = pop();
4923 | pop: r0 = pop();
4925 | wmem: memory[2733] = 0
4928 | pop: r0 = pop();
4930 | ret: go to memory[pop()];
4931 | push: push(r0);
4933 | add: r0 = 2676 + 2
4937 | wmem: memory[r0] = 0
4940 | add: r0 = 2680 + 2
4944 | wmem: memory[r0] = 32767
4947 | push: push(r0);
4949 | push: push(r1);
4951 | push: push(r2);
4953 | set: r0 = 28595
4956 | set: r1 = 1531
4959 | add: r2 = 15889 + 6356
4963 | call: push(4965); go to memory[1458]
4965 | pop: r2 = pop();
4967 | pop: r1 = pop();
4969 | pop: r0 = pop();
4971 | wmem: memory[2733] = 0
4974 | pop: r0 = pop();
4976 | ret: go to memory[pop()];
4977 | push: push(r2);
4979 | push: push(r3);
4981 | rmem: r2 = memory[2732]
4984 | eq: if (r2 == 2457) { r2 == 1 } else { r2 == 0 }
4991 | push: push(r0);
4993 | push: push(r1);
4995 | push: push(r2);
4997 | set: r0 = 28621
5000 | set: r1 = 1531
5003 | add: r2 = 8339 + 3287
5007 | call: push(5009); go to memory[1458]
5009 | pop: r2 = pop();
5011 | pop: r1 = pop();
5013 | pop: r0 = pop();
5015 | jmp: go to memory[5336]
5017 | add: r2 = r0 + 2
5021 | wmem: memory[r2] = 32767
5024 | rmem: r2 = memory[2462]
5027 | add: r2 = r2 + 27095
5031 | add: r2 = r2 + 1
5035 | rmem: r2 = memory[r2]
5038 | add: r3 = 2457 + 1
5042 | rmem: r3 = memory[r3]
5045 | add: r3 = r3 + r2
5049 | add: r2 = r1 + 48
5053 | wmem: memory[r3] = r2
5056 | rmem: r2 = memory[2462]
5059 | add: r2 = r2 + 27101
5063 | add: r2 = r2 + 1
5067 | wmem: memory[r2] = r1
5070 | push: push(r0);
5072 | push: push(r0);
5074 | push: push(r1);
5076 | push: push(r2);
5078 | set: r0 = 28664
5081 | set: r1 = 1531
5084 | add: r2 = 1418 + 6113
5088 | call: push(5090); go to memory[1458]
5090 | pop: r2 = pop();
5092 | pop: r1 = pop();
5094 | pop: r0 = pop();
5096 | pop: r0 = pop();
5098 | push: push(r0);
5100 | add: r2 = r0 + 0
5104 | rmem: r0 = memory[r2]
5107 | call: push(5109); go to memory[1518]
5109 | pop: r0 = pop();
5111 | push: push(r0);
5113 | push: push(r0);
5115 | push: push(r1);
5117 | push: push(r2);
5119 | set: r0 = 28679
5122 | set: r1 = 1531
5125 | add: r2 = 14257 + 17220
5129 | call: push(5131); go to memory[1458]
5131 | pop: r2 = pop();
5133 | pop: r1 = pop();
5135 | pop: r0 = pop();
5137 | pop: r0 = pop();
5139 | rmem: r2 = memory[2462]
5142 | add: r2 = r2 + 1
5146 | wmem: memory[2462] = r2
5149 | rmem: r3 = memory[27101]
5152 | eq: if (r2 == r3) { r3 == 1 } else { r3 == 0 }
5159 | set: r0 = 0
5162 | add: r1 = 27101 + 1
5166 | rmem: r1 = memory[r1]
5169 | add: r0 = r0 + r1
5173 | add: r1 = 27101 + 2
5177 | rmem: r1 = memory[r1]
5180 | add: r2 = 27101 + 3
5184 | rmem: r2 = memory[r2]
5187 | mult: r2 = r2 * r2
5191 | mult: r1 = r1 * r2
5195 | add: r0 = r0 + r1
5199 | add: r1 = 27101 + 4
5203 | rmem: r1 = memory[r1]
5206 | mult: r2 = r1 * r1
5210 | mult: r2 = r2 * r1
5214 | add: r0 = r0 + r2
5218 | add: r1 = 27101 + 5
5222 | rmem: r1 = memory[r1]
5225 | mult: r1 = r1 * 32767
5229 | add: r0 = r0 + r1
5233 | eq: if (r0 == 399) { r1 == 1 } else { r1 == 0 }
5240 | add: r2 = 2688 + 2
5244 | wmem: memory[r2] = 2457
5247 | add: r2 = 2692 + 2
5251 | wmem: memory[r2] = 2457
5254 | add: r2 = 2696 + 2
5258 | wmem: memory[r2] = 2457
5261 | add: r2 = 2700 + 2
5265 | wmem: memory[r2] = 2457
5268 | add: r2 = 2704 + 2
5272 | wmem: memory[r2] = 2457
5275 | wmem: memory[2462] = 0
5278 | set: r0 = 27095
5281 | set: r1 = 5341
5284 | call: push(5286); go to memory[1458]
5286 | push: push(r0);
5288 | push: push(r1);
5290 | push: push(r2);
5292 | set: r0 = 28710
5295 | set: r1 = 1531
5298 | add: r2 = 7370 + 9114
5302 | call: push(5304); go to memory[1458]
5304 | pop: r2 = pop();
5306 | pop: r1 = pop();
5308 | pop: r0 = pop();
5310 | jmp: go to memory[5336]
5312 | push: push(r0);
5314 | push: push(r1);
5316 | push: push(r2);
5318 | set: r0 = 28777
5321 | set: r1 = 1531
5324 | add: r2 = 2171 + 20463
5328 | call: push(5330); go to memory[1458]
5330 | pop: r2 = pop();
5332 | pop: r1 = pop();
5334 | pop: r0 = pop();
5336 | pop: r3 = pop();
5338 | pop: r2 = pop();
5340 | ret: go to memory[pop()];
5341 | push: push(r2);
5343 | add: r2 = 2457 + 1
5347 | rmem: r2 = memory[r2]
5350 | add: r2 = r2 + r0
5354 | wmem: memory[r2] = 95
5357 | pop: r2 = pop();
5359 | ret: go to memory[pop()];
5360 | push: push(r0);
5362 | push: push(r1);
5364 | set: r0 = 2688
5367 | set: r1 = 2
5370 | call: push(5372); go to memory[4977]
5372 | pop: r1 = pop();
5374 | pop: r0 = pop();
5376 | ret: go to memory[pop()];
5377 | push: push(r0);
5379 | push: push(r1);
5381 | set: r0 = 2692
5384 | set: r1 = 3
5387 | call: push(5389); go to memory[4977]
5389 | pop: r1 = pop();
5391 | pop: r0 = pop();
5393 | ret: go to memory[pop()];
5394 | push: push(r0);
5396 | push: push(r1);
5398 | set: r0 = 2696
5401 | set: r1 = 5
5404 | call: push(5406); go to memory[4977]
5406 | pop: r1 = pop();
5408 | pop: r0 = pop();
5410 | ret: go to memory[pop()];
5411 | push: push(r0);
5413 | push: push(r1);
5415 | set: r0 = 2700
5418 | set: r1 = 7
5421 | call: push(5423); go to memory[4977]
5423 | pop: r1 = pop();
5425 | pop: r0 = pop();
5427 | ret: go to memory[pop()];
5428 | push: push(r0);
5430 | push: push(r1);
5432 | set: r0 = 2704
5435 | set: r1 = 9
5438 | call: push(5440); go to memory[4977]
5440 | pop: r1 = pop();
5442 | pop: r0 = pop();
5444 | ret: go to memory[pop()];
5445 | push: push(r0);
5447 | push: push(r1);
5449 | push: push(r2);
5451 | jt: if (r7 == 0 { go to memory[5605] }
5454 | push: push(r0);
5456 | push: push(r1);
5458 | push: push(r2);
5460 | set: r0 = 28844
5463 | set: r1 = 1531
5466 | add: r2 = 1543 + 866
5470 | call: push(5472); go to memory[1458]
5472 | pop: r2 = pop();
5474 | pop: r1 = pop();
5476 | pop: r0 = pop();
5478 | noop: 
5480 | noop: 
5482 | noop: 
5485 | eq: if (r1 == 1) { 1 == 1 } else { 1 == 0 }
5491 | eq: if (r0 == 6) { r1 == 1 } else { r1 == 0 }
5498 | push: push(r0);
5500 | push: push(r1);
5502 | push: push(r2);
5504 | set: r0 = 29014
5507 | set: r1 = 1531
5510 | add: r2 = 8025 + 7965
5514 | call: push(5516); go to memory[1458]
5516 | pop: r2 = pop();
5518 | pop: r1 = pop();
5520 | pop: r0 = pop();
5522 | set: r0 = r7
5525 | set: r1 = 25866
5528 | set: r2 = 32767
5531 | push: push(r3);
5533 | set: r3 = 29241
5536 | call: push(5538); go to memory[1841]
5538 | pop: r3 = pop();
5540 | push: push(r0);
5542 | push: push(r1);
5544 | push: push(r2);
5546 | set: r0 = 29245
5549 | set: r1 = 1531
5552 | add: r2 = 1211 + 23978
5556 | call: push(5558); go to memory[1458]
5558 | pop: r2 = pop();
5560 | pop: r1 = pop();
5562 | pop: r0 = pop();
5564 | wmem: memory[2732] = 2498
5567 | wmem: memory[2733] = 0
5570 | add: r1 = 2708 + 2
5574 | wmem: memory[r1] = 32767
5577 | jmp: go to memory[5714]
5579 | push: push(r0);
5581 | push: push(r1);
5583 | push: push(r2);
5585 | set: r0 = 29400
5588 | set: r1 = 1531
5591 | add: r2 = 10577 + 19216
5595 | call: push(5597); go to memory[1458]
5597 | pop: r2 = pop();
5599 | pop: r1 = pop();
5601 | pop: r0 = pop();
5603 | jmp: go to memory[5714]
5605 | push: push(r0);
5607 | push: push(r1);
5609 | push: push(r2);
5611 | set: r0 = 29545
5614 | set: r1 = 1531
5617 | add: r2 = 13726 + 9414
5621 | call: push(5623); go to memory[1458]
5623 | pop: r2 = pop();
5625 | pop: r1 = pop();
5627 | pop: r0 = pop();
5629 | set: r0 = 0
5632 | add: r2 = 1 + 27101
5636 | rmem: r1 = memory[r2]
5639 | add: r0 = r0 + r1
5643 | mult: r0 = r0 * 31660
5647 | call: push(5649); go to memory[2125]
5649 | rmem: r1 = memory[27101]
5652 | add: r1 = r1 + 27101
5656 | add: r2 = r2 + 1
5660 | gt: if (r2 > r1) { r1 == 1 } else { r1 == 0 }
5667 | set: r1 = 25866
5670 | set: r2 = 32767
5673 | push: push(r3);
5675 | set: r3 = 29663
5678 | call: push(5680); go to memory[1841]
5680 | pop: r3 = pop();
5682 | push: push(r0);
5684 | push: push(r1);
5686 | push: push(r2);
5688 | set: r0 = 29667
5691 | set: r1 = 1531
5694 | add: r2 = 74 + 44
5698 | call: push(5700); go to memory[1458]
5700 | pop: r2 = pop();
5702 | pop: r1 = pop();
5704 | pop: r0 = pop();
5706 | wmem: memory[2732] = 2488
5709 | wmem: memory[2733] = 0
5712 | jmp: go to memory[5714]
5714 | pop: r2 = pop();
5716 | pop: r1 = pop();
5718 | pop: r0 = pop();
5720 | ret: go to memory[pop()];
5721 | push: push(r0);
5723 | push: push(r1);
5725 | push: push(r2);
5727 | push: push(r3);
5729 | push: push(r0);
5731 | push: push(r1);
5733 | push: push(r2);
5735 | set: r0 = 29757
5738 | set: r1 = 1531
5741 | add: r2 = 2318 + 8533
5745 | call: push(5747); go to memory[1458]
5747 | pop: r2 = pop();
5749 | pop: r1 = pop();
5751 | pop: r0 = pop();
5753 | rmem: r0 = memory[3955]
5756 | rmem: r1 = memory[3956]
5759 | call: push(5761); go to memory[2125]
5761 | rmem: r1 = memory[3957]
5764 | call: push(5766); go to memory[2125]
5766 | set: r1 = 25919
5769 | set: r2 = 4
5772 | push: push(r3);
5774 | set: r3 = 29942
5777 | call: push(5779); go to memory[1841]
5779 | pop: r3 = pop();
5781 | push: push(r0);
5783 | push: push(r1);
5785 | push: push(r2);
5787 | set: r0 = 29946
5790 | set: r1 = 1531
5793 | add: r2 = 16156 + 6613
5797 | call: push(5799); go to memory[1458]
5799 | pop: r2 = pop();
5801 | pop: r1 = pop();
5803 | pop: r0 = pop();
5805 | pop: r3 = pop();
5807 | pop: r2 = pop();
5809 | pop: r1 = pop();
5811 | pop: r0 = pop();
5813 | ret: go to memory[pop()];
5814 | out: printf(45);
5816 | out: printf(32);
5818 | call: push(5820); go to memory[1518]
5820 | out: printf(10);
5822 | ret: go to memory[pop()];
5823 | push: push(r1);
5825 | push: push(r2);
5827 | set: r0 = 27381
5830 | set: r1 = 5846
5833 | set: r2 = 0
5836 | call: push(5838); go to memory[1458]
5838 | set: r0 = r2
5841 | pop: r2 = pop();
5843 | pop: r1 = pop();
5845 | ret: go to memory[pop()];
5846 | push: push(r3);
5848 | push: push(r4);
5850 | rmem: r3 = memory[2732]
5853 | add: r4 = r0 + 2
5857 | rmem: r4 = memory[r4]
5860 | eq: if (r3 == r4) { r3 == 1 } else { r3 == 0 }
5867 | add: r2 = r2 + 1
5871 | pop: r4 = pop();
5873 | pop: r3 = pop();
5875 | ret: go to memory[pop()];
5876 | push: push(r0);
5878 | push: push(r1);
5880 | set: r0 = 27381
5883 | set: r1 = 5893
5886 | call: push(5888); go to memory[1458]
5888 | pop: r1 = pop();
5890 | pop: r0 = pop();
5892 | ret: go to memory[pop()];
5893 | push: push(r3);
5895 | add: r3 = r0 + 2
5899 | rmem: r3 = memory[r3]
5902 | eq: if (r2 == r3) { r3 == 1 } else { r3 == 0 }
5909 | add: r0 = r0 + 0
5913 | rmem: r0 = memory[r0]
5916 | call: push(5918); go to memory[5814]
5918 | pop: r3 = pop();
5920 | ret: go to memory[pop()];
5921 | push: push(r1);
5923 | push: push(r2);
5925 | set: r2 = r0
5928 | set: r0 = 27381
5931 | set: r1 = 5964
5934 | call: push(5936); go to memory[1543]
5936 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
5943 | add: r1 = 27381 + r0
5947 | add: r1 = r1 + 1
5951 | rmem: r0 = memory[r1]
5954 | jmp: go to memory[5959]
5956 | set: r0 = 0
5959 | pop: r2 = pop();
5961 | pop: r1 = pop();
5963 | ret: go to memory[pop()];
5964 | push: push(r1);
5966 | set: r1 = r2
5969 | add: r0 = r0 + 0
5973 | rmem: r0 = memory[r0]
5976 | call: push(5978); go to memory[1667]
5978 | pop: r1 = pop();
5980 | jt: if (r0 == 0 { go to memory[5989] }
5983 | set: r2 = r1
5986 | set: r1 = 32767
5989 | ret: go to memory[pop()];
5990 | push: push(r1);
5992 | push: push(r2);
5994 | add: r0 = r0 + 2
5998 | rmem: r0 = memory[r0]
6001 | jt: if (r0 == 0 { go to memory[6019] }
6004 | rmem: r1 = memory[2732]
6007 | eq: if (r0 == r1) { r1 == 1 } else { r1 == 0 }
6014 | set: r0 = 0
6017 | jmp: go to memory[6022]
6019 | set: r0 = 1
6022 | pop: r2 = pop();
6024 | pop: r1 = pop();
6026 | ret: go to memory[pop()];
6027 | jt: if (r0 != 0 { go to memory[6035] }
6030 | add: r0 = r1 + 1
6034 | ret: go to memory[pop()];
6035 | jt: if (r1 != 0 { go to memory[6048] }
6038 | add: r0 = r0 + 32767
6042 | set: r1 = r7
6045 | call: push(6047); go to memory[6027]
6047 | ret: go to memory[pop()];
6048 | push: push(r0);
6050 | add: r1 = r1 + 32767
6054 | call: push(6056); go to memory[6027]
6056 | set: r1 = r0
6059 | pop: r0 = pop();
6061 | add: r0 = r0 + 32767
6065 | call: push(6067); go to memory[6027]
6067 | ret: go to memory[pop()];
6068 | mod: 84 = 101 % 115
6115 | mult: 8 = 99 * 111
6125 | pop: 0 = pop();
6127 | halt: 
6128 | halt: 
6129 | and: 0 = 0 and 0
6133 | halt: 
6134 | halt: 
6135 | halt: 
6136 | halt: 
6137 | halt: 
6138 | halt: 
6139 | halt: 
6140 | halt: 
6141 | halt: 
6142 | add: 70 = 111 + 111
6336 | jt: if (100 != 0 { go to memory[111] }
6344 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
6350 | add: 70 = 111 + 111
6435 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
6441 | add: 68 = 97 + 114
6585 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
6591 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
6597 | add: 68 = 97 + 114
6699 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
6705 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
6711 | add: 68 = 97 + 114
6909 | jmp: go to memory[98]
6916 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
6922 | mod: 82 = 111 % 112
7056 | jt: if (99 == 0 { go to memory[111] }
7065 | eq: if (97 == 99) { 98 == 1 } else { 98 == 0 }
7265 | eq: if (111 == 119) { 100 == 1 } else { 100 == 0 }
7270 | mod: 77 = 111 % 115
7492 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
7497 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
7502 | mod: 77 = 111 % 115
7611 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
7616 | mod: 77 = 111 % 115
7786 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
7791 | jt: if (112 != 0 { go to memory[97] }
7799 | jt: if (80 != 0 { go to memory[97] }
7984 | jmp: go to memory[99]
7991 | jmp: go to memory[108]
7998 | jt: if (100 == 0 { go to memory[97] }
8007 | jt: if (80 != 0 { go to memory[97] }
8149 | jt: if (99 == 0 { go to memory[111] }
8158 | eq: if (97 == 99) { 98 == 1 } else { 98 == 0 }
8163 | rmem: 84 = memory[119]
8303 | jmp: go to memory[108]
8310 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
8316 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
8322 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
8327 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
8332 | rmem: 84 = memory[119]
8404 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
8410 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
8416 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
8421 | rmem: 84 = memory[119]
8493 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
8499 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
8505 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
8510 | rmem: 84 = memory[119]
8582 | mult: 10 = 84 * 104
8651 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
8657 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
8663 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
8668 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
8673 | rmem: 84 = memory[119]
8745 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
8751 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
8757 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
8762 | rmem: 84 = memory[119]
8834 | mult: 10 = 84 * 104
8910 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
8916 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
8922 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
8927 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
8932 | rmem: 84 = memory[119]
9004 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
9010 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
9015 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
9021 | rmem: 84 = memory[119]
9093 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
9098 | rmem: 84 = memory[119]
9170 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
9175 | rmem: 84 = memory[119]
9247 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
9253 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
9259 | and: 68 = 97 and 114
9387 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
9392 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
9397 | and: 68 = 97 and 114
9445 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
9450 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
9455 | and: 68 = 97 and 114
9503 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
9508 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
9513 | and: 68 = 97 and 114
9627 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
9632 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
9637 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
9892 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
9897 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
9903 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
10091 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
10097 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
10103 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
10374 | mult: 10 = 95 * 32
10403 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
10409 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
10415 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
10420 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
10425 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
10599 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
10605 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
10750 | eq: if (111 == 119) { 100 == 1 } else { 100 == 0 }
10755 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
10760 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
10889 | push: push(117);
10892 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
11078 | push: push(117);
11081 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
11086 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
11262 | eq: if (111 == 119) { 100 == 1 } else { 100 == 0 }
11267 | in: 83 = getchar();
11544 | jt: if (111 != 0 { go to memory[117] }
11552 | in: 83 = getchar();
11719 | jmp: go to memory[105]
11726 | gt: if (101 > 97) { 66 == 1 } else { 66 == 0 }
11903 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
11908 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
11913 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
11919 | gt: if (101 > 97) { 66 == 1 } else { 66 == 0 }
12188 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
12193 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
12199 | gt: if (101 > 97) { 66 == 1 } else { 66 == 0 }
12448 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
12453 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
12459 | rmem: 84 = memory[114]
12674 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
12680 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
12686 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
12691 | rmem: 84 = memory[114]
12830 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
12836 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
12842 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
12847 | rmem: 84 = memory[114]
13094 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
13100 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
13106 | rmem: 84 = memory[114]
13408 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
13414 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
13420 | rmem: 84 = memory[114]
13682 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
13688 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
13694 | or: 84 = 114 or 111
13929 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
13935 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
13941 | or: 84 = 114 or 111
14078 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
14084 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
14090 | or: 84 = 114 or 111
14427 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
14433 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
14439 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
14444 | in: 84 = getchar();
14629 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
14634 | or: 84 = 114 or 111
14753 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
14759 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
14765 | mult: 86 = 97 * 117
14839 | mult: 10 = 84 * 104
14905 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
14910 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
14916 | mult: 86 = 97 * 117
14990 | mult: 10 = 84 * 104
15058 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
15063 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
15069 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
15074 | mult: 86 = 97 * 117
15148 | mult: 10 = 84 * 104
15214 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
15219 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
15225 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
15230 | mult: 86 = 97 * 117
15420 | mult: 10 = 84 * 104
15488 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
15494 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
15499 | gt: if (97 > 117) { 118 == 1 } else { 118 == 0 }
15505 | mult: 86 = 97 * 117
15579 | mult: 10 = 84 * 104
15647 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
15653 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
15658 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
15664 | mult: 86 = 97 * 117
15738 | mult: 10 = 84 * 104
15804 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
15810 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
15815 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
15821 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
15826 | mult: 86 = 97 * 117
15900 | mult: 10 = 84 * 104
15969 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
15975 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
15980 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
15986 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
15991 | mult: 86 = 97 * 117
16065 | mult: 10 = 84 * 104
16131 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
16137 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
16143 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
16148 | mult: 86 = 97 * 117
16222 | mult: 10 = 84 * 104
16288 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
16294 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
16299 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
16305 | mult: 86 = 97 * 117
16379 | mult: 10 = 84 * 104
16447 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
16453 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
16458 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
16464 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
16469 | mult: 86 = 97 * 117
16543 | mult: 10 = 84 * 104
16609 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
16615 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
16620 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
16626 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
16631 | mult: 86 = 97 * 117
16705 | mult: 10 = 84 * 104
16774 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
16780 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
16786 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
16791 | call: push(16793); go to memory[86]
16954 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
16960 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
16965 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
16971 | mult: 86 = 97 * 117
17045 | mult: 10 = 84 * 104
17111 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
17117 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
17122 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
17127 | mult: 86 = 97 * 117
17201 | mult: 10 = 84 * 104
17269 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
17275 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
17280 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
17285 | mult: 86 = 97 * 117
17359 | mult: 10 = 84 * 104
17425 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
17431 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
17436 | gt: if (97 > 117) { 86 == 1 } else { 86 == 0 }
17655 | gt: if (101 > 97) { 108 == 1 } else { 108 == 0 }
17793 | jt: if (102 != 0 { go to memory[111] }
17801 | eq: if (97 == 99) { 98 == 1 } else { 98 == 0 }
17933 | pop: 114 = pop();
17937 | mod: 105 = 110 % 118
17949 | call: push(17951); go to memory[80]
18041 | pop: 114 = pop();
18045 | eq: if (97 == 105) { 119 == 1 } else { 119 == 0 }
18050 | eq: if (105 == 100) { 104 == 1 } else { 104 == 0 }
18055 | gt: if (97 > 116) { 101 == 1 } else { 101 == 0 }
18061 | halt: 
18062 | jmp: go to memory[116]
18206 | or: 101 = 109 or 112
18344 | jt: if (108 != 0 { go to memory[97] }
18468 | mod: 108 = 105 % 116
18568 | pop: 99 = pop();
18618 | jt: if (114 == 0 { go to memory[101] }
18691 | or: 99 = 111 or 114
18769 | mult: 115 = 104 * 105
18852 | and: 99 = 111 and 110
18953 | add: 98 = 108 + 117
19029 | mult: 116 = 101 * 108
19113 | or: 98 = 117 or 115
19192 | pop: 111 = pop();
19258 | jmp: go to memory[109]
19384 | and: 115 = 116 and 114
19524 | mult: 10 = 82 * 101
19595 | mult: 112 = 114 * 101
19661 | mult: 105 = 110 * 116
19740 | mult: 112 = 117 * 114
19809 | mult: 105 = 110 * 116
19874 | mult: 70 = 117 * 114
19953 | mult: 116 = 104 * 105
20026 | mult: 114 = 101 * 103
20103 | mult: 10 = 65 * 32
20181 | mult: 100 = 101 * 115
20261 | mult: 109 = 105 * 110
20338 | mult: 104 = 97 * 115
20416 | mult: 115 = 104 * 111
20484 | mult: 10 = 84 * 104
20558 | mult: 101 = 110 * 101
20635 | mult: 99 = 111 * 110
20714 | mult: 73 = 102 * 32
20790 | mult: 108 = 111 * 99
20864 | mult: 105 = 116 * 115
20945 | mult: 116 = 104 * 101
21022 | mult: 101 = 120 * 97
21039 | mult: 10 = 84 * 104
21118 | mult: 99 = 111 * 109
21197 | mult: 115 = 99 * 97
21275 | mult: 121 = 101 * 97
21352 | mult: 10 = 73 * 102
21427 | mult: 104 = 97 * 110
21502 | mult: 114 = 101 * 105
21582 | mult: 118 = 101 * 114
21662 | mult: 104 = 97 * 118
21725 | mult: 10 = 84 * 104
21800 | mult: 98 = 121 * 112
21880 | mult: 97 = 110 * 111
21956 | mult: 110 = 111 * 119
22014 | mult: 10 = 79 * 102
22093 | jt: if (106 != 0 { go to memory[111] }
22201 | mult: 10 = 68 * 97
22404 | mult: 10 = 68 * 97
22492 | mult: 10 = 68 * 97
22735 | mult: 10 = 68 * 97
23013 | mult: 10 = 68 * 97
23432 | mult: 10 = 68 * 97
23701 | mult: 10 = 68 * 97
23995 | mult: 10 = 68 * 97
24323 | mult: 10 = 68 * 97
24730 | mult: 10 = 68 * 97
25279 | mult: 10 = 68 * 97
25655 | mult: 10 = 68 * 97
25943 | push: push(103);
25946 | eq: if (111 == 111) { 108 == 1 } else { 108 == 0 }
25951 | eq: if (101 == 108) { 104 == 1 } else { 104 == 0 }
25956 | pop: 105 = pop();
25960 | eq: if (97 == 107) { 116 == 1 } else { 116 == 0 }
25965 | eq: if (114 == 111) { 100 == 1 } else { 100 == 0 }
25970 | pop: 117 = pop();
25974 | halt: 
25977 | halt: 
25978 | halt: 
25979 | halt: 
25980 | halt: 
25981 | halt: 
25982 | halt: 
25983 | halt: 
25984 | halt: 
25985 | halt: 
25986 | halt: 
25987 | halt: 
25988 | halt: 
25989 | halt: 
25990 | halt: 
25991 | halt: 
25992 | halt: 
25993 | halt: 
25994 | halt: 
25995 | halt: 
25996 | halt: 
25997 | halt: 
25998 | halt: 
25999 | halt: 
26000 | halt: 
26001 | halt: 
26002 | halt: 
26003 | halt: 
26004 | halt: 
26005 | halt: 
26006 | halt: 
26007 | gt: if (114 > 101) { 103 == 1 } else { 103 == 0 }
26013 | pop: 114 = pop();
26017 | jmp: go to memory[121]
26299 | noop: 
26319 | mult: 10 = 32 * 65
26438 | mult: 10 = 43 * 116
26715 | mult: 10 = 7 * 65
26725 | gt: if (101 > 97) { 108 == 1 } else { 108 == 0 }
26731 | gt: if (110 > 116) { 101 == 1 } else { 101 == 0 }
26822 | mult: 10 = 26 * 84
26850 | mult: 48 = 7586 * 7582
26900 | push: push(6336);
26903 | push: push(2327);
26906 | set: 6435 = 1
26910 | push: push(6585);
26913 | push: push(2332);
26916 | push: push(6699);
26919 | push: push(2337);
26922 | push: push(6909);
26925 | push: push(2342);
26928 | push: push(7056);
26931 | push: push(2347);
26934 | set: 7265 = 1
26938 | push: push(7492);
26941 | push: push(2362);
26944 | set: 7611 = 1
26948 | push: push(7786);
26951 | push: push(2352);
26954 | pop: 7984 = pop();
26958 | pop: 2362 = pop();
26962 | push: push(8015);
26965 | push: push(8149);
26968 | push: push(2427);
26971 | gt: if (8310 > 8316) { 8303 == 1 } else { 8303 == 0 }
26977 | gt: if (2382 > 2387) { 2367 == 1 } else { 2367 == 0 }
26983 | pop: 8404 = pop();
26987 | pop: 2387 = pop();
26991 | pop: 8493 = pop();
26995 | pop: 2377 = pop();
26999 | eq: if (8657 == 8663) { 8651 == 1 } else { 8651 == 0 }
27004 | eq: if (2392 == 2377) { 2407 == 1 } else { 2407 == 0 }
27009 | pop: 8745 = pop();
27013 | pop: 2397 = pop();
27017 | eq: if (8916 == 8922) { 8910 == 1 } else { 8910 == 0 }
27022 | eq: if (2382 == 2387) { 2412 == 1 } else { 2412 == 0 }
27027 | pop: 9004 = pop();
27031 | pop: 2387 = pop();
27035 | set: 9093 = 1
27039 | set: 9170 = 1
27043 | push: push(9247);
27046 | push: push(2387);
27049 | push: push(9387);
27052 | push: push(2432);
27055 | push: push(9445);
27058 | push: push(2427);
27061 | push: push(9503);
27064 | push: push(2432);
27067 | push: push(9627);
27070 | push: push(2437);
27073 | push: push(9892);
27076 | push: push(2442);
27079 | push: push(10091);
27082 | push: push(2457);
27085 | eq: if (10409 == 10415) { 10403 == 1 } else { 10403 == 0 }
27090 | eq: if (2452 == 2468) { 2463 == 1 } else { 2463 == 0 }
27095 | gt: if (271 > 275) { 267 == 1 } else { 267 == 0 }
27101 | gt: if (0 > 0) { 0 == 1 } else { 0 == 0 }
27106 | halt: 
27107 | set: 10599 = 1
27111 | push: push(10750);
27114 | push: push(2473);
27117 | set: 10889 = 1
27121 | push: push(11078);
27124 | push: push(2483);
27127 | set: 11262 = 1
27131 | set: 11544 = 1
27135 | set: 11719 = 1
27139 | pop: 11903 = pop();
27143 | pop: 2503 = pop();
27147 | push: push(12188);
27150 | push: push(2498);
27153 | push: push(12448);
27156 | push: push(2498);
27159 | pop: 12674 = pop();
27163 | pop: 2523 = pop();
27167 | pop: 12830 = pop();
27171 | pop: 2523 = pop();
27175 | push: push(13094);
27178 | push: push(2528);
27181 | push: push(13408);
27184 | push: push(2533);
27187 | push: push(13682);
27190 | push: push(2538);
27193 | push: push(13929);
27196 | push: push(2543);
27199 | push: push(14078);
27202 | push: push(2548);
27205 | pop: 14427 = pop();
27209 | pop: 2558 = pop();
27213 | set: 14629 = 1
27217 | push: push(14753);
27220 | push: push(2623);
27223 | push: push(14905);
27226 | push: push(2568);
27229 | pop: 15058 = pop();
27233 | pop: 2573 = pop();
27237 | pop: 15214 = pop();
27241 | pop: 2578 = pop();
27245 | pop: 15488 = pop();
27249 | pop: 2598 = pop();
27253 | pop: 15647 = pop();
27257 | pop: 2563 = pop();
27261 | eq: if (15810 == 15815) { 15804 == 1 } else { 15804 == 0 }
27266 | eq: if (2593 == 2608) { 2568 == 1 } else { 2568 == 0 }
27271 | eq: if (15975 == 15980) { 15969 == 1 } else { 15969 == 0 }
27276 | eq: if (2598 == 2613) { 2573 == 1 } else { 2573 == 0 }
27281 | pop: 16131 = pop();
27285 | pop: 2578 = pop();
27289 | pop: 16288 = pop();
27293 | pop: 2583 = pop();
27297 | eq: if (16453 == 16458) { 16447 == 1 } else { 16447 == 0 }
27302 | eq: if (2613 == 2628) { 2588 == 1 } else { 2588 == 0 }
27307 | eq: if (16615 == 16620) { 16609 == 1 } else { 16609 == 0 }
27312 | eq: if (2618 == 2633) { 2593 == 1 } else { 2593 == 0 }
27317 | pop: 16774 = pop();
27321 | pop: 2598 = pop();
27325 | pop: 16954 = pop();
27329 | pop: 2603 = pop();
27333 | pop: 17111 = pop();
27337 | pop: 2608 = pop();
27341 | pop: 17269 = pop();
27345 | pop: 2613 = pop();
27349 | push: push(17425);
27352 | push: push(2618);
27355 | set: 17655 = 1
27359 | push: push(17793);
27362 | push: push(2653);
27365 | push: push(17933);
27368 | push: push(2658);
27371 | pop: 18041 = pop();
27375 | pop: 2663 = pop();
27379 | halt: 
27380 | halt: 
27381 | wmem: memory[2668] = 2672
27398 | jt: if (25943 != 0 { go to memory[25946] }
27406 | jt: if (3245 != 0 { go to memory[2964] }
27414 | call: push(27416); go to memory[13804]
28037 | wmem: memory[6454] = 6400
28054 | jt: if (23103 != 0 { go to memory[23050] }
28090 | add: 32291 = 32277 + 32264
28299 | pop: 7174 = pop();
28347 | noop: 
28397 | pop: 25220 = pop();
28664 | not: 7474 = ~7428
29241 | pop: 16822 = pop();
29663 | pop: 18634 = pop();
29671 | wmem: memory[2] = 19
29674 | eq: if (23 == 86) { 86 == 1 } else { 86 == 0 }
29679 | out: printf(1);
29685 | out: printf(24);
29687 | push: push(5);
29691 | rmem: 25 = memory[3]
29695 | wmem: memory[31] = 24
29698 | ret: go to memory[pop()];
29700 | rmem: 25 = memory[3]
29703 | eq: if (19 == 26) { 5 == 1 } else { 5 == 0 }
29709 | in: 23 = getchar();
29711 | noop: 
29717 | gt: if (26 > 31) { 25 == 1 } else { 25 == 0 }
29723 | call: push(29725); go to memory[4]
29726 | pop: 24 = pop();
29728 | ret: go to memory[pop()];
29732 | ret: go to memory[pop()];
29738 | push: push(2);
29741 | out: printf(86);
29743 | ret: go to memory[pop()];
29745 | gt: if (4 > 31) { 25 == 1 } else { 25 == 0 }
29751 | push: push(19);
29753 | ret: go to memory[pop()];
29942 | pop: 7905 = pop();
30051 | halt: 
30055 | halt: 
30058 | halt: 
30059 | halt: 
30063 | halt: 
30067 | halt: 
30070 | halt: 
30071 | halt: 
30075 | halt: 
30079 | halt: 
30082 | halt: 
30083 | halt: 
30087 | halt: 
30091 | halt: 
30094 | halt: 
30095 | halt: 
30099 | halt: 
30103 | halt: 
30106 | halt: 
30107 | halt: 
30111 | halt: 
30115 | halt: 
30118 | halt: 
30119 | halt: 
30123 | halt: 
30127 | halt: 
30130 | halt: 
30131 | halt: 
30132 | halt: 
30135 | halt: 
30139 | halt: 
30142 | halt: 
30143 | halt: 
30147 | halt: 
30151 | halt: 
30154 | halt: 
30155 | halt: 
30159 | halt: 
30163 | halt: 
30166 | halt: 
30167 | halt: 
30171 | halt: 
30175 | halt: 
30178 | halt: 
30179 | halt: 
30183 | halt: 
30187 | halt: 
30190 | halt: 
30191 | halt: 
30192 | halt: 
30195 | halt: 
30199 | halt: 
30202 | halt: 
30203 | halt: 
30207 | halt: 
30211 | halt: 
30214 | halt: 
30215 | halt: 
30219 | halt: 
30223 | halt: 
30226 | halt: 
30227 | halt: 
30231 | halt: 
30235 | halt: 
30238 | halt: 
30239 | halt: 
30243 | halt: 
30247 | halt: 
30250 | halt: 
30251 | halt: 
30255 | halt: 
30259 | halt: 
30262 | halt: 
30263 | halt: 
30267 | halt: 
30271 | halt: 
30274 | halt: 
30275 | halt: 
30279 | halt: 
30283 | halt: 
30286 | halt: 
30287 | halt: 
30291 | halt: 
30295 | halt: 
30298 | halt: 
30299 | halt: 
30300 | halt: 
30303 | halt: 
30307 | halt: 
30310 | halt: 
30311 | halt: 
30315 | halt: 
30319 | halt: 
30323 | halt: 
30326 | set: 0 = 17234
30331 | halt: 
30335 | halt: 
30337 | halt: 
30338 | halt: 
30339 | halt: 
30342 | halt: 
30343 | halt: 
30347 | halt: 
30351 | halt: 
30353 | halt: 
30354 | halt: 
30355 | halt: 
30356 | halt: 
30357 | halt: 
30358 | halt: 
30359 | halt: 
30360 | halt: 
30361 | halt: 
30362 | halt: 
30363 | halt: 
30364 | set: 20544 = 7803
30369 | halt: 
30370 | set: 0 = r29832
30374 | set: 0 = 91
30382 | set: 0 = r28808
30386 | set: 0 = 12213
30390 | set: 0 = 1592
30394 | set: 0 = r3680
30399 | halt: 
30400 | set: 0 = 0
30403 | halt: 
30404 | set: 0 = 0
30407 | halt: 
30408 | halt: 
30409 | halt: 
30410 | halt: 
30411 | halt: 
30415 | halt: 
30419 | halt: 
30423 | halt: 
30424 | push: push(0);
30426 | halt: 
30427 | halt: 
30430 | set: 0 = 0
30433 | halt: 
30434 | halt: 
30435 | halt: 
30436 | halt: 
30437 | halt: 
30438 | halt: 
30439 | halt: 
30443 | halt: 
30446 | set: 0 = 3
30449 | halt: 
30450 | halt: 
30451 | halt: 
30455 | halt: 
30457 | mult: 0 = 0 * 17243
30463 | halt: 
30465 | halt: 
30466 | halt: 
30467 | halt: 
30471 | halt: 
30473 | halt: 
30474 | halt: 
30475 | halt: 
30476 | out: printf(0);
30478 | halt: 
30479 | halt: 
30483 | halt: 
30486 | set: 0 = 24
30489 | halt: 
30491 | halt: 
30495 | halt: 
30499 | halt: 
30503 | halt: 
30507 | halt: 
30510 | set: 0 = 6
30513 | halt: 
30514 | halt: 
30515 | halt: 
30524 | or: 0 = 0 or 0
30531 | halt: 
30534 | set: 0 = r4096
30539 | halt: 
30543 | halt: 
30547 | halt: 
30551 | halt: 
30552 | set: 0 = 0
30555 | halt: 
30567 | halt: 
30569 | halt: 
30570 | halt: 
30571 | halt: 
30573 | halt: 
30574 | halt: 
30575 | halt: 
30579 | halt: 
30582 | set: 0 = 64
30585 | halt: 
30586 | halt: 
30587 | halt: 
30591 | halt: 
30592 | push: push(0);
30594 | halt: 
30595 | halt: 
30611 | halt: 
30615 | halt: 
30619 | halt: 
30622 | set: 0 = 26408
30626 | set: 0 = 14769
30631 | halt: 
30632 | pop: 0 = pop();
30634 | halt: 
30635 | halt: 
30643 | halt: 
30647 | halt: 
30650 | set: 0 = 8696
30655 | halt: 
30659 | halt: 
30663 | halt: 
30667 | halt: 
30671 | halt: 
30672 | eq: if (0 == 0) { 0 == 1 } else { 0 == 0 }
30687 | halt: 
30691 | halt: 
30692 | mult: 0 = 0 * 0
30698 | set: 0 = 5771
30703 | halt: 
30707 | halt: 
30711 | halt: 
30712 | gt: if (0 > 0) { 0 == 1 } else { 0 == 0 }
30723 | halt: 
30726 | set: 0 = 15408
30731 | halt: 
30734 | set: 0 = 15168
30739 | halt: 
30740 | set: 0 = 0
30743 | halt: 
30744 | add: 0 = 0 + 0
30751 | halt: 
30752 | jmp: go to memory[0]
30754 | halt: 
30755 | halt: 
30758 | set: 0 = 15216
30763 | halt: 
30764 | jmp: go to memory[0]
30766 | halt: 
30767 | halt: 
30768 | not: 0 = ~0
30771 | halt: 
30774 | set: 0 = 15408
30779 | halt: 
30782 | set: 0 = 15264
30787 | halt: 
30789 | halt: 
30790 | halt: 
30791 | halt: 
30793 | halt: 
30794 | halt: 
30795 | halt: 
30798 | set: 0 = 15280
30803 | halt: 
30806 | set: 0 = r25168
30810 | set: 0 = 16528
30814 | set: 0 = 15328
30819 | halt: 
30822 | set: 0 = 15360
30827 | halt: 
30830 | set: 0 = r2523
30835 | halt: 
30836 | halt: 
30837 | halt: 
30838 | halt: 
30839 | halt: 
30843 | halt: 
30846 | set: 0 = 0
30849 | halt: 
30850 | halt: 
30851 | halt: 
30852 | halt: 
30853 | halt: 
30854 | set: 0 = 25696
30858 | set: 0 = 26024
30862 | set: 0 = 15408
30867 | halt: 
30870 | set: 0 = 1592
30874 | set: 0 = 1
30877 | halt: 
30878 | halt: 
30879 | halt: 
30883 | halt: 
30886 | set: 0 = 15456
30891 | halt: 
30894 | set: 0 = 1
30897 | halt: 
30898 | halt: 
30899 | halt: 
30902 | set: 0 = 15520
30907 | halt: 
30910 | set: 0 = r25168
30914 | set: 0 = r14352
30918 | set: 0 = r30120
30922 | set: 0 = r32608
30926 | set: 0 = 32
30929 | halt: 
30930 | halt: 
30931 | halt: 
30932 | halt: 
30933 | halt: 
30934 | halt: 
30935 | halt: 
30939 | halt: 
30942 | set: 0 = r25168
30946 | set: 0 = r32648
30950 | set: 0 = 19072
30955 | halt: 
30958 | set: 0 = 0
30961 | halt: 
30962 | halt: 
30963 | halt: 
30966 | halt: 
30967 | halt: 
30971 | halt: 
30975 | halt: 
30979 | halt: 
30982 | set: 0 = 1
30985 | halt: 
30986 | halt: 
30987 | halt: 
30990 | set: 0 = 19448
30995 | halt: 
30996 | halt: 
30997 | halt: 
30998 | halt: 
30999 | halt: 
31000 | halt: 
31001 | halt: 
31002 | halt: 
31003 | halt: 
31004 | halt: 
31005 | halt: 
31006 | halt: 
31007 | halt: 
31008 | halt: 
31009 | halt: 
31010 | halt: 
31011 | halt: 
31012 | halt: 
31013 | halt: 
31014 | halt: 
31015 | halt: 
31018 | set: 0 = 0
31022 | halt: 
31023 | halt: 
31026 | set: 0 = r20848
31030 | set: 0 = 17872
31035 | halt: 
31038 | halt: 
31039 | halt: 
31040 | halt: 
31041 | halt: 
31043 | halt: 
31044 | halt: 
31046 | halt: 
31047 | halt: 
31048 | halt: 
31049 | halt: 
31050 | halt: 
31051 | halt: 
31054 | set: 0 = r5478
31064 | halt: 
31065 | halt: 
31066 | halt: 
31067 | halt: 
31068 | halt: 
31069 | halt: 
31070 | halt: 
31071 | halt: 
31072 | halt: 
31073 | halt: 
31074 | halt: 
31075 | halt: 
31076 | halt: 
31077 | halt: 
31078 | halt: 
31079 | halt: 
31080 | halt: 
31081 | halt: 
31082 | halt: 
31083 | halt: 
31084 | halt: 
31085 | halt: 
31086 | halt: 
31087 | halt: 
31088 | halt: 
31089 | halt: 
31090 | halt: 
31091 | halt: 
31092 | halt: 
31093 | halt: 
31094 | halt: 
31095 | halt: 
31096 | halt: 
31097 | halt: 
31098 | halt: 
31099 | halt: 
31100 | halt: 
31101 | halt: 
31102 | halt: 
31103 | halt: 
31104 | halt: 
31105 | halt: 
31106 | halt: 
31107 | halt: 
31108 | halt: 
31109 | halt: 
31110 | halt: 
31111 | halt: 
31112 | halt: 
31113 | halt: 
31114 | halt: 
31115 | halt: 
31116 | halt: 
31117 | halt: 
31118 | halt: 
31119 | halt: 
31120 | halt: 
31121 | halt: 
31122 | halt: 
31123 | halt: 
31124 | halt: 
31125 | halt: 
31126 | halt: 
31127 | halt: 
31128 | halt: 
31129 | halt: 
31130 | halt: 
31131 | halt: 
31132 | halt: 
31133 | halt: 
31134 | halt: 
31135 | halt: 
31136 | halt: 
31137 | halt: 
31138 | halt: 
31139 | halt: 
31140 | halt: 
31141 | halt: 
31142 | halt: 
31143 | halt: 
31144 | halt: 
31145 | halt: 
31146 | halt: 
31147 | halt: 
31148 | halt: 
31149 | halt: 
31150 | halt: 
31151 | halt: 
31152 | halt: 
31153 | halt: 
31154 | halt: 
31155 | halt: 
31156 | halt: 
31157 | halt: 
31158 | halt: 
31159 | halt: 
31160 | halt: 
31161 | halt: 
31162 | halt: 
31163 | halt: 
31164 | halt: 
31165 | halt: 
31166 | halt: 
31167 | halt: 
31168 | halt: 
31169 | halt: 
31170 | halt: 
31171 | halt: 
31172 | halt: 
31173 | halt: 
31174 | halt: 
31175 | halt: 
31176 | halt: 
31177 | halt: 
31178 | halt: 
31179 | halt: 
31180 | halt: 
31181 | halt: 
31182 | halt: 
31183 | halt: 
31184 | halt: 
31185 | halt: 
31186 | halt: 
31187 | halt: 
31188 | halt: 
31189 | halt: 
31190 | halt: 
31191 | halt: 
31192 | halt: 
31193 | halt: 
31194 | halt: 
31195 | halt: 
31196 | halt: 
31197 | halt: 
31198 | halt: 
31199 | halt: 
31200 | halt: 
31201 | halt: 
31202 | halt: 
31203 | halt: 
31204 | halt: 
31205 | halt: 
31206 | halt: 
31207 | halt: 
31208 | halt: 
31209 | halt: 
31210 | halt: 
31211 | halt: 
31212 | halt: 
31213 | halt: 
31214 | halt: 
31215 | halt: 
31216 | halt: 
31217 | halt: 
31218 | halt: 
31219 | halt: 
31220 | halt: 
31221 | halt: 
31222 | halt: 
31223 | halt: 
31224 | halt: 
31225 | halt: 
31226 | halt: 
31227 | halt: 
31228 | halt: 
31229 | halt: 
31230 | halt: 
31231 | halt: 
31232 | halt: 
31233 | halt: 
31234 | halt: 
31235 | halt: 
31236 | halt: 
31237 | halt: 
31238 | halt: 
31239 | halt: 
31240 | halt: 
31241 | halt: 
31242 | halt: 
31243 | halt: 
31244 | halt: 
31245 | halt: 
31246 | halt: 
31247 | halt: 
31248 | halt: 
31249 | halt: 
31250 | halt: 
31251 | halt: 
31252 | halt: 
31253 | halt: 
31254 | halt: 
31255 | halt: 
31256 | halt: 
31257 | halt: 
31258 | halt: 
31259 | halt: 
31260 | halt: 
31261 | halt: 
31262 | halt: 
31263 | halt: 
31264 | halt: 
31265 | halt: 
31266 | halt: 
31267 | halt: 
31268 | halt: 
31269 | halt: 
31270 | halt: 
31271 | halt: 
31272 | halt: 
31273 | halt: 
31274 | halt: 
31275 | halt: 
31276 | halt: 
31277 | halt: 
31278 | halt: 
31279 | halt: 
31280 | halt: 
31281 | halt: 
31282 | halt: 
31283 | halt: 
31284 | halt: 
31285 | halt: 
31286 | halt: 
31287 | halt: 
31288 | halt: 
31289 | halt: 
31290 | halt: 
31291 | halt: 
31292 | halt: 
31293 | halt: 
31294 | halt: 
31295 | halt: 
31296 | halt: 
31297 | halt: 
31298 | halt: 
31299 | halt: 
31300 | halt: 
31301 | halt: 
31302 | halt: 
31303 | halt: 
31304 | halt: 
31305 | halt: 
31306 | halt: 
31307 | halt: 
31308 | halt: 
31309 | halt: 
31310 | halt: 
31311 | halt: 
31312 | halt: 
31313 | halt: 
31314 | halt: 
31315 | halt: 
31316 | halt: 
31317 | halt: 
31318 | halt: 
31319 | halt: 
31320 | halt: 
31321 | halt: 
31322 | halt: 
31323 | halt: 
31324 | halt: 
31325 | halt: 
31326 | halt: 
31327 | halt: 
31328 | halt: 
31329 | halt: 
31330 | halt: 
31331 | halt: 
31332 | halt: 
31333 | halt: 
31334 | halt: 
31335 | halt: 
31336 | halt: 
31337 | halt: 
31338 | halt: 
31339 | halt: 
31340 | halt: 
31341 | halt: 
31342 | halt: 
31343 | halt: 
31344 | halt: 
31345 | halt: 
31346 | halt: 
31347 | halt: 
31348 | halt: 
31349 | halt: 
31350 | halt: 
31351 | halt: 
31352 | halt: 
31353 | halt: 
31354 | halt: 
31355 | halt: 
31356 | halt: 
31357 | halt: 
31358 | halt: 
31359 | halt: 
31360 | halt: 
31361 | halt: 
31362 | halt: 
31363 | halt: 
31364 | halt: 
31365 | halt: 
31366 | halt: 
31367 | halt: 
31368 | halt: 
31369 | halt: 
31370 | halt: 
31371 | halt: 
31372 | halt: 
31373 | halt: 
31374 | halt: 
31375 | halt: 
31376 | halt: 
31377 | halt: 
31378 | halt: 
31379 | halt: 
31380 | halt: 
31381 | halt: 
31382 | halt: 
31383 | halt: 
31384 | halt: 
31385 | halt: 
31386 | halt: 
31387 | halt: 
31388 | halt: 
31389 | halt: 
31390 | halt: 
31391 | halt: 
31392 | halt: 
31393 | halt: 
31394 | halt: 
31395 | halt: 
31396 | halt: 
31397 | halt: 
31398 | halt: 
31399 | halt: 
31400 | halt: 
31401 | halt: 
31402 | halt: 
31403 | halt: 
31404 | halt: 
31405 | halt: 
31406 | halt: 
31407 | halt: 
31408 | halt: 
31409 | halt: 
31410 | halt: 
31411 | halt: 
31412 | halt: 
31413 | halt: 
31414 | halt: 
31415 | halt: 
31416 | halt: 
31417 | halt: 
31418 | halt: 
31419 | halt: 
31420 | halt: 
31421 | halt: 
31422 | halt: 
31423 | halt: 
31424 | halt: 
31425 | halt: 
31426 | halt: 
31427 | halt: 
31428 | halt: 
31429 | halt: 
31430 | halt: 
31431 | halt: 
31432 | halt: 
31433 | halt: 
31434 | halt: 
31435 | halt: 
31436 | halt: 
31437 | halt: 
31438 | halt: 
31439 | halt: 
31440 | halt: 
31441 | halt: 
31442 | halt: 
31443 | halt: 
31444 | halt: 
31445 | halt: 
31446 | halt: 
31447 | halt: 
31448 | halt: 
31449 | halt: 
31450 | halt: 
31451 | halt: 
31452 | halt: 
31453 | halt: 
31454 | halt: 
31455 | halt: 
31456 | halt: 
31457 | halt: 
31458 | halt: 
31459 | halt: 
31460 | halt: 
31461 | halt: 
31462 | halt: 
31463 | halt: 
31464 | halt: 
31465 | halt: 
31466 | halt: 
31467 | halt: 
31468 | halt: 
31469 | halt: 
31470 | halt: 
31471 | halt: 
31472 | halt: 
31473 | halt: 
31474 | halt: 
31475 | halt: 
31476 | halt: 
31477 | halt: 
31478 | halt: 
31479 | halt: 
31480 | halt: 
31481 | halt: 
31482 | halt: 
31483 | halt: 
31484 | halt: 
31485 | halt: 
31486 | halt: 
31487 | halt: 
31488 | halt: 
31489 | halt: 
31490 | halt: 
31491 | halt: 
31492 | halt: 
31493 | halt: 
31494 | halt: 
31495 | halt: 
31496 | halt: 
31497 | halt: 
31498 | halt: 
31499 | halt: 
31500 | halt: 
31501 | halt: 
31502 | halt: 
31503 | halt: 
31504 | halt: 
31505 | halt: 
31506 | halt: 
31507 | halt: 
31508 | halt: 
31509 | halt: 
31510 | halt: 
31511 | halt: 
31512 | halt: 
31513 | halt: 
31514 | halt: 
31515 | halt: 
31516 | halt: 
31517 | halt: 
31518 | halt: 
31519 | halt: 
31520 | halt: 
31521 | halt: 
31522 | halt: 
31523 | halt: 
31524 | halt: 
31525 | halt: 
31526 | halt: 
31527 | halt: 
31528 | halt: 
31529 | halt: 
31530 | halt: 
31531 | halt: 
31532 | halt: 
31533 | halt: 
31534 | halt: 
31535 | halt: 
31536 | halt: 
31537 | halt: 
31538 | halt: 
31539 | halt: 
31540 | halt: 
31541 | halt: 
31542 | halt: 
31543 | halt: 
31544 | halt: 
31545 | halt: 
31546 | halt: 
31547 | halt: 
31548 | halt: 
31549 | halt: 
31550 | halt: 
31551 | halt: 
31552 | halt: 
31553 | halt: 
31554 | halt: 
31555 | halt: 
31556 | halt: 
31557 | halt: 
31558 | halt: 
31559 | halt: 
31560 | halt: 
31561 | halt: 
31562 | halt: 
31563 | halt: 
31564 | halt: 
31565 | halt: 
31566 | halt: 
31567 | halt: 
31568 | halt: 
31569 | halt: 
31570 | halt: 
31571 | halt: 
31572 | halt: 
31573 | halt: 
31574 | halt: 
31575 | halt: 
31576 | halt: 
31577 | halt: 
31578 | halt: 
31579 | halt: 
31580 | halt: 
31581 | halt: 
31582 | halt: 
31583 | halt: 
31584 | halt: 
31585 | halt: 
31586 | halt: 
31587 | halt: 
31588 | halt: 
31589 | halt: 
31590 | halt: 
31591 | halt: 
31592 | halt: 
31593 | halt: 
31594 | halt: 
31595 | halt: 
31596 | halt: 
31597 | halt: 
31598 | halt: 
31599 | halt: 
31600 | halt: 
31601 | halt: 
31602 | halt: 
31603 | halt: 
31604 | halt: 
31605 | halt: 
31606 | halt: 
31607 | halt: 
31608 | halt: 
31609 | halt: 
31610 | halt: 
31611 | halt: 
31612 | halt: 
31613 | halt: 
31614 | halt: 
31615 | halt: 
31616 | halt: 
31617 | halt: 
31618 | halt: 
31619 | halt: 
31620 | halt: 
31621 | halt: 
31622 | halt: 
31623 | halt: 
31624 | halt: 
31625 | halt: 
31626 | halt: 
31627 | halt: 
31628 | halt: 
31629 | halt: 
31630 | halt: 
31631 | halt: 
31632 | halt: 
31633 | halt: 
31634 | halt: 
31635 | halt: 
31636 | halt: 
31637 | halt: 
31638 | halt: 
31639 | halt: 
31640 | halt: 
31641 | halt: 
31642 | halt: 
31643 | halt: 
31644 | halt: 
31645 | halt: 
31646 | halt: 
31647 | halt: 
31648 | halt: 
31649 | halt: 
31650 | halt: 
31651 | halt: 
31652 | halt: 
31653 | halt: 
31654 | halt: 
31655 | halt: 
31656 | halt: 
31657 | halt: 
31658 | halt: 
31659 | halt: 
31660 | halt: 
31661 | halt: 
31662 | halt: 
31663 | halt: 
31664 | halt: 
31665 | halt: 
31666 | halt: 
31667 | halt: 
31668 | halt: 
31669 | halt: 
31670 | halt: 
31671 | halt: 
31672 | halt: 
31673 | halt: 
31674 | halt: 
31675 | halt: 
31676 | halt: 
31677 | halt: 
31678 | halt: 
31679 | halt: 
31680 | halt: 
31681 | halt: 
31682 | halt: 
31683 | halt: 
31684 | halt: 
31685 | halt: 
31686 | halt: 
31687 | halt: 
31688 | halt: 
31689 | halt: 
31690 | halt: 
31691 | halt: 
31692 | halt: 
31693 | halt: 
31694 | halt: 
31695 | halt: 
31696 | halt: 
31697 | halt: 
31698 | halt: 
31699 | halt: 
31700 | halt: 
31701 | halt: 
31702 | halt: 
31703 | halt: 
31704 | halt: 
31705 | halt: 
31706 | halt: 
31707 | halt: 
31708 | halt: 
31709 | halt: 
31710 | halt: 
31711 | halt: 
31712 | halt: 
31713 | halt: 
31714 | halt: 
31715 | halt: 
31716 | halt: 
31717 | halt: 
31718 | halt: 
31719 | halt: 
31720 | halt: 
31721 | halt: 
31722 | halt: 
31723 | halt: 
31724 | halt: 
31725 | halt: 
31726 | halt: 
31727 | halt: 
31728 | halt: 
31729 | halt: 
31730 | halt: 
31731 | halt: 
31732 | halt: 
31733 | halt: 
31734 | halt: 
31735 | halt: 
31736 | halt: 
31737 | halt: 
31738 | halt: 
31739 | halt: 
31740 | halt: 
31741 | halt: 
31742 | halt: 
31743 | halt: 
31744 | halt: 
31745 | halt: 
31746 | halt: 
31747 | halt: 
31748 | halt: 
31749 | halt: 
31750 | halt: 
31751 | halt: 
31752 | halt: 
31753 | halt: 
31754 | halt: 
31755 | halt: 
31756 | halt: 
31757 | halt: 
31758 | halt: 
31759 | halt: 
31760 | halt: 
31761 | halt: 
31762 | halt: 
31763 | halt: 
31764 | halt: 
31765 | halt: 
31766 | halt: 
31767 | halt: 
31768 | halt: 
31769 | halt: 
31770 | halt: 
31771 | halt: 
31772 | halt: 
31773 | halt: 
31774 | halt: 
31775 | halt: 
31776 | halt: 
31777 | halt: 
31778 | halt: 
31779 | halt: 
31780 | halt: 
31781 | halt: 
31782 | halt: 
31783 | halt: 
31784 | halt: 
31785 | halt: 
31786 | halt: 
31787 | halt: 
31788 | halt: 
31789 | halt: 
31790 | halt: 
31791 | halt: 
31792 | halt: 
31793 | halt: 
31794 | halt: 
31795 | halt: 
31796 | halt: 
31797 | halt: 
31798 | halt: 
31799 | halt: 
31800 | halt: 
31801 | halt: 
31802 | halt: 
31803 | halt: 
31804 | halt: 
31805 | halt: 
31806 | halt: 
31807 | halt: 
31808 | halt: 
31809 | halt: 
31810 | halt: 
31811 | halt: 
31812 | halt: 
31813 | halt: 
31814 | halt: 
31815 | halt: 
31816 | halt: 
31817 | halt: 
31818 | halt: 
31819 | halt: 
31820 | halt: 
31821 | halt: 
31822 | halt: 
31823 | halt: 
31824 | halt: 
31825 | halt: 
31826 | halt: 
31827 | halt: 
31828 | halt: 
31829 | halt: 
31830 | halt: 
31831 | halt: 
31832 | halt: 
31833 | halt: 
31834 | halt: 
31835 | halt: 
31836 | halt: 
31837 | halt: 
31838 | halt: 
31839 | halt: 
31840 | halt: 
31841 | halt: 
31842 | halt: 
31843 | halt: 
31844 | halt: 
31845 | halt: 
31846 | halt: 
31847 | halt: 
31848 | halt: 
31849 | halt: 
31850 | halt: 
31851 | halt: 
31852 | halt: 
31853 | halt: 
31854 | halt: 
31855 | halt: 
31856 | halt: 
31857 | halt: 
31858 | halt: 
31859 | halt: 
31860 | halt: 
31861 | halt: 
31862 | halt: 
31863 | halt: 
31864 | halt: 
31865 | halt: 
31866 | halt: 
31867 | halt: 
31868 | halt: 
31869 | halt: 
31870 | halt: 
31871 | halt: 
31872 | halt: 
31873 | halt: 
31874 | halt: 
31875 | halt: 
31876 | halt: 
31877 | halt: 
31878 | halt: 
31879 | halt: 
31880 | halt: 
31881 | halt: 
31882 | halt: 
31883 | halt: 
31884 | halt: 
31885 | halt: 
31886 | halt: 
31887 | halt: 
31888 | halt: 
31889 | halt: 
31890 | halt: 
31891 | halt: 
31892 | halt: 
31893 | halt: 
31894 | halt: 
31895 | halt: 
31896 | halt: 
31897 | halt: 
31898 | halt: 
31899 | halt: 
31900 | halt: 
31901 | halt: 
31902 | halt: 
31903 | halt: 
31904 | halt: 
31905 | halt: 
31906 | halt: 
31907 | halt: 
31908 | halt: 
31909 | halt: 
31910 | halt: 
31911 | halt: 
31912 | halt: 
31913 | halt: 
31914 | halt: 
31915 | halt: 
31916 | halt: 
31917 | halt: 
31918 | halt: 
31919 | halt: 
31920 | halt: 
31921 | halt: 
31922 | halt: 
31923 | halt: 
31924 | halt: 
31925 | halt: 
31926 | halt: 
31927 | halt: 
31928 | halt: 
31929 | halt: 
31930 | halt: 
31931 | halt: 
31932 | halt: 
31933 | halt: 
31934 | halt: 
31935 | halt: 
31936 | halt: 
31937 | halt: 
31938 | halt: 
31939 | halt: 
31940 | halt: 
31941 | halt: 
31942 | halt: 
31943 | halt: 
31944 | halt: 
31945 | halt: 
31946 | halt: 
31947 | halt: 
31948 | halt: 
31949 | halt: 
31950 | halt: 
31951 | halt: 
31952 | halt: 
31953 | halt: 
31954 | halt: 
31955 | halt: 
31956 | halt: 
31957 | halt: 
31958 | halt: 
31959 | halt: 
31960 | halt: 
31961 | halt: 
31962 | halt: 
31963 | halt: 
31964 | halt: 
31965 | halt: 
31966 | halt: 
31967 | halt: 
31968 | halt: 
31969 | halt: 
31970 | halt: 
31971 | halt: 
31972 | halt: 
31973 | halt: 
31974 | halt: 
31975 | halt: 
31976 | halt: 
31977 | halt: 
31978 | halt: 
31979 | halt: 
31980 | halt: 
31981 | halt: 
31982 | halt: 
31983 | halt: 
31984 | halt: 
31985 | halt: 
31986 | halt: 
31987 | halt: 
31988 | halt: 
31989 | halt: 
31990 | halt: 
31991 | halt: 
31992 | halt: 
31993 | halt: 
31994 | halt: 
31995 | halt: 
31996 | halt: 
31997 | halt: 
31998 | halt: 
31999 | halt: 
32000 | halt: 
32001 | halt: 
32002 | halt: 
32003 | halt: 
32004 | halt: 
32005 | halt: 
32006 | halt: 
32007 | halt: 
32008 | halt: 
32009 | halt: 
32010 | halt: 
32011 | halt: 
32012 | halt: 
32013 | halt: 
32014 | halt: 
32015 | halt: 
32016 | halt: 
32017 | halt: 
32018 | halt: 
32019 | halt: 
32020 | halt: 
32021 | halt: 
32022 | halt: 
32023 | halt: 
32024 | halt: 
32025 | halt: 
32026 | halt: 
32027 | halt: 
32028 | halt: 
32029 | halt: 
32030 | halt: 
32031 | halt: 
32032 | halt: 
32033 | halt: 
32034 | halt: 
32035 | halt: 
32036 | halt: 
32037 | halt: 
32038 | halt: 
32039 | halt: 
32040 | halt: 
32041 | halt: 
32042 | halt: 
32043 | halt: 
32044 | halt: 
32045 | halt: 
32046 | halt: 
32047 | halt: 
32048 | halt: 
32049 | halt: 
32050 | halt: 
32051 | halt: 
32052 | halt: 
32053 | halt: 
32054 | halt: 
32055 | halt: 
32056 | halt: 
32057 | halt: 
32058 | halt: 
32059 | halt: 
32060 | halt: 
32061 | halt: 
32062 | halt: 
32063 | halt: 
32064 | halt: 
32065 | halt: 
32066 | halt: 
32067 | halt: 
32068 | halt: 
32069 | halt: 
32070 | halt: 
32071 | halt: 
32072 | halt: 
32073 | halt: 
32074 | halt: 
32075 | halt: 
32076 | halt: 
32077 | halt: 
32078 | halt: 
32079 | halt: 
32080 | halt: 
32081 | halt: 
32082 | halt: 
32083 | halt: 
32084 | halt: 
32085 | halt: 
32086 | halt: 
32087 | halt: 
32088 | halt: 
32089 | halt: 
32090 | halt: 
32091 | halt: 
32092 | halt: 
32093 | halt: 
32094 | halt: 
32095 | halt: 
32096 | halt: 
32097 | halt: 
32098 | halt: 
32099 | halt: 
32100 | halt: 
32101 | halt: 
32102 | halt: 
32103 | halt: 
32104 | halt: 
32105 | halt: 
32106 | halt: 
32107 | halt: 
32108 | halt: 
32109 | halt: 
32110 | halt: 
32111 | halt: 
32119 | halt: 
32120 | halt: 
32121 | halt: 
32123 | halt: 
32124 | halt: 
32125 | halt: 
32126 | push: push(0);
32128 | eq: if (4 == 0) { 0 == 1 } else { 0 == 0 }
32133 | halt: 
32134 | push: push(0);
32136 | halt: 
32137 | halt: 
32138 | halt: 
32139 | halt: 
32140 | halt: 
32141 | halt: 
32142 | halt: 
32143 | halt: 
32144 | halt: 
32145 | halt: 
32146 | halt: 
32147 | halt: 
32148 | halt: 
32149 | halt: 
32150 | halt: 
32151 | halt: 
32152 | halt: 
32153 | halt: 
32154 | halt: 
32155 | halt: 
32156 | halt: 
32157 | halt: 
32158 | halt: 
32159 | halt: 
32160 | halt: 
32161 | halt: 
32162 | halt: 
32163 | halt: 
32164 | halt: 
32165 | halt: 
32166 | halt: 
32167 | halt: 
32168 | halt: 
32169 | halt: 
32170 | halt: 
32171 | halt: 
32172 | halt: 
32173 | halt: 
32174 | halt: 
32175 | halt: 
32176 | halt: 
32177 | halt: 
32178 | halt: 
32179 | halt: 
32180 | halt: 
32181 | halt: 
32182 | halt: 
32183 | halt: 
32184 | halt: 
32185 | halt: 
32186 | halt: 
32187 | halt: 
32188 | halt: 
32189 | halt: 
32190 | halt: 
32191 | halt: 
32192 | halt: 
32193 | halt: 
32194 | halt: 
32195 | halt: 
32196 | halt: 
32197 | halt: 
32198 | halt: 
32199 | halt: 
32200 | halt: 
32201 | halt: 
32202 | halt: 
32203 | halt: 
32204 | halt: 
32205 | halt: 
32206 | halt: 
32207 | halt: 
32208 | halt: 
32209 | halt: 
32210 | halt: 
32211 | halt: 
32212 | halt: 
32213 | halt: 
32214 | halt: 
32215 | halt: 
32216 | halt: 
32217 | halt: 
32218 | halt: 
32219 | halt: 
32220 | halt: 
32221 | halt: 
32222 | halt: 
32223 | halt: 
32224 | halt: 
32225 | halt: 
32226 | halt: 
32227 | halt: 
32228 | halt: 
32229 | halt: 
32230 | halt: 
32231 | halt: 
32232 | halt: 
32233 | halt: 
32234 | halt: 
32235 | halt: 
32236 | halt: 
32237 | halt: 
32238 | halt: 
32239 | halt: 
32240 | halt: 
32241 | halt: 
32242 | halt: 
32243 | halt: 
32244 | halt: 
32245 | halt: 
32246 | halt: 
32247 | halt: 
32248 | halt: 
32249 | halt: 
32250 | halt: 
32251 | halt: 
32252 | halt: 
32253 | halt: 
32254 | halt: 
32255 | halt: 
32256 | halt: 
32257 | halt: 
32258 | halt: 
32259 | halt: 
32260 | halt: 
32261 | halt: 
32262 | halt: 
32263 | halt: 
32264 | halt: 
32265 | halt: 
32266 | halt: 
32267 | halt: 
32268 | halt: 
32269 | halt: 
32270 | halt: 
32271 | halt: 
32272 | halt: 
32273 | halt: 
32274 | halt: 
32275 | halt: 
32276 | halt: 
32277 | halt: 
32278 | halt: 
32279 | halt: 
32280 | halt: 
32281 | halt: 
32282 | halt: 
32283 | halt: 
32284 | halt: 
32285 | halt: 
32286 | halt: 
32287 | halt: 
32288 | halt: 
32289 | halt: 
32290 | halt: 
32291 | halt: 
32292 | halt: 
32293 | halt: 
32294 | halt: 
32295 | halt: 
32296 | halt: 
32297 | halt: 
32298 | halt: 
32299 | halt: 
32300 | halt: 
32301 | halt: 
32302 | halt: 
32303 | halt: 
32304 | halt: 
32305 | halt: 
32306 | halt: 
32307 | halt: 
32308 | halt: 
32309 | halt: 
32310 | halt: 
32311 | halt: 
32312 | halt: 
32313 | halt: 
32314 | halt: 
32315 | halt: 
32316 | halt: 
32317 | halt: 
32318 | halt: 
32319 | halt: 
32320 | halt: 
32321 | halt: 
32322 | halt: 
32323 | halt: 
32324 | halt: 
32325 | halt: 
32326 | halt: 
32327 | halt: 
32328 | halt: 
32329 | halt: 
32330 | halt: 
32331 | halt: 
32332 | halt: 
32333 | halt: 
32334 | halt: 
32335 | halt: 
32336 | halt: 
32337 | halt: 
32338 | halt: 
32339 | halt: 
32340 | halt: 
32341 | halt: 
32342 | halt: 
32343 | halt: 
32344 | halt: 
32345 | halt: 
32346 | halt: 
32347 | halt: 
32348 | halt: 
32349 | halt: 
32350 | halt: 
32351 | halt: 
32352 | halt: 
32353 | halt: 
32354 | halt: 
32355 | halt: 
32356 | halt: 
32357 | halt: 
32358 | halt: 
32359 | halt: 
32360 | halt: 
32361 | halt: 
32362 | halt: 
32363 | halt: 
32364 | halt: 
32365 | halt: 
32366 | halt: 
32367 | halt: 
32368 | halt: 
32369 | halt: 
32370 | halt: 
32371 | halt: 
32372 | halt: 
32373 | halt: 
32374 | halt: 
32375 | halt: 
32376 | halt: 
32377 | halt: 
32378 | halt: 
32379 | halt: 
32380 | halt: 
32381 | halt: 
32382 | halt: 
32383 | halt: 
32384 | halt: 
32385 | halt: 
32386 | halt: 
32387 | halt: 
32388 | halt: 
32389 | halt: 
32390 | halt: 
32391 | halt: 
32392 | halt: 
32393 | halt: 
32394 | halt: 
32395 | halt: 
32396 | halt: 
32397 | halt: 
32398 | halt: 
32399 | halt: 
32400 | halt: 
32401 | halt: 
32402 | halt: 
32403 | halt: 
32404 | halt: 
32405 | halt: 
32406 | halt: 
32407 | halt: 
32408 | halt: 
32409 | halt: 
32410 | halt: 
32411 | halt: 
32412 | halt: 
32413 | halt: 
32414 | halt: 
32415 | halt: 
32416 | halt: 
32417 | halt: 
32418 | halt: 
32419 | halt: 
32420 | halt: 
32421 | halt: 
32422 | halt: 
32423 | halt: 
32424 | halt: 
32425 | halt: 
32426 | halt: 
32427 | halt: 
32428 | halt: 
32429 | halt: 
32430 | halt: 
32431 | halt: 
32432 | halt: 
32433 | halt: 
32434 | halt: 
32435 | halt: 
32436 | halt: 
32437 | halt: 
32438 | halt: 
32439 | halt: 
32440 | halt: 
32441 | halt: 
32442 | halt: 
32443 | halt: 
32444 | halt: 
32445 | halt: 
32446 | halt: 
32447 | halt: 
32448 | halt: 
32449 | halt: 
32450 | halt: 
32451 | halt: 
32452 | halt: 
32453 | halt: 
32454 | halt: 
32455 | halt: 
32456 | halt: 
32457 | halt: 
32458 | halt: 
32459 | halt: 
32460 | halt: 
32461 | halt: 
32462 | halt: 
32463 | halt: 
32464 | halt: 
32465 | halt: 
32466 | halt: 
32467 | halt: 
32468 | halt: 
32469 | halt: 
32470 | halt: 
32471 | halt: 
32472 | halt: 
32473 | halt: 
32474 | halt: 
32475 | halt: 
32476 | halt: 
32477 | halt: 
32478 | halt: 
32479 | halt: 
32480 | halt: 
32481 | halt: 
32482 | halt: 
32483 | halt: 
32484 | halt: 
32485 | halt: 
32486 | halt: 
32487 | halt: 
32488 | halt: 
32489 | halt: 
32490 | halt: 
32491 | halt: 
32492 | halt: 
32493 | halt: 
32494 | halt: 
32495 | halt: 
32496 | halt: 
32497 | halt: 
32498 | halt: 
32499 | halt: 
32500 | halt: 
32501 | halt: 
32502 | halt: 
32503 | halt: 
32504 | halt: 
32505 | halt: 
32506 | halt: 
32507 | halt: 
32508 | halt: 
32509 | halt: 
32510 | halt: 
32511 | halt: 
32512 | halt: 
32513 | halt: 
32514 | halt: 
32515 | halt: 
32516 | halt: 
32517 | halt: 
32518 | halt: 
32519 | halt: 
32520 | halt: 
32521 | halt: 
32522 | halt: 
32523 | halt: 
32524 | halt: 
32525 | halt: 
32526 | halt: 
32527 | halt: 
32528 | halt: 
32529 | halt: 
32530 | halt: 
32531 | halt: 
32532 | halt: 
32533 | halt: 
32534 | halt: 
32535 | halt: 
32536 | halt: 
32537 | halt: 
32538 | halt: 
32539 | halt: 
32540 | halt: 
32541 | halt: 
32542 | halt: 
32543 | halt: 
32544 | halt: 
32545 | halt: 
32546 | halt: 
32547 | halt: 
32548 | halt: 
32549 | halt: 
32550 | halt: 
32551 | halt: 
32552 | halt: 
32553 | halt: 
32554 | halt: 
32555 | halt: 
32556 | halt: 
32557 | halt: 
32558 | halt: 
32559 | halt: 
32560 | halt: 
32561 | halt: 
32562 | halt: 
32563 | halt: 
32564 | halt: 
32565 | halt: 
32566 | halt: 
32567 | halt: 
32568 | halt: 
32569 | halt: 
32570 | halt: 
32571 | halt: 
32572 | halt: 
32573 | halt: 
32574 | halt: 
32575 | halt: 
32576 | halt: 
32577 | halt: 
32578 | halt: 
32579 | halt: 
32580 | halt: 
32581 | halt: 
32582 | halt: 
32583 | halt: 
32584 | halt: 
32585 | halt: 
32586 | halt: 
32587 | halt: 
32588 | halt: 
32589 | halt: 
32590 | halt: 
32591 | halt: 
32592 | halt: 
32593 | halt: 
32594 | halt: 
32595 | halt: 
32596 | halt: 
32597 | halt: 
32598 | halt: 
32599 | halt: 
32600 | halt: 
32601 | halt: 
32602 | halt: 
32603 | halt: 
32604 | halt: 
32605 | halt: 
32606 | halt: 
32607 | halt: 
32608 | halt: 
32609 | halt: 
32610 | halt: 
32611 | halt: 
32612 | halt: 
32613 | halt: 
32614 | halt: 
32615 | halt: 
32616 | halt: 
32617 | halt: 
32618 | halt: 
32619 | halt: 
32620 | halt: 
32621 | halt: 
32622 | halt: 
32623 | halt: 
32624 | halt: 
32625 | halt: 
32626 | halt: 
32627 | halt: 
32628 | halt: 
32629 | halt: 
32630 | halt: 
32631 | halt: 
32632 | halt: 
32633 | halt: 
32634 | halt: 
32635 | halt: 
32636 | halt: 
32637 | halt: 
32638 | halt: 
32639 | halt: 
32640 | halt: 
32641 | halt: 
32642 | halt: 
32643 | halt: 
32644 | halt: 
32645 | halt: 
32646 | halt: 
32647 | halt: 
32648 | halt: 
32649 | halt: 
32650 | halt: 
32651 | halt: 
32652 | halt: 
32653 | halt: 
32654 | halt: 
32655 | halt: 
32656 | halt: 
32657 | halt: 
32658 | halt: 
32659 | halt: 
32660 | halt: 
32661 | halt: 
32662 | halt: 
32663 | halt: 
32664 | halt: 
32665 | halt: 
32666 | halt: 
32667 | halt: 
32668 | halt: 
32669 | halt: 
32670 | halt: 
32671 | halt: 
32672 | halt: 
32673 | halt: 
32674 | halt: 
32675 | halt: 
32676 | halt: 
32677 | halt: 
32678 | halt: 
32679 | halt: 
32680 | halt: 
32681 | halt: 
32682 | halt: 
32683 | halt: 
32684 | halt: 
32685 | halt: 
32686 | halt: 
32687 | halt: 
32695 | halt: 
32699 | halt: 
32700 | set: 0 = 0
32703 | halt: 
32707 | halt: 
32711 | halt: 
32715 | halt: 
32718 | set: 0 = 19208
32723 | halt: 
32726 | set: 0 = 19232
32731 | halt: 
32735 | halt: 
32738 | set: 0 = 0
32741 | halt: 
32742 | set: 0 = 8776
32746 | set: 0 = 0
32749 | halt: 
32750 | halt: 
32751 | halt: 
32752 | halt: 
32753 | halt: 
32754 | halt: 
32755 | halt: 
32756 | halt: 
32757 | halt: 
32758 | halt: 
32759 | halt: 
32760 | halt: 
32761 | halt: 
32762 | halt: 
32763 | halt: 
32764 | halt: 
32765 | halt: 
32766 | halt: 
32767 | halt: 
