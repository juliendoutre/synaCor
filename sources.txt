0 | out: printf(87);
1 | out: printf(101);
2 | out: printf(108);
3 | out: printf(99);
4 | out: printf(111);
5 | out: printf(109);
6 | out: printf(101);
7 | out: printf(32);
8 | out: printf(116);
9 | out: printf(111);
10 | out: printf(32);
11 | out: printf(116);
12 | out: printf(104);
13 | out: printf(101);
14 | out: printf(32);
15 | out: printf(83);
16 | out: printf(121);
17 | out: printf(110);
18 | out: printf(97);
19 | out: printf(99);
20 | out: printf(111);
21 | out: printf(114);
22 | out: printf(32);
23 | out: printf(67);
24 | out: printf(104);
25 | out: printf(97);
26 | out: printf(108);
27 | out: printf(108);
28 | out: printf(101);
29 | out: printf(110);
30 | out: printf(103);
31 | out: printf(101);
32 | out: printf(33);
33 | out: printf(10);
34 | out: printf(80);
35 | out: printf(108);
36 | out: printf(101);
37 | out: printf(97);
38 | out: printf(115);
39 | out: printf(101);
40 | out: printf(32);
41 | out: printf(114);
42 | out: printf(101);
43 | out: printf(99);
44 | out: printf(111);
45 | out: printf(114);
46 | out: printf(100);
47 | out: printf(32);
48 | out: printf(121);
49 | out: printf(111);
50 | out: printf(117);
51 | out: printf(114);
52 | out: printf(32);
53 | out: printf(112);
54 | out: printf(114);
55 | out: printf(111);
56 | out: printf(103);
57 | out: printf(114);
58 | out: printf(101);
59 | out: printf(115);
60 | out: printf(115);
61 | out: printf(32);
62 | out: printf(98);
63 | out: printf(121);
64 | out: printf(32);
65 | out: printf(112);
66 | out: printf(117);
67 | out: printf(116);
68 | out: printf(116);
69 | out: printf(105);
70 | out: printf(110);
71 | out: printf(103);
72 | out: printf(32);
73 | out: printf(99);
74 | out: printf(111);
75 | out: printf(100);
76 | out: printf(101);
77 | out: printf(115);
78 | out: printf(32);
79 | out: printf(108);
80 | out: printf(105);
81 | out: printf(107);
82 | out: printf(101);
83 | out: printf(10);
84 | out: printf(116);
85 | out: printf(104);
86 | out: printf(105);
87 | out: printf(115);
88 | out: printf(32);
89 | out: printf(111);
90 | out: printf(110);
91 | out: printf(101);
92 | out: printf(32);
93 | out: printf(105);
94 | out: printf(110);
95 | out: printf(116);
96 | out: printf(111);
97 | out: printf(32);
98 | out: printf(116);
99 | out: printf(104);
100 | out: printf(101);
101 | out: printf(32);
102 | out: printf(99);
103 | out: printf(104);
104 | out: printf(97);
105 | out: printf(108);
106 | out: printf(108);
107 | out: printf(101);
108 | out: printf(110);
109 | out: printf(103);
110 | out: printf(101);
111 | out: printf(32);
112 | out: printf(119);
113 | out: printf(101);
114 | out: printf(98);
115 | out: printf(115);
116 | out: printf(105);
117 | out: printf(116);
118 | out: printf(101);
119 | out: printf(58);
120 | out: printf(32);
121 | out: printf(113);
122 | out: printf(70);
123 | out: printf(116);
124 | out: printf(80);
125 | out: printf(105);
126 | out: printf(109);
127 | out: printf(115);
128 | out: printf(98);
129 | out: printf(110);
130 | out: printf(108);
131 | out: printf(89);
132 | out: printf(73);
133 | out: printf(10);
134 | out: printf(10);
135 | out: printf(69);
136 | out: printf(120);
137 | out: printf(101);
138 | out: printf(99);
139 | out: printf(117);
140 | out: printf(116);
141 | out: printf(105);
142 | out: printf(110);
143 | out: printf(103);
144 | out: printf(32);
145 | out: printf(115);
146 | out: printf(101);
147 | out: printf(108);
148 | out: printf(102);
149 | out: printf(45);
150 | out: printf(116);
151 | out: printf(101);
152 | out: printf(115);
153 | out: printf(116);
154 | out: printf(46);
155 | out: printf(46);
156 | out: printf(46);
157 | out: printf(10);
158 | out: printf(10);
159 | jmp: go to memory[347]
160 | out: printf(106);
161 | out: printf(109);
162 | out: printf(112);
163 | out: printf(32);
164 | out: printf(102);
165 | out: printf(97);
166 | out: printf(105);
167 | out: printf(108);
168 | out: printf(115);
169 | out: printf(10);
170 | halt: 
171 | jmp: go to memory[358]
172 | jmp: go to memory[368]
173 | jmp: go to memory[397]
174 | jmp: go to memory[484]
175 | jmp: go to memory[424]
176 | jmp: go to memory[453]
177 | out: printf(106);
178 | out: printf(109);
179 | out: printf(112);
180 | out: printf(32);
181 | out: printf(108);
182 | out: printf(97);
183 | out: printf(110);
184 | out: printf(100);
185 | out: printf(115);
186 | out: printf(32);
187 | out: printf(45);
188 | out: printf(50);
189 | out: printf(10);
190 | halt: 
191 | out: printf(106);
192 | out: printf(109);
193 | out: printf(112);
194 | out: printf(32);
195 | out: printf(108);
196 | out: printf(97);
197 | out: printf(110);
198 | out: printf(100);
199 | out: printf(115);
200 | out: printf(32);
201 | out: printf(45);
202 | out: printf(49);
203 | out: printf(10);
204 | halt: 
205 | out: printf(106);
206 | out: printf(109);
207 | out: printf(112);
208 | out: printf(32);
209 | out: printf(108);
210 | out: printf(97);
211 | out: printf(110);
212 | out: printf(100);
213 | out: printf(115);
214 | out: printf(32);
215 | out: printf(43);
216 | out: printf(49);
217 | out: printf(10);
218 | halt: 
219 | out: printf(106);
220 | out: printf(109);
221 | out: printf(112);
222 | out: printf(32);
223 | out: printf(108);
224 | out: printf(97);
225 | out: printf(110);
226 | out: printf(100);
227 | out: printf(115);
228 | out: printf(32);
229 | out: printf(43);
230 | out: printf(50);
231 | out: printf(10);
232 | halt: 
233 | jt: if (0 != 0 { go to memory[1074] }
234 | jt: if (1 == 0 { go to 1074 }
235 | jt: if (1 != 0 { go to memory[495] }
236 | jmp: go to memory[1074]
237 | jt: if (0 == 0 { go to 500 }
238 | jmp: go to memory[1074]
239 | jt: if (r0 != 0 { go to memory[1093] }
240 | jt: if (r1 != 0 { go to memory[1093] }
241 | jt: if (r2 != 0 { go to memory[1093] }
242 | jt: if (r3 != 0 { go to memory[1093] }
243 | jt: if (r4 != 0 { go to memory[1093] }
244 | jt: if (r5 != 0 { go to memory[1093] }
245 | jt: if (r6 != 0 { go to memory[1093] }
246 | jt: if (r7 != 0 { go to memory[1093] }
247 | set: r0 = 1
248 | jt: if (r0 == 0 { go to 1118 }
249 | set: r0 = 0
250 | jt: if (r0 != 0 { go to memory[1118] }
251 | add: r0 = 1 + 1
252 | jt: if (r0 != 0 { go to memory[564] }
253 | out: printf(110);
254 | out: printf(111);
255 | out: printf(32);
256 | out: printf(97);
257 | out: printf(100);
258 | out: printf(100);
259 | out: printf(32);
260 | out: printf(111);
261 | out: printf(112);
262 | out: printf(10);
263 | halt: 
264 | eq: if (r0 == 2) { r1 == 1 } else { r1 == 0 }
265 | out: printf(110);
266 | out: printf(111);
267 | out: printf(32);
268 | out: printf(101);
269 | out: printf(113);
270 | out: printf(32);
271 | out: printf(111);
272 | out: printf(112);
273 | out: printf(10);
274 | halt: 
275 | push: push(r0);
276 | push: push(r1);
277 | pop: r0 = pop();
278 | pop: r1 = pop();
279 | eq: if (r1 == 2) { r2 == 1 } else { r2 == 0 }
280 | eq: if (r0 == 1) { r2 == 1 } else { r2 == 0 }
281 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
282 | gt: if (r0 > r1) { r2 == 1 } else { r2 == 0 }
283 | gt: if (42 > 42) { r2 == 1 } else { r2 == 0 }
284 | and: r0 = 28912 and 19626
285 | eq: if (r0 == 16544) { r1 == 1 } else { r1 == 0 }
286 | or: r1 = 28912 or 19626
287 | eq: if (r1 == 31994) { r0 == 1 } else { r0 == 0 }
288 | out: printf(110);
289 | out: printf(111);
290 | out: printf(32);
291 | out: printf(98);
292 | out: printf(105);
293 | out: printf(116);
294 | out: printf(119);
295 | out: printf(105);
296 | out: printf(115);
297 | out: printf(101);
298 | out: printf(32);
299 | out: printf(111);
300 | out: printf(114);
301 | out: printf(10);
302 | halt: 
303 | not: r0 = ~0
304 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
305 | not: r0 = ~21845
306 | eq: if (r0 == 10922) { r1 == 1 } else { r1 == 0 }
307 | call: push(706);
go to memory[1285]
308 | jmp: go to memory[1289]
309 | pop: r0 = pop();
310 | eq: if (r0 == 708) { r1 == 1 } else { r1 == 0 }
311 | eq: if (r0 == 706) { r1 == 1 } else { r1 == 0 }
312 | set: r0 = 1287
313 | call: push(729);
go to memory[r0]
314 | jmp: go to memory[1289]
315 | pop: r0 = pop();
316 | eq: if (r0 == 731) { r1 == 1 } else { r1 == 0 }
317 | eq: if (r0 == 729) { r1 == 1 } else { r1 == 0 }
318 | add: r0 = 32767 + 32767
319 | eq: if (r0 == 32766) { r1 == 1 } else { r1 == 0 }
320 | eq: if (32766 == r0) { r1 == 1 } else { r1 == 0 }
321 | add: r0 = 16384 + 16384
322 | jt: if (r0 != 0 { go to memory[1312] }
323 | add: r0 = 16384 + 16384
324 | jt: if (r0 != 0 { go to memory[1312] }
325 | mult: r0 = 6 * 9
326 | eq: if (r0 == 42) { r1 == 1 } else { r1 == 0 }
327 | eq: if (r0 == 54) { r1 == 1 } else { r1 == 0 }
328 | mult: r0 = 12345 * 32123
329 | eq: if (r0 == 99) { r1 == 1 } else { r1 == 0 }
330 | mod: r0 = 6 % 3
331 | eq: if (r0 == 0) { r1 == 1 } else { r1 == 0 }
332 | mod: r0 = 70 % 6
333 | eq: if (r0 == 4) { r1 == 1 } else { r1 == 0 }
334 | mult: r0 = 32766 * 15
335 | eq: if (r0 == 32738) { r1 == 1 } else { r1 == 0 }
336 | jmp: go to memory[845]
337 | rmem: r0 = memory[843]
338 | eq: if (r0 == 20000) { r1 == 1 } else { r1 == 0 }
339 | add: r2 = 843 + 1
340 | rmem: r0 = memory[r2]
341 | eq: if (r0 == 10000) { r1 == 1 } else { r1 == 0 }
342 | set: r0 = 843
343 | wmem: memory[r0] = 30000
344 | rmem: r2 = memory[r0]
345 | eq: if (r2 == 30000) { r1 == 1 } else { r1 == 0 }
346 | call: push(887);
go to memory[1723]
347 | rmem: r0 = memory[6068]
348 | eq: if (r0 == 11) { r1 == 1 } else { r1 == 0 }
349 | add: r2 = 6068 + 1
350 | rmem: r0 = memory[r2]
351 | eq: if (r0 == 116) { r1 == 1 } else { r1 == 0 }
352 | wmem: memory[r2] = 84
353 | rmem: r0 = memory[r2]
354 | eq: if (r0 == 116) { r1 == 1 } else { r1 == 0 }
355 | eq: if (r0 == 84) { r1 == 1 } else { r1 == 0 }
356 | wmem: memory[937] = 21
357 | wmem: memory[938] = 7
358 | jt: if (19 != 0 { go to memory[978] }
359 | out: printf(119);
360 | out: printf(109);
361 | out: printf(101);
362 | out: printf(109);
363 | out: printf(32);
364 | out: printf(111);
365 | out: printf(112);
366 | out: printf(119);
367 | out: printf(114);
368 | out: printf(105);
369 | out: printf(116);
370 | out: printf(101);
371 | out: printf(32);
372 | out: printf(102);
373 | out: printf(97);
374 | out: printf(105);
375 | out: printf(108);
376 | out: printf(10);
377 | halt: 
378 | add: r1 = 10 + 6080
379 | add: r1 = r1 + 1
380 | rmem: r2 = memory[6116]
381 | add: r2 = r2 + 6116
382 | set: r0 = 6116
383 | add: r0 = r0 + 1
384 | gt: if (r0 > r2) { r3 == 1 } else { r3 == 0 }
385 | rmem: r4 = memory[r0]
386 | wmem: memory[r1] = r4
387 | add: r0 = r0 + 1
388 | add: r1 = r1 + 1
389 | jmp: go to memory[1000]
390 | rmem: r0 = memory[6080]
391 | rmem: r1 = memory[6099]
392 | add: r0 = r0 + r1
393 | add: r0 = r0 + 1
394 | wmem: memory[6080] = r0
395 | wmem: memory[6099] = 44
396 | set: r0 = 6080
397 | call: push(1048);
go to memory[1518]
398 | push: push(r0);
399 | push: push(r1);
400 | push: push(r2);
401 | set: r0 = 26851
402 | set: r1 = 1531
403 | add: r2 = 7511 + 159
404 | call: push(1066);
go to memory[1458]
405 | pop: r2 = pop();
406 | pop: r1 = pop();
407 | pop: r0 = pop();
408 | jmp: go to memory[2734]
409 | out: printf(110);
410 | out: printf(111);
411 | out: printf(32);
412 | out: printf(106);
413 | out: printf(116);
414 | out: printf(47);
415 | out: printf(106);
416 | out: printf(102);
417 | out: printf(10);
418 | halt: 
419 | out: printf(110);
420 | out: printf(111);
421 | out: printf(110);
422 | out: printf(122);
423 | out: printf(101);
424 | out: printf(114);
425 | out: printf(111);
426 | out: printf(32);
427 | out: printf(114);
428 | out: printf(101);
429 | out: printf(103);
430 | out: printf(10);
431 | halt: 
432 | out: printf(110);
433 | out: printf(111);
434 | out: printf(32);
435 | out: printf(115);
436 | out: printf(101);
437 | out: printf(116);
438 | out: printf(32);
439 | out: printf(111);
440 | out: printf(112);
441 | out: printf(10);
442 | halt: 
443 | out: printf(110);
444 | out: printf(111);
445 | out: printf(32);
446 | out: printf(103);
447 | out: printf(116);
448 | out: printf(32);
449 | out: printf(111);
450 | out: printf(112);
451 | out: printf(10);
452 | halt: 
453 | out: printf(110);
454 | out: printf(111);
455 | out: printf(32);
456 | out: printf(115);
457 | out: printf(116);
458 | out: printf(97);
459 | out: printf(99);
460 | out: printf(107);
461 | out: printf(10);
462 | halt: 
463 | out: printf(110);
464 | out: printf(111);
465 | out: printf(32);
466 | out: printf(98);
467 | out: printf(105);
468 | out: printf(116);
469 | out: printf(119);
470 | out: printf(105);
471 | out: printf(115);
472 | out: printf(101);
473 | out: printf(32);
474 | out: printf(97);
475 | out: printf(110);
476 | out: printf(100);
477 | out: printf(10);
478 | halt: 
479 | out: printf(110);
480 | out: printf(111);
481 | out: printf(32);
482 | out: printf(98);
483 | out: printf(105);
484 | out: printf(116);
485 | out: printf(119);
486 | out: printf(105);
487 | out: printf(115);
488 | out: printf(101);
489 | out: printf(32);
490 | out: printf(110);
491 | out: printf(111);
492 | out: printf(116);
493 | out: printf(10);
494 | halt: 
495 | out: printf(110);
496 | out: printf(111);
497 | out: printf(32);
498 | out: printf(114);
499 | out: printf(109);
500 | out: printf(101);
501 | out: printf(109);
502 | out: printf(32);
503 | out: printf(111);
504 | out: printf(112);
505 | out: printf(10);
506 | halt: 
507 | out: printf(110);
508 | out: printf(111);
509 | out: printf(32);
510 | out: printf(119);
511 | out: printf(109);
512 | out: printf(101);
513 | out: printf(109);
514 | out: printf(32);
515 | out: printf(111);
516 | out: printf(112);
517 | out: printf(10);
518 | halt: 
519 | jmp: go to memory[708]
520 | jmp: go to memory[731]
521 | out: printf(110);
522 | out: printf(111);
523 | out: printf(32);
524 | out: printf(99);
525 | out: printf(97);
526 | out: printf(108);
527 | out: printf(108);
528 | out: printf(32);
529 | out: printf(111);
530 | out: printf(112);
531 | out: printf(10);
532 | halt: 
533 | out: printf(110);
534 | out: printf(111);
535 | out: printf(32);
536 | out: printf(109);
537 | out: printf(111);
538 | out: printf(100);
539 | out: printf(117);
540 | out: printf(108);
541 | out: printf(111);
542 | out: printf(32);
543 | out: printf(109);
544 | out: printf(97);
545 | out: printf(116);
546 | out: printf(104);
547 | out: printf(32);
548 | out: printf(100);
549 | out: printf(117);
550 | out: printf(114);
551 | out: printf(105);
552 | out: printf(110);
553 | out: printf(103);
554 | out: printf(32);
555 | out: printf(97);
556 | out: printf(100);
557 | out: printf(100);
558 | out: printf(32);
559 | out: printf(111);
560 | out: printf(114);
561 | out: printf(32);
562 | out: printf(109);
563 | out: printf(117);
564 | out: printf(108);
565 | out: printf(116);
566 | out: printf(10);
567 | halt: 
568 | out: printf(110);
569 | out: printf(111);
570 | out: printf(116);
571 | out: printf(32);
572 | out: printf(104);
573 | out: printf(105);
574 | out: printf(116);
575 | out: printf(99);
576 | out: printf(104);
577 | out: printf(104);
578 | out: printf(105);
579 | out: printf(107);
580 | out: printf(105);
581 | out: printf(110);
582 | out: printf(103);
583 | out: printf(10);
584 | halt: 
585 | out: printf(110);
586 | out: printf(111);
587 | out: printf(32);
588 | out: printf(109);
589 | out: printf(117);
590 | out: printf(108);
591 | out: printf(116);
592 | out: printf(32);
593 | out: printf(111);
594 | out: printf(112);
595 | out: printf(10);
596 | halt: 
597 | out: printf(110);
598 | out: printf(111);
599 | out: printf(32);
600 | out: printf(109);
601 | out: printf(111);
602 | out: printf(100);
603 | out: printf(32);
604 | out: printf(111);
605 | out: printf(112);
606 | out: printf(10);
607 | halt: 
608 | push: push(r0);
609 | push: push(r3);
610 | push: push(r4);
611 | push: push(r5);
612 | push: push(r6);
613 | set: r6 = r0
614 | set: r5 = r1
615 | rmem: r4 = memory[r0]
616 | set: r1 = 0
617 | add: r3 = 1 + r1
618 | gt: if (r3 > r4) { r0 == 1 } else { r0 == 0 }
619 | add: r3 = r3 + r6
620 | rmem: r0 = memory[r3]
621 | call: push(1500);
go to memory[r5]
622 | add: r1 = r1 + 1
623 | jt: if (r1 != 0 { go to memory[1480] }
624 | pop: r6 = pop();
625 | pop: r5 = pop();
626 | pop: r4 = pop();
627 | pop: r3 = pop();
628 | pop: r0 = pop();
629 | ret: go to memory[pop()];
630 | push: push(r1);
631 | set: r1 = 1528
632 | call: push(1525);
go to memory[1458]
633 | pop: r1 = pop();
634 | ret: go to memory[pop()];
635 | out: printf(r0);
636 | ret: go to memory[pop()];
637 | push: push(r1);
638 | set: r1 = r2
639 | call: push(1538);
go to memory[2125]
640 | out: printf(r0);
641 | pop: r1 = pop();
642 | ret: go to memory[pop()];
643 | push: push(r1);
644 | push: push(r3);
645 | rmem: r3 = memory[r0]
646 | jt: if (r3 == 0 { go to 1563 }
647 | call: push(1555);
go to memory[1458]
648 | jt: if (r1 != 0 { go to memory[1563] }
649 | set: r0 = r2
650 | jmp: go to memory[1566]
651 | set: r0 = 32767
652 | pop: r3 = pop();
653 | pop: r1 = pop();
654 | ret: go to memory[pop()];
655 | push: push(r1);
656 | push: push(r2);
657 | set: r2 = r1
658 | set: r1 = 1605
659 | call: push(1583);
go to memory[1543]
660 | pop: r2 = pop();
661 | pop: r1 = pop();
662 | ret: go to memory[pop()];
663 | push: push(r1);
664 | push: push(r2);
665 | set: r2 = r1
666 | set: r1 = 1648
667 | call: push(1600);
go to memory[1543]
668 | pop: r2 = pop();
669 | pop: r1 = pop();
670 | ret: go to memory[pop()];
671 | eq: if (r0 == r2) { r0 == 1 } else { r0 == 0 }
672 | set: r2 = r1
673 | set: r1 = 32767
674 | ret: go to memory[pop()];
675 | push: push(r3);
676 | add: r3 = r2 + 1
677 | add: r3 = r3 + r1
678 | rmem: r3 = memory[r3]
679 | eq: if (r0 == r3) { r3 == 1 } else { r3 == 0 }
680 | set: r2 = r1
681 | set: r1 = 32767
682 | pop: r3 = pop();
683 | ret: go to memory[pop()];
684 | push: push(r1);
685 | set: r1 = r2
686 | call: push(1655);
go to memory[1667]
687 | pop: r1 = pop();
688 | jt: if (r0 == 0 { go to 1666 }
689 | set: r2 = r1
690 | set: r1 = 32767
691 | ret: go to memory[pop()];
692 | push: push(r1);
693 | push: push(r2);
694 | push: push(r3);
695 | push: push(r4);
696 | rmem: r3 = memory[r0]
697 | rmem: r4 = memory[r1]
698 | eq: if (r3 == r4) { r2 == 1 } else { r2 == 0 }
699 | or: r2 = r3 or r4
700 | jt: if (r2 == 0 { go to 1706 }
701 | set: r2 = r1
702 | set: r1 = 1619
703 | call: push(1703);
go to memory[1458]
704 | jt: if (r1 == 0 { go to 1711 }
705 | set: r0 = 1
706 | jmp: go to memory[1714]
707 | set: r0 = 0
708 | pop: r4 = pop();
709 | pop: r3 = pop();
710 | pop: r2 = pop();
711 | pop: r1 = pop();
712 | ret: go to memory[pop()];
713 | push: push(r0);
714 | push: push(r1);
715 | set: r1 = 6068
716 | rmem: r0 = memory[r1]
717 | push: push(r1);
718 | mult: r1 = r1 * r1
719 | call: push(1741);
go to memory[2125]
720 | set: r1 = 16724
721 | call: push(1746);
go to memory[2125]
722 | pop: r1 = pop();
723 | wmem: memory[r1] = r0
724 | add: r1 = r1 + 1
725 | eq: if (30050 == r1) { r0 == 1 } else { r0 == 0 }
726 | pop: r1 = pop();
727 | pop: r0 = pop();
728 | ret: go to memory[pop()];
729 | push: push(r0);
730 | push: push(r2);
731 | push: push(r3);
732 | push: push(r4);
733 | push: push(r5);
734 | add: r2 = r1 + r0
735 | set: r0 = r1
736 | set: r5 = 0
737 | add: r0 = r0 + 1
738 | gt: if (r0 > r2) { r3 == 1 } else { r3 == 0 }
739 | in: r4 = getchar();
740 | eq: if (r4 == 10) { r3 == 1 } else { r3 == 0 }
741 | wmem: memory[r0] = r4
742 | add: r5 = r5 + 1
743 | jmp: go to memory[1787]
744 | wmem: memory[r1] = r5
745 | eq: if (r4 == 10) { r3 == 1 } else { r3 == 0 }
746 | in: r4 = getchar();
747 | jmp: go to memory[1819]
748 | pop: r5 = pop();
749 | pop: r4 = pop();
750 | pop: r3 = pop();
751 | pop: r2 = pop();
752 | pop: r0 = pop();
753 | ret: go to memory[pop()];
754 | push: push(r3);
755 | push: push(r4);
756 | push: push(r5);
757 | push: push(r6);
758 | set: r6 = 1
759 | add: r4 = r3 + r6
760 | rmem: r4 = memory[r4]
761 | add: r5 = 6125 + r6
762 | wmem: memory[r5] = r4
763 | add: r6 = r6 + 1
764 | rmem: r5 = memory[6125]
765 | gt: if (r6 > r5) { r4 == 1 } else { r4 == 0 }
766 | set: r3 = 0
767 | set: r4 = 0
768 | rmem: r5 = memory[6125]
769 | mod: r5 = r4 % r5
770 | add: r5 = r5 + 6125
771 | add: r5 = r5 + 1
772 | rmem: r6 = memory[r5]
773 | mult: r6 = r6 * 5249
774 | add: r6 = r6 + 12345
775 | wmem: memory[r5] = r6
776 | push: push(r0);
777 | push: push(r1);
778 | set: r1 = r6
779 | call: push(1924);
go to memory[2125]
780 | set: r6 = r0
781 | pop: r1 = pop();
782 | pop: r0 = pop();
783 | rmem: r5 = memory[r1]
784 | mod: r6 = r6 % r5
785 | add: r6 = r6 + 1
786 | gt: if (r6 > r2) { r5 == 1 } else { r5 == 0 }
787 | set: r3 = 1
788 | add: r6 = r6 + r1
789 | rmem: r6 = memory[r6]
790 | add: r4 = r4 + 1
791 | add: r5 = r4 + 6129
792 | wmem: memory[r5] = r6
793 | rmem: r5 = memory[6129]
794 | eq: if (r4 == r5) { r5 == 1 } else { r5 == 0 }
795 | jt: if (r3 == 0 { go to 1880 }
796 | push: push(r0);
797 | set: r0 = 6129
798 | call: push(1990);
go to memory[1518]
799 | pop: r0 = pop();
800 | pop: r6 = pop();
801 | pop: r5 = pop();
802 | pop: r4 = pop();
803 | pop: r3 = pop();
804 | ret: go to memory[pop()];
805 | push: push(r0);
806 | push: push(r1);
807 | push: push(r2);
808 | push: push(r3);
809 | push: push(r4);
810 | push: push(r5);
811 | set: r2 = 1
812 | set: r5 = 0
813 | jt: if (r0 == 0 { go to 2092 }
814 | eq: if (r2 == 10000) { r4 == 1 } else { r4 == 0 }
815 | jt: if (r4 != 0 { go to memory[2040] }
816 | mult: r1 = r2 * 10
817 | mod: r3 = r0 % r1
818 | set: r4 = 0
819 | mult: r2 = r2 * 32767
820 | jt: if (r3 == 0 { go to 2060 }
821 | add: r4 = r4 + 1
822 | add: r3 = r3 + r2
823 | jmp: go to memory[2047]
824 | mult: r2 = r2 * 32767
825 | mult: r3 = r4 * r2
826 | mult: r3 = r3 * 32767
827 | add: r0 = r0 + r3
828 | add: r4 = r4 + 48
829 | mult: r2 = r2 * 10
830 | add: r5 = r5 + 1
831 | push: push(r4);
832 | jmp: go to memory[2019]
833 | jt: if (r5 != 0 { go to memory[2099] }
834 | out: printf(48);
835 | jmp: go to memory[2112]
836 | jt: if (r5 == 0 { go to 2112 }
837 | pop: r0 = pop();
838 | out: printf(r0);
839 | add: r5 = r5 + 32767
840 | jmp: go to memory[2099]
841 | pop: r5 = pop();
842 | pop: r4 = pop();
843 | pop: r3 = pop();
844 | pop: r2 = pop();
845 | pop: r1 = pop();
846 | pop: r0 = pop();
847 | ret: go to memory[pop()];
848 | push: push(r1);
849 | push: push(r2);
850 | and: r2 = r0 and r1
851 | not: r2 = ~r2
852 | or: r0 = r0 or r1
853 | and: r0 = r0 and r2
854 | pop: r2 = pop();
855 | pop: r1 = pop();
856 | ret: go to memory[pop()];
857 | add: r0 = r0 + r1
858 | gt: if (r1 > r0) { r1 == 1 } else { r1 == 0 }
859 | push: push(r2);
860 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
861 | add: r0 = r0 + r1
862 | set: r1 = r2
863 | pop: r2 = pop();
864 | ret: go to memory[pop()];
865 | jt: if (r0 == 0 { go to 2241 }
866 | jt: if (r1 == 0 { go to 2241 }
867 | push: push(r2);
868 | push: push(r3);
869 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
870 | set: r2 = r0
871 | set: r0 = r1
872 | set: r1 = r2
873 | set: r2 = r0
874 | set: r0 = 0
875 | add: r0 = r0 + r1
876 | gt: if (r1 > r0) { r3 == 1 } else { r3 == 0 }
877 | add: r2 = r2 + 32767
878 | jt: if (r2 != 0 { go to memory[2210] }
879 | set: r1 = 0
880 | jmp: go to memory[2236]
881 | set: r1 = 1
882 | pop: r3 = pop();
883 | pop: r2 = pop();
884 | ret: go to memory[pop()];
885 | set: r0 = 0
886 | set: r1 = 0
887 | ret: go to memory[pop()];
888 | push: push(r1);
889 | push: push(r2);
890 | jt: if (r1 == 0 { go to 2276 }
891 | add: r1 = r1 + 32767
892 | and: r2 = r0 and 16384
893 | mult: r0 = r0 * 2
894 | jt: if (r2 == 0 { go to 2252 }
895 | or: r0 = r0 or 1
896 | jmp: go to memory[2252]
897 | pop: r2 = pop();
898 | pop: r1 = pop();
899 | ret: go to memory[pop()];
900 | push: push(r1);
901 | gt: if (r0 > 14) { r1 == 1 } else { r1 == 0 }
902 | set: r1 = r0
903 | set: r0 = 1
904 | jt: if (r1 == 0 { go to 2312 }
905 | add: r1 = r1 + 32767
906 | mult: r0 = r0 * 2
907 | jmp: go to memory[2296]
908 | set: r0 = 32767
909 | pop: r1 = pop();
910 | ret: go to memory[pop()];
911 | jmp: go to memory[2734]
912 | halt: 
913 | halt: 
914 | halt: 
915 | halt: 
916 | halt: 
917 | halt: 
918 | halt: 
919 | halt: 
920 | halt: 
921 | halt: 
922 | halt: 
923 | halt: 
924 | halt: 
925 | halt: 
926 | halt: 
927 | halt: 
928 | halt: 
929 | halt: 
930 | halt: 
931 | halt: 
932 | halt: 
933 | halt: 
934 | halt: 
935 | halt: 
936 | halt: 
937 | halt: 
938 | halt: 
939 | halt: 
940 | halt: 
941 | halt: 
942 | halt: 
943 | halt: 
944 | halt: 
945 | halt: 
946 | halt: 
947 | halt: 
948 | halt: 
949 | halt: 
950 | halt: 
951 | halt: 
952 | halt: 
953 | halt: 
954 | halt: 
955 | push: push(r0);
956 | push: push(r1);
957 | push: push(r2);
958 | push: push(r3);
959 | rmem: r1 = memory[2732]
960 | rmem: r0 = memory[2733]
961 | eq: if (r0 == r1) { r0 == 1 } else { r0 == 0 }
962 | rmem: r0 = memory[2732]
963 | add: r0 = r0 + 4
964 | rmem: r0 = memory[r0]
965 | jt: if (r0 == 0 { go to 2770 }
966 | call: push(2770);
go to memory[r0]
967 | rmem: r1 = memory[2732]
968 | rmem: r0 = memory[2733]
969 | eq: if (r0 == r1) { r0 == 1 } else { r0 == 0 }
970 | set: r0 = 25974
971 | wmem: memory[r0] = 0
972 | call: push(2791);
go to memory[2964]
973 | wmem: memory[2733] = r1
974 | push: push(r0);
975 | push: push(r1);
976 | push: push(r2);
977 | set: r0 = 27414
978 | set: r1 = 1531
979 | add: r2 = 961 + 12837
980 | call: push(2812);
go to memory[1458]
981 | pop: r2 = pop();
982 | pop: r1 = pop();
983 | pop: r0 = pop();
984 | set: r0 = 32
985 | set: r1 = 25974
986 | call: push(2826);
go to memory[1767]
987 | out: printf(10);
988 | out: printf(10);
989 | set: r0 = 25974
990 | set: r1 = 32
991 | call: push(2838);
go to memory[1571]
992 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
993 | rmem: r0 = memory[25974]
994 | set: r2 = r0
995 | rmem: r1 = memory[25974]
996 | push: push(r1);
997 | wmem: memory[25974] = r2
998 | set: r0 = 27398
999 | set: r1 = 25974
1000 | call: push(2867);
go to memory[1588]
1001 | pop: r1 = pop();
1002 | wmem: memory[25974] = r1
1003 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
1004 | set: r0 = 0
1005 | set: r2 = 0
1006 | add: r1 = 27406 + 1
1007 | add: r1 = r1 + r0
1008 | rmem: r1 = memory[r1]
1009 | rmem: r3 = memory[25974]
1010 | eq: if (r3 == r2) { r3 == 1 } else { r3 == 0 }
1011 | mult: r0 = r2 * 32767
1012 | rmem: r3 = memory[25974]
1013 | add: r3 = r0 + r3
1014 | jt: if (r2 == 0 { go to 2924 }
1015 | add: r3 = r3 + 32767
1016 | mod: r3 = r3 % 32
1017 | add: r0 = 25974 + r2
1018 | jt: if (r2 == 0 { go to 2939 }
1019 | add: r0 = r0 + 1
1020 | wmem: memory[r0] = r3
1021 | jmp: go to memory[2950]
1022 | set: r0 = 25974
1023 | wmem: memory[r0] = 0
1024 | call: push(2952);
go to memory[r1]
1025 | jt: if (r1 != 0 { go to memory[2742] }
1026 | pop: r3 = pop();
1027 | pop: r2 = pop();
1028 | pop: r1 = pop();
1029 | pop: r0 = pop();
1030 | ret: go to memory[pop()];
1031 | push: push(r0);
1032 | push: push(r1);
1033 | push: push(r2);
1034 | rmem: r1 = memory[r0]
1035 | jt: if (r1 == 0 { go to 3032 }
1036 | call: push(2978);
go to memory[5921]
1037 | jt: if (r0 == 0 { go to 3006 }
1038 | push: push(r0);
1039 | call: push(2985);
go to memory[5990]
1040 | set: r1 = r0
1041 | pop: r0 = pop();
1042 | jt: if (r1 == 0 { go to 3006 }
1043 | add: r1 = r0 + 1
1044 | rmem: r0 = memory[r1]
1045 | call: push(3002);
go to memory[1518]
1046 | out: printf(10);
1047 | jmp: go to memory[3238]
1048 | push: push(r0);
1049 | push: push(r1);
1050 | push: push(r2);
1051 | set: r0 = 27432
1052 | set: r1 = 1531
1053 | add: r2 = 1808 + 735
1054 | call: push(3024);
go to memory[1458]
1055 | pop: r2 = pop();
1056 | pop: r1 = pop();
1057 | pop: r0 = pop();
1058 | jmp: go to memory[3238]
1059 | rmem: r0 = memory[2732]
1060 | push: push(r0);
1061 | out: printf(61);
1062 | out: printf(61);
1063 | out: printf(32);
1064 | add: r0 = r0 + 0
1065 | rmem: r0 = memory[r0]
1066 | call: push(3052);
go to memory[1518]
1067 | out: printf(32);
1068 | out: printf(61);
1069 | out: printf(61);
1070 | out: printf(10);
1071 | pop: r0 = pop();
1072 | push: push(r0);
1073 | add: r0 = r0 + 1
1074 | rmem: r0 = memory[r0]
1075 | rmem: r1 = memory[r0]
1076 | eq: if (r1 == 2) { r1 == 1 } else { r1 == 0 }
1077 | push: push(r0);
1078 | set: r0 = 2680
1079 | call: push(3088);
go to memory[5990]
1080 | set: r1 = r0
1081 | pop: r0 = pop();
1082 | add: r0 = r0 + 1
1083 | add: r0 = r0 + r1
1084 | rmem: r0 = memory[r0]
1085 | call: push(3106);
go to memory[1518]
1086 | out: printf(10);
1087 | pop: r0 = pop();
1088 | push: push(r0);
1089 | call: push(3114);
go to memory[5823]
1090 | jt: if (r0 == 0 { go to 3146 }
1091 | push: push(r0);
1092 | push: push(r1);
1093 | push: push(r2);
1094 | set: r0 = 27455
1095 | set: r1 = 1531
1096 | add: r2 = 11048 + 15296
1097 | call: push(3135);
go to memory[1458]
1098 | pop: r2 = pop();
1099 | pop: r1 = pop();
1100 | pop: r0 = pop();
1101 | rmem: r2 = memory[2732]
1102 | call: push(3146);
go to memory[5876]
1103 | pop: r0 = pop();
1104 | push: push(r0);
1105 | add: r0 = r0 + 2
1106 | rmem: r0 = memory[r0]
1107 | rmem: r0 = memory[r0]
1108 | eq: if (r0 == 1) { r2 == 1 } else { r2 == 0 }
1109 | mult: 19 = 84 * 19
1110 | out: printf(101);
1111 | out: printf(114);
1112 | out: printf(101);
1113 | out: printf(32);
1114 | jt: if (r2 != 0 { go to memory[3189] }
1115 | out: printf(97);
1116 | out: printf(114);
1117 | out: printf(101);
1118 | jmp: go to memory[3193]
1119 | out: printf(105);
1120 | out: printf(115);
1121 | out: printf(32);
1122 | call: push(3197);
go to memory[2001]
1123 | out: printf(32);
1124 | out: printf(101);
1125 | out: printf(120);
1126 | out: printf(105);
1127 | out: printf(116);
1128 | eq: if (r0 == 1) { r2 == 1 } else { r2 == 0 }
1129 | out: printf(115);
1130 | out: printf(58);
1131 | out: printf(10);
1132 | pop: r0 = pop();
1133 | push: push(r0);
1134 | add: r0 = r0 + 2
1135 | rmem: r0 = memory[r0]
1136 | set: r1 = 5814
1137 | call: push(3236);
go to memory[1458]
1138 | pop: r0 = pop();
1139 | pop: r2 = pop();
1140 | pop: r1 = pop();
1141 | pop: r0 = pop();
1142 | ret: go to memory[pop()];
1143 | push: push(r0);
1144 | push: push(r1);
1145 | push: push(r2);
1146 | set: r1 = r0
1147 | rmem: r0 = memory[2732]
1148 | add: r0 = r0 + 2
1149 | rmem: r0 = memory[r0]
1150 | call: push(3266);
go to memory[1588]
1151 | eq: if (r0 == 32767) { r2 == 1 } else { r2 == 0 }
1152 | rmem: r2 = memory[2732]
1153 | add: r2 = r2 + 3
1154 | rmem: r2 = memory[r2]
1155 | add: r2 = r2 + 1
1156 | add: r2 = r2 + r0
1157 | rmem: r2 = memory[r2]
1158 | wmem: memory[2732] = r2
1159 | wmem: memory[2733] = 0
1160 | jmp: go to memory[3326]
1161 | push: push(r0);
1162 | push: push(r1);
1163 | push: push(r2);
1164 | set: r0 = 27482
1165 | set: r1 = 1531
1166 | add: r2 = 3414 + 19101
1167 | call: push(3320);
go to memory[1458]
1168 | pop: r2 = pop();
1169 | pop: r1 = pop();
1170 | pop: r0 = pop();
1171 | pop: r2 = pop();
1172 | pop: r1 = pop();
1173 | pop: r0 = pop();
1174 | ret: go to memory[pop()];
1175 | push: push(r0);
1176 | push: push(r0);
1177 | push: push(r1);
1178 | push: push(r2);
1179 | set: r0 = 27532
1180 | set: r1 = 1531
1181 | add: r2 = 24913 + 1440
1182 | call: push(3353);
go to memory[1458]
1183 | pop: r2 = pop();
1184 | pop: r1 = pop();
1185 | pop: r0 = pop();
1186 | pop: r0 = pop();
1187 | ret: go to memory[pop()];
1188 | push: push(r0);
1189 | push: push(r2);
1190 | push: push(r0);
1191 | push: push(r1);
1192 | push: push(r2);
1193 | set: r0 = 28037
1194 | set: r1 = 1531
1195 | add: r2 = 1736 + 4775
1196 | call: push(3384);
go to memory[1458]
1197 | pop: r2 = pop();
1198 | pop: r1 = pop();
1199 | pop: r0 = pop();
1200 | set: r2 = 0
1201 | call: push(3395);
go to memory[5876]
1202 | pop: r2 = pop();
1203 | pop: r0 = pop();
1204 | ret: go to memory[pop()];
1205 | push: push(r0);
1206 | push: push(r1);
1207 | push: push(r2);
1208 | call: push(3408);
go to memory[5921]
1209 | jt: if (r0 == 0 { go to 3457 }
1210 | add: r1 = r0 + 2
1211 | rmem: r0 = memory[r1]
1212 | rmem: r2 = memory[2732]
1213 | eq: if (r0 == r2) { r2 == 1 } else { r2 == 0 }
1214 | wmem: memory[r1] = 0
1215 | push: push(r0);
1216 | push: push(r1);
1217 | push: push(r2);
1218 | set: r0 = 28054
1219 | set: r1 = 1531
1220 | add: r2 = 149 + 22998
1221 | call: push(3449);
go to memory[1458]
1222 | pop: r2 = pop();
1223 | pop: r1 = pop();
1224 | pop: r0 = pop();
1225 | jmp: go to memory[3481]
1226 | push: push(r0);
1227 | push: push(r1);
1228 | push: push(r2);
1229 | set: r0 = 28062
1230 | set: r1 = 1531
1231 | add: r2 = 2956 + 231
1232 | call: push(3475);
go to memory[1458]
1233 | pop: r2 = pop();
1234 | pop: r1 = pop();
1235 | pop: r0 = pop();
1236 | pop: r2 = pop();
1237 | pop: r1 = pop();
1238 | pop: r0 = pop();
1239 | ret: go to memory[pop()];
1240 | push: push(r0);
1241 | push: push(r1);
1242 | call: push(3494);
go to memory[5921]
1243 | jt: if (r0 == 0 { go to 3539 }
1244 | add: r1 = r0 + 2
1245 | rmem: r0 = memory[r1]
1246 | jt: if (r0 != 0 { go to memory[3539] }
1247 | rmem: r0 = memory[2732]
1248 | wmem: memory[r1] = r0
1249 | push: push(r0);
1250 | push: push(r1);
1251 | push: push(r2);
1252 | set: r0 = 28090
1253 | set: r1 = 1531
1254 | add: r2 = 27045 + 5314
1255 | call: push(3531);
go to memory[1458]
1256 | pop: r2 = pop();
1257 | pop: r1 = pop();
1258 | pop: r0 = pop();
1259 | jmp: go to memory[3563]
1260 | push: push(r0);
1261 | push: push(r1);
1262 | push: push(r2);
1263 | set: r0 = 28100
1264 | set: r1 = 1531
1265 | add: r2 = 5789 + 21597
1266 | call: push(3557);
go to memory[1458]
1267 | pop: r2 = pop();
1268 | pop: r1 = pop();
1269 | pop: r0 = pop();
1270 | pop: r1 = pop();
1271 | pop: r0 = pop();
1272 | ret: go to memory[pop()];
1273 | push: push(r0);
1274 | push: push(r1);
1275 | call: push(3574);
go to memory[5921]
1276 | jt: if (r0 == 0 { go to 3601 }
1277 | add: r1 = r0 + 2
1278 | rmem: r1 = memory[r1]
1279 | jt: if (r1 != 0 { go to memory[3601] }
1280 | add: r1 = r0 + 3
1281 | rmem: r1 = memory[r1]
1282 | jt: if (r1 == 0 { go to 3627 }
1283 | call: push(3599);
go to memory[r1]
1284 | jmp: go to memory[3651]
1285 | push: push(r0);
1286 | push: push(r1);
1287 | push: push(r2);
1288 | set: r0 = 28135
1289 | set: r1 = 1531
1290 | add: r2 = 17722 + 8111
1291 | call: push(3619);
go to memory[1458]
1292 | pop: r2 = pop();
1293 | pop: r1 = pop();
1294 | pop: r0 = pop();
1295 | jmp: go to memory[3651]
1296 | push: push(r0);
1297 | push: push(r1);
1298 | push: push(r2);
1299 | set: r0 = 28170
1300 | set: r1 = 1531
1301 | add: r2 = 17316 + 2764
1302 | call: push(3645);
go to memory[1458]
1303 | pop: r2 = pop();
1304 | pop: r1 = pop();
1305 | pop: r0 = pop();
1306 | pop: r1 = pop();
1307 | pop: r0 = pop();
1308 | ret: go to memory[pop()];
1309 | push: push(r0);
1310 | push: push(r1);
1311 | push: push(r2);
1312 | set: r0 = 2680
1313 | call: push(3667);
go to memory[5990]
1314 | jt: if (r0 != 0 { go to memory[3694] }
1315 | add: r0 = 2676 + 2
1316 | wmem: memory[r0] = 32767
1317 | add: r0 = 2680 + 2
1318 | wmem: memory[r0] = 32767
1319 | add: r0 = 2672 + 2
1320 | wmem: memory[r0] = 32767
1321 | wmem: memory[2732] = 2648
1322 | pop: r2 = pop();
1323 | pop: r1 = pop();
1324 | pop: r0 = pop();
1325 | ret: go to memory[pop()];
1326 | push: push(r0);
1327 | push: push(r1);
1328 | push: push(r2);
1329 | set: r0 = 28204
1330 | set: r1 = 1531
1331 | add: r2 = 19975 + 3675
1332 | call: push(3719);
go to memory[1458]
1333 | pop: r2 = pop();
1334 | pop: r1 = pop();
1335 | pop: r0 = pop();
1336 | halt: 
1337 | halt: 
1338 | push: push(r1);
1339 | rmem: r1 = memory[3726]
1340 | or: r1 = r1 or r0
1341 | wmem: memory[3726] = r1
1342 | pop: r1 = pop();
1343 | ret: go to memory[pop()];
1344 | wmem: memory[3726] = 0
1345 | ret: go to memory[pop()];
1346 | push: push(r0);
1347 | set: r0 = 1
1348 | call: push(3753);
go to memory[3727]
1349 | pop: r0 = pop();
1350 | ret: go to memory[pop()];
1351 | push: push(r0);
1352 | set: r0 = 2
1353 | call: push(3763);
go to memory[3727]
1354 | pop: r0 = pop();
1355 | ret: go to memory[pop()];
1356 | push: push(r0);
1357 | set: r0 = 4
1358 | call: push(3773);
go to memory[3727]
1359 | pop: r0 = pop();
1360 | ret: go to memory[pop()];
1361 | push: push(r0);
1362 | set: r0 = 8
1363 | call: push(3783);
go to memory[3727]
1364 | pop: r0 = pop();
1365 | ret: go to memory[pop()];
1366 | push: push(r0);
1367 | set: r0 = 16
1368 | call: push(3793);
go to memory[3727]
1369 | pop: r0 = pop();
1370 | ret: go to memory[pop()];
1371 | push: push(r0);
1372 | set: r0 = 32
1373 | call: push(3803);
go to memory[3727]
1374 | pop: r0 = pop();
1375 | ret: go to memory[pop()];
1376 | push: push(r0);
1377 | push: push(r1);
1378 | push: push(r2);
1379 | push: push(r3);
1380 | set: r0 = 64
1381 | call: push(3819);
go to memory[3727]
1382 | push: push(r0);
1383 | push: push(r1);
1384 | push: push(r2);
1385 | set: r0 = 28236
1386 | set: r1 = 1531
1387 | add: r2 = 7385 + 11042
1388 | call: push(3837);
go to memory[1458]
1389 | pop: r2 = pop();
1390 | pop: r1 = pop();
1391 | pop: r0 = pop();
1392 | rmem: r0 = memory[3726]
1393 | set: r1 = 25866
1394 | set: r2 = 32767
1395 | set: r3 = 28299
1396 | call: push(3857);
go to memory[1841]
1397 | push: push(r0);
1398 | push: push(r1);
1399 | push: push(r2);
1400 | set: r0 = 28303
1401 | set: r1 = 1531
1402 | add: r2 = 17281 + 9448
1403 | call: push(3875);
go to memory[1458]
1404 | pop: r2 = pop();
1405 | pop: r1 = pop();
1406 | pop: r0 = pop();
1407 | wmem: memory[2732] = 2417
1408 | pop: r3 = pop();
1409 | pop: r2 = pop();
1410 | pop: r1 = pop();
1411 | pop: r0 = pop();
1412 | ret: go to memory[pop()];
1413 | push: push(r0);
1414 | push: push(r1);
1415 | rmem: r0 = memory[2462]
1416 | rmem: r1 = memory[27101]
1417 | eq: if (r0 == r1) { r0 == 1 } else { r0 == 0 }
1418 | push: push(r0);
1419 | push: push(r1);
1420 | push: push(r2);
1421 | set: r0 = 28347
1422 | set: r1 = 1531
1423 | add: r2 = 3847 + 21852
1424 | call: push(3928);
go to memory[1458]
1425 | pop: r2 = pop();
1426 | pop: r1 = pop();
1427 | pop: r0 = pop();
1428 | wmem: memory[2732] = 2457
1429 | wmem: memory[2733] = 2457
1430 | pop: r1 = pop();
1431 | pop: r0 = pop();
1432 | ret: go to memory[pop()];
1433 | halt: 
1434 | halt: 
1435 | halt: 
1436 | halt: 
1437 | halt: 
1438 | halt: 
1439 | push: push(r0);
1440 | push: push(r1);
1441 | set: r0 = 2
1442 | set: r1 = 0
1443 | call: push(3970);
go to memory[4218]
1444 | pop: r1 = pop();
1445 | pop: r0 = pop();
1446 | ret: go to memory[pop()];
1447 | push: push(r0);
1448 | push: push(r1);
1449 | set: r0 = 8
1450 | set: r1 = 1
1451 | call: push(3987);
go to memory[4279]
1452 | pop: r1 = pop();
1453 | pop: r0 = pop();
1454 | ret: go to memory[pop()];
1455 | push: push(r0);
1456 | push: push(r1);
1457 | set: r0 = 1
1458 | set: r1 = 2
1459 | call: push(4004);
go to memory[4218]
1460 | pop: r1 = pop();
1461 | pop: r0 = pop();
1462 | ret: go to memory[pop()];
1463 | push: push(r0);
1464 | push: push(r1);
1465 | set: r0 = 1
1466 | set: r1 = 3
1467 | call: push(4021);
go to memory[4279]
1468 | call: push(4023);
go to memory[4533]
1469 | pop: r1 = pop();
1470 | pop: r0 = pop();
1471 | ret: go to memory[pop()];
1472 | push: push(r0);
1473 | push: push(r1);
1474 | set: r0 = 4
1475 | set: r1 = 4
1476 | call: push(4040);
go to memory[4279]
1477 | pop: r1 = pop();
1478 | pop: r0 = pop();
1479 | ret: go to memory[pop()];
1480 | push: push(r0);
1481 | push: push(r1);
1482 | set: r0 = 2
1483 | set: r1 = 5
1484 | call: push(4057);
go to memory[4218]
1485 | pop: r1 = pop();
1486 | pop: r0 = pop();
1487 | ret: go to memory[pop()];
1488 | push: push(r0);
1489 | push: push(r1);
1490 | set: r0 = 11
1491 | set: r1 = 6
1492 | call: push(4074);
go to memory[4279]
1493 | pop: r1 = pop();
1494 | pop: r0 = pop();
1495 | ret: go to memory[pop()];
1496 | push: push(r0);
1497 | push: push(r1);
1498 | set: r0 = 2
1499 | set: r1 = 7
1500 | call: push(4091);
go to memory[4218]
1501 | pop: r1 = pop();
1502 | pop: r0 = pop();
1503 | ret: go to memory[pop()];
1504 | push: push(r0);
1505 | push: push(r1);
1506 | set: r0 = 0
1507 | set: r1 = 8
1508 | call: push(4108);
go to memory[4218]
1509 | pop: r1 = pop();
1510 | pop: r0 = pop();
1511 | ret: go to memory[pop()];
1512 | push: push(r0);
1513 | push: push(r1);
1514 | set: r0 = 4
1515 | set: r1 = 9
1516 | call: push(4125);
go to memory[4279]
1517 | pop: r1 = pop();
1518 | pop: r0 = pop();
1519 | ret: go to memory[pop()];
1520 | push: push(r0);
1521 | push: push(r1);
1522 | set: r0 = 1
1523 | set: r1 = 10
1524 | call: push(4142);
go to memory[4218]
1525 | pop: r1 = pop();
1526 | pop: r0 = pop();
1527 | ret: go to memory[pop()];
1528 | push: push(r0);
1529 | push: push(r1);
1530 | set: r0 = 18
1531 | set: r1 = 11
1532 | call: push(4159);
go to memory[4279]
1533 | pop: r1 = pop();
1534 | pop: r0 = pop();
1535 | ret: go to memory[pop()];
1536 | call: push(4166);
go to memory[4611]
1537 | ret: go to memory[pop()];
1538 | push: push(r0);
1539 | push: push(r1);
1540 | set: r0 = 1
1541 | set: r1 = 12
1542 | call: push(4179);
go to memory[4218]
1543 | pop: r1 = pop();
1544 | pop: r0 = pop();
1545 | ret: go to memory[pop()];
1546 | push: push(r0);
1547 | push: push(r1);
1548 | set: r0 = 9
1549 | set: r1 = 13
1550 | call: push(4196);
go to memory[4279]
1551 | pop: r1 = pop();
1552 | pop: r0 = pop();
1553 | ret: go to memory[pop()];
1554 | push: push(r0);
1555 | push: push(r1);
1556 | set: r0 = 2
1557 | set: r1 = 14
1558 | call: push(4213);
go to memory[4218]
1559 | pop: r1 = pop();
1560 | pop: r0 = pop();
1561 | ret: go to memory[pop()];
1562 | push: push(r0);
1563 | push: push(r1);
1564 | push: push(r2);
1565 | add: r2 = 2716 + 2
1566 | rmem: r2 = memory[r2]
1567 | jt: if (r2 != 0 { go to memory[4272] }
1568 | call: push(4236);
go to memory[4405]
1569 | wmem: memory[3951] = r0
1570 | add: r1 = r0 + 3945
1571 | rmem: r1 = memory[r1]
1572 | set: r0 = 26024
1573 | call: push(4251);
go to memory[1518]
1574 | set: r0 = r1
1575 | call: push(4256);
go to memory[1518]
1576 | set: r0 = 26088
1577 | call: push(4261);
go to memory[1518]
1578 | set: r0 = r1
1579 | call: push(4266);
go to memory[1518]
1580 | out: printf(46);
1581 | out: printf(10);
1582 | out: printf(10);
1583 | pop: r2 = pop();
1584 | pop: r1 = pop();
1585 | pop: r0 = pop();
1586 | ret: go to memory[pop()];
1587 | push: push(r0);
1588 | push: push(r1);
1589 | push: push(r2);
1590 | add: r2 = 2716 + 2
1591 | rmem: r2 = memory[r2]
1592 | jt: if (r2 != 0 { go to memory[4398] }
1593 | call: push(4297);
go to memory[4405]
1594 | push: push(r0);
1595 | rmem: r0 = memory[3951]
1596 | add: r1 = r0 + 3945
1597 | rmem: r1 = memory[r1]
1598 | set: r0 = 26122
1599 | call: push(4314);
go to memory[1518]
1600 | set: r0 = r1
1601 | call: push(4319);
go to memory[1518]
1602 | set: r0 = 26170
1603 | call: push(4324);
go to memory[1518]
1604 | pop: r0 = pop();
1605 | set: r1 = r0
1606 | rmem: r0 = memory[3952]
1607 | rmem: r2 = memory[3951]
1608 | add: r2 = r2 + 3948
1609 | rmem: r2 = memory[r2]
1610 | call: push(4344);
go to memory[r2]
1611 | jt: if (r1 != 0 { go to memory[4391] }
1612 | rmem: r1 = memory[3952]
1613 | wmem: memory[3952] = r0
1614 | gt: if (r0 > r1) { r2 == 1 } else { r2 == 0 }
1615 | push: push(r0);
1616 | set: r0 = 26235
1617 | call: push(4367);
go to memory[1518]
1618 | pop: r0 = pop();
1619 | gt: if (r1 > r0) { r2 == 1 } else { r2 == 0 }
1620 | push: push(r0);
1621 | set: r0 = 26267
1622 | call: push(4383);
go to memory[1518]
1623 | pop: r0 = pop();
1624 | out: printf(10);
1625 | out: printf(10);
1626 | jmp: go to memory[4398]
1627 | call: push(4393);
go to memory[4660]
1628 | set: r0 = 26299
1629 | call: push(4398);
go to memory[1518]
1630 | pop: r2 = pop();
1631 | pop: r1 = pop();
1632 | pop: r0 = pop();
1633 | ret: go to memory[pop()];
1634 | push: push(r0);
1635 | push: push(r1);
1636 | push: push(r2);
1637 | push: push(r3);
1638 | push: push(r4);
1639 | push: push(r5);
1640 | rmem: r5 = memory[3953]
1641 | gt: if (r5 > 29999) { r3 == 1 } else { r3 == 0 }
1642 | add: r5 = r5 + 1
1643 | wmem: memory[3953] = r5
1644 | set: r3 = r0
1645 | set: r4 = r1
1646 | add: r0 = r5 + 2
1647 | call: push(4446);
go to memory[2281]
1648 | rmem: r1 = memory[3954]
1649 | or: r0 = r1 or r0
1650 | set: r1 = r4
1651 | call: push(4458);
go to memory[2248]
1652 | wmem: memory[3954] = r0
1653 | set: r0 = 3955
1654 | add: r1 = r5 + 2
1655 | set: r2 = r4
1656 | call: push(4473);
go to memory[4515]
1657 | set: r0 = 3956
1658 | mult: r1 = r5 * r5
1659 | mult: r2 = r4 * r4
1660 | call: push(4486);
go to memory[4515]
1661 | set: r0 = 3957
1662 | set: r1 = 13
1663 | mult: r2 = r3 * 9
1664 | mult: r2 = r2 * r2
1665 | call: push(4502);
go to memory[4515]
1666 | pop: r5 = pop();
1667 | pop: r4 = pop();
1668 | pop: r3 = pop();
1669 | pop: r2 = pop();
1670 | pop: r1 = pop();
1671 | pop: r0 = pop();
1672 | ret: go to memory[pop()];
1673 | push: push(r0);
1674 | rmem: r0 = memory[r0]
1675 | call: push(4522);
go to memory[2248]
1676 | set: r1 = r2
1677 | call: push(4527);
go to memory[2125]
1678 | pop: r1 = pop();
1679 | wmem: memory[r1] = r0
1680 | ret: go to memory[pop()];
1681 | push: push(r0);
1682 | add: r0 = 2716 + 2
1683 | rmem: r0 = memory[r0]
1684 | jt: if (r0 != 0 { go to memory[4608] }
1685 | set: r0 = 26321
1686 | call: push(4550);
go to memory[1518]
1687 | rmem: r0 = memory[3952]
1688 | eq: if (r0 == 30) { r0 == 1 } else { r0 == 0 }
1689 | set: r0 = 26354
1690 | call: push(4565);
go to memory[1518]
1691 | set: r0 = 26398
1692 | call: push(4570);
go to memory[1518]
1693 | call: push(4572);
go to memory[4660]
1694 | jmp: go to memory[4608]
1695 | set: r0 = 26440
1696 | call: push(4579);
go to memory[1518]
1697 | rmem: r0 = memory[3954]
1698 | add: r0 = r0 + 1
1699 | jt: if (r0 != 0 { go to memory[4596] }
1700 | set: r0 = 26484
1701 | call: push(4594);
go to memory[1518]
1702 | jmp: go to memory[4565]
1703 | set: r0 = 26584
1704 | call: push(4601);
go to memory[1518]
1705 | add: r0 = 2716 + 2
1706 | wmem: memory[r0] = 32767
1707 | pop: r0 = pop();
1708 | ret: go to memory[pop()];
1709 | push: push(r0);
1710 | add: r0 = 2716 + 2
1711 | rmem: r0 = memory[r0]
1712 | jt: if (r0 != 0 { go to memory[4657] }
1713 | set: r0 = 26717
1714 | call: push(4628);
go to memory[1518]
1715 | rmem: r0 = memory[2732]
1716 | eq: if (r0 == 2623) { r0 == 1 } else { r0 == 0 }
1717 | set: r0 = 26725
1718 | call: push(4643);
go to memory[1518]
1719 | jmp: go to memory[4650]
1720 | set: r0 = 26731
1721 | call: push(4650);
go to memory[1518]
1722 | set: r0 = 26737
1723 | call: push(4655);
go to memory[1518]
1724 | call: push(4657);
go to memory[4660]
1725 | pop: r0 = pop();
1726 | ret: go to memory[pop()];
1727 | push: push(r0);
1728 | wmem: memory[3952] = 22
1729 | wmem: memory[3953] = 0
1730 | wmem: memory[3954] = 0
1731 | wmem: memory[3955] = 0
1732 | wmem: memory[3956] = 0
1733 | wmem: memory[3957] = 0
1734 | add: r0 = 2716 + 2
1735 | wmem: memory[r0] = 2623
1736 | pop: r0 = pop();
1737 | ret: go to memory[pop()];
1738 | push: push(r0);
1739 | add: r0 = 2716 + 2
1740 | rmem: r0 = memory[r0]
1741 | eq: if (r0 == 32767) { r0 == 1 } else { r0 == 0 }
1742 | set: r0 = 26824
1743 | call: push(4711);
go to memory[1518]
1744 | wmem: memory[2732] = 2578
1745 | wmem: memory[2733] = 2578
1746 | pop: r0 = pop();
1747 | ret: go to memory[pop()];
1748 | push: push(r0);
1749 | push: push(r1);
1750 | push: push(r2);
1751 | push: push(r3);
1752 | push: push(r0);
1753 | push: push(r1);
1754 | push: push(r2);
1755 | set: r0 = 28369
1756 | set: r1 = 1531
1757 | add: r2 = 22584 + 2859
1758 | call: push(4746);
go to memory[1458]
1759 | pop: r2 = pop();
1760 | pop: r1 = pop();
1761 | pop: r0 = pop();
1762 | set: r0 = 4242
1763 | set: r1 = 25866
1764 | set: r2 = 32767
1765 | set: r3 = 28397
1766 | call: push(4766);
go to memory[1841]
1767 | push: push(r0);
1768 | push: push(r1);
1769 | push: push(r2);
1770 | set: r0 = 28401
1771 | set: r1 = 1531
1772 | add: r2 = 19892 + 6964
1773 | call: push(4784);
go to memory[1458]
1774 | pop: r2 = pop();
1775 | pop: r1 = pop();
1776 | pop: r0 = pop();
1777 | pop: r3 = pop();
1778 | pop: r2 = pop();
1779 | pop: r1 = pop();
1780 | pop: r0 = pop();
1781 | ret: go to memory[pop()];
1782 | push: push(r0);
1783 | add: r0 = 2672 + 2
1784 | rmem: r0 = memory[r0]
1785 | jt: if (r0 != 0 { go to memory[4858] }
1786 | add: r0 = 2684 + 2
1787 | wmem: memory[r0] = 32767
1788 | add: r0 = 2672 + 2
1789 | wmem: memory[r0] = 32767
1790 | add: r0 = 2676 + 2
1791 | wmem: memory[r0] = 0
1792 | push: push(r0);
1793 | push: push(r1);
1794 | push: push(r2);
1795 | set: r0 = 28453
1796 | set: r1 = 1531
1797 | add: r2 = 3547 + 1312
1798 | call: push(4850);
go to memory[1458]
1799 | pop: r2 = pop();
1800 | pop: r1 = pop();
1801 | pop: r0 = pop();
1802 | jmp: go to memory[4882]
1803 | push: push(r0);
1804 | push: push(r1);
1805 | push: push(r2);
1806 | set: r0 = 28510
1807 | set: r1 = 1531
1808 | add: r2 = 415 + 7516
1809 | call: push(4876);
go to memory[1458]
1810 | pop: r2 = pop();
1811 | pop: r1 = pop();
1812 | pop: r0 = pop();
1813 | pop: r0 = pop();
1814 | ret: go to memory[pop()];
1815 | push: push(r0);
1816 | add: r0 = 2676 + 2
1817 | wmem: memory[r0] = 32767
1818 | add: r0 = 2680 + 2
1819 | wmem: memory[r0] = 0
1820 | push: push(r0);
1821 | push: push(r1);
1822 | push: push(r2);
1823 | set: r0 = 28569
1824 | set: r1 = 1531
1825 | add: r2 = 1728 + 9889
1826 | call: push(4919);
go to memory[1458]
1827 | pop: r2 = pop();
1828 | pop: r1 = pop();
1829 | pop: r0 = pop();
1830 | wmem: memory[2733] = 0
1831 | pop: r0 = pop();
1832 | ret: go to memory[pop()];
1833 | push: push(r0);
1834 | add: r0 = 2676 + 2
1835 | wmem: memory[r0] = 0
1836 | add: r0 = 2680 + 2
1837 | wmem: memory[r0] = 32767
1838 | push: push(r0);
1839 | push: push(r1);
1840 | push: push(r2);
1841 | set: r0 = 28595
1842 | set: r1 = 1531
1843 | add: r2 = 15889 + 6356
1844 | call: push(4965);
go to memory[1458]
1845 | pop: r2 = pop();
1846 | pop: r1 = pop();
1847 | pop: r0 = pop();
1848 | wmem: memory[2733] = 0
1849 | pop: r0 = pop();
1850 | ret: go to memory[pop()];
1851 | push: push(r2);
1852 | push: push(r3);
1853 | rmem: r2 = memory[2732]
1854 | eq: if (r2 == 2457) { r2 == 1 } else { r2 == 0 }
1855 | push: push(r0);
1856 | push: push(r1);
1857 | push: push(r2);
1858 | set: r0 = 28621
1859 | set: r1 = 1531
1860 | add: r2 = 8339 + 3287
1861 | call: push(5009);
go to memory[1458]
1862 | pop: r2 = pop();
1863 | pop: r1 = pop();
1864 | pop: r0 = pop();
1865 | jmp: go to memory[5336]
1866 | add: r2 = r0 + 2
1867 | wmem: memory[r2] = 32767
1868 | rmem: r2 = memory[2462]
1869 | add: r2 = r2 + 27095
1870 | add: r2 = r2 + 1
1871 | rmem: r2 = memory[r2]
1872 | add: r3 = 2457 + 1
1873 | rmem: r3 = memory[r3]
1874 | add: r3 = r3 + r2
1875 | add: r2 = r1 + 48
1876 | wmem: memory[r3] = r2
1877 | rmem: r2 = memory[2462]
1878 | add: r2 = r2 + 27101
1879 | add: r2 = r2 + 1
1880 | wmem: memory[r2] = r1
1881 | push: push(r0);
1882 | push: push(r0);
1883 | push: push(r1);
1884 | push: push(r2);
1885 | set: r0 = 28664
1886 | set: r1 = 1531
1887 | add: r2 = 1418 + 6113
1888 | call: push(5090);
go to memory[1458]
1889 | pop: r2 = pop();
1890 | pop: r1 = pop();
1891 | pop: r0 = pop();
1892 | pop: r0 = pop();
1893 | push: push(r0);
1894 | add: r2 = r0 + 0
1895 | rmem: r0 = memory[r2]
1896 | call: push(5109);
go to memory[1518]
1897 | pop: r0 = pop();
1898 | push: push(r0);
1899 | push: push(r0);
1900 | push: push(r1);
1901 | push: push(r2);
1902 | set: r0 = 28679
1903 | set: r1 = 1531
1904 | add: r2 = 14257 + 17220
1905 | call: push(5131);
go to memory[1458]
1906 | pop: r2 = pop();
1907 | pop: r1 = pop();
1908 | pop: r0 = pop();
1909 | pop: r0 = pop();
1910 | rmem: r2 = memory[2462]
1911 | add: r2 = r2 + 1
1912 | wmem: memory[2462] = r2
1913 | rmem: r3 = memory[27101]
1914 | eq: if (r2 == r3) { r3 == 1 } else { r3 == 0 }
1915 | set: r0 = 0
1916 | add: r1 = 27101 + 1
1917 | rmem: r1 = memory[r1]
1918 | add: r0 = r0 + r1
1919 | add: r1 = 27101 + 2
1920 | rmem: r1 = memory[r1]
1921 | add: r2 = 27101 + 3
1922 | rmem: r2 = memory[r2]
1923 | mult: r2 = r2 * r2
1924 | mult: r1 = r1 * r2
1925 | add: r0 = r0 + r1
1926 | add: r1 = 27101 + 4
1927 | rmem: r1 = memory[r1]
1928 | mult: r2 = r1 * r1
1929 | mult: r2 = r2 * r1
1930 | add: r0 = r0 + r2
1931 | add: r1 = 27101 + 5
1932 | rmem: r1 = memory[r1]
1933 | mult: r1 = r1 * 32767
1934 | add: r0 = r0 + r1
1935 | eq: if (r0 == 399) { r1 == 1 } else { r1 == 0 }
1936 | add: r2 = 2688 + 2
1937 | wmem: memory[r2] = 2457
1938 | add: r2 = 2692 + 2
1939 | wmem: memory[r2] = 2457
1940 | add: r2 = 2696 + 2
1941 | wmem: memory[r2] = 2457
1942 | add: r2 = 2700 + 2
1943 | wmem: memory[r2] = 2457
1944 | add: r2 = 2704 + 2
1945 | wmem: memory[r2] = 2457
1946 | wmem: memory[2462] = 0
1947 | set: r0 = 27095
1948 | set: r1 = 5341
1949 | call: push(5286);
go to memory[1458]
1950 | push: push(r0);
1951 | push: push(r1);
1952 | push: push(r2);
1953 | set: r0 = 28710
1954 | set: r1 = 1531
1955 | add: r2 = 7370 + 9114
1956 | call: push(5304);
go to memory[1458]
1957 | pop: r2 = pop();
1958 | pop: r1 = pop();
1959 | pop: r0 = pop();
1960 | jmp: go to memory[5336]
1961 | push: push(r0);
1962 | push: push(r1);
1963 | push: push(r2);
1964 | set: r0 = 28777
1965 | set: r1 = 1531
1966 | add: r2 = 2171 + 20463
1967 | call: push(5330);
go to memory[1458]
1968 | pop: r2 = pop();
1969 | pop: r1 = pop();
1970 | pop: r0 = pop();
1971 | pop: r3 = pop();
1972 | pop: r2 = pop();
1973 | ret: go to memory[pop()];
1974 | push: push(r2);
1975 | add: r2 = 2457 + 1
1976 | rmem: r2 = memory[r2]
1977 | add: r2 = r2 + r0
1978 | wmem: memory[r2] = 95
1979 | pop: r2 = pop();
1980 | ret: go to memory[pop()];
1981 | push: push(r0);
1982 | push: push(r1);
1983 | set: r0 = 2688
1984 | set: r1 = 2
1985 | call: push(5372);
go to memory[4977]
1986 | pop: r1 = pop();
1987 | pop: r0 = pop();
1988 | ret: go to memory[pop()];
1989 | push: push(r0);
1990 | push: push(r1);
1991 | set: r0 = 2692
1992 | set: r1 = 3
1993 | call: push(5389);
go to memory[4977]
1994 | pop: r1 = pop();
1995 | pop: r0 = pop();
1996 | ret: go to memory[pop()];
1997 | push: push(r0);
1998 | push: push(r1);
1999 | set: r0 = 2696
2000 | set: r1 = 5
2001 | call: push(5406);
go to memory[4977]
2002 | pop: r1 = pop();
2003 | pop: r0 = pop();
2004 | ret: go to memory[pop()];
2005 | push: push(r0);
2006 | push: push(r1);
2007 | set: r0 = 2700
2008 | set: r1 = 7
2009 | call: push(5423);
go to memory[4977]
2010 | pop: r1 = pop();
2011 | pop: r0 = pop();
2012 | ret: go to memory[pop()];
2013 | push: push(r0);
2014 | push: push(r1);
2015 | set: r0 = 2704
2016 | set: r1 = 9
2017 | call: push(5440);
go to memory[4977]
2018 | pop: r1 = pop();
2019 | pop: r0 = pop();
2020 | ret: go to memory[pop()];
2021 | push: push(r0);
2022 | push: push(r1);
2023 | push: push(r2);
2024 | jt: if (r7 == 0 { go to 5605 }
2025 | push: push(r0);
2026 | push: push(r1);
2027 | push: push(r2);
2028 | set: r0 = 28844
2029 | set: r1 = 1531
2030 | add: r2 = 1543 + 866
2031 | call: push(5472);
go to memory[1458]
2032 | pop: r2 = pop();
2033 | pop: r1 = pop();
2034 | pop: r0 = pop();
2035 | set: r0 = 4
2036 | set: r1 = 1
2037 | call: push(5491);
go to memory[6027]
2038 | eq: if (r0 == 6) { r1 == 1 } else { r1 == 0 }
2039 | push: push(r0);
2040 | push: push(r1);
2041 | push: push(r2);
2042 | set: r0 = 29014
2043 | set: r1 = 1531
2044 | add: r2 = 8025 + 7965
2045 | call: push(5516);
go to memory[1458]
2046 | pop: r2 = pop();
2047 | pop: r1 = pop();
2048 | pop: r0 = pop();
2049 | set: r0 = r7
2050 | set: r1 = 25866
2051 | set: r2 = 32767
2052 | push: push(r3);
2053 | set: r3 = 29241
2054 | call: push(5538);
go to memory[1841]
2055 | pop: r3 = pop();
2056 | push: push(r0);
2057 | push: push(r1);
2058 | push: push(r2);
2059 | set: r0 = 29245
2060 | set: r1 = 1531
2061 | add: r2 = 1211 + 23978
2062 | call: push(5558);
go to memory[1458]
2063 | pop: r2 = pop();
2064 | pop: r1 = pop();
2065 | pop: r0 = pop();
2066 | wmem: memory[2732] = 2498
2067 | wmem: memory[2733] = 0
2068 | add: r1 = 2708 + 2
2069 | wmem: memory[r1] = 32767
2070 | jmp: go to memory[5714]
2071 | push: push(r0);
2072 | push: push(r1);
2073 | push: push(r2);
2074 | set: r0 = 29400
2075 | set: r1 = 1531
2076 | add: r2 = 10577 + 19216
2077 | call: push(5597);
go to memory[1458]
2078 | pop: r2 = pop();
2079 | pop: r1 = pop();
2080 | pop: r0 = pop();
2081 | jmp: go to memory[5714]
2082 | push: push(r0);
2083 | push: push(r1);
2084 | push: push(r2);
2085 | set: r0 = 29545
2086 | set: r1 = 1531
2087 | add: r2 = 13726 + 9414
2088 | call: push(5623);
go to memory[1458]
2089 | pop: r2 = pop();
2090 | pop: r1 = pop();
2091 | pop: r0 = pop();
2092 | set: r0 = 0
2093 | add: r2 = 1 + 27101
2094 | rmem: r1 = memory[r2]
2095 | add: r0 = r0 + r1
2096 | mult: r0 = r0 * 31660
2097 | call: push(5649);
go to memory[2125]
2098 | rmem: r1 = memory[27101]
2099 | add: r1 = r1 + 27101
2100 | add: r2 = r2 + 1
2101 | gt: if (r2 > r1) { r1 == 1 } else { r1 == 0 }
2102 | set: r1 = 25866
2103 | set: r2 = 32767
2104 | push: push(r3);
2105 | set: r3 = 29663
2106 | call: push(5680);
go to memory[1841]
2107 | pop: r3 = pop();
2108 | push: push(r0);
2109 | push: push(r1);
2110 | push: push(r2);
2111 | set: r0 = 29667
2112 | set: r1 = 1531
2113 | add: r2 = 74 + 44
2114 | call: push(5700);
go to memory[1458]
2115 | pop: r2 = pop();
2116 | pop: r1 = pop();
2117 | pop: r0 = pop();
2118 | wmem: memory[2732] = 2488
2119 | wmem: memory[2733] = 0
2120 | jmp: go to memory[5714]
2121 | pop: r2 = pop();
2122 | pop: r1 = pop();
2123 | pop: r0 = pop();
2124 | ret: go to memory[pop()];
2125 | push: push(r0);
2126 | push: push(r1);
2127 | push: push(r2);
2128 | push: push(r3);
2129 | push: push(r0);
2130 | push: push(r1);
2131 | push: push(r2);
2132 | set: r0 = 29757
2133 | set: r1 = 1531
2134 | add: r2 = 2318 + 8533
2135 | call: push(5747);
go to memory[1458]
2136 | pop: r2 = pop();
2137 | pop: r1 = pop();
2138 | pop: r0 = pop();
2139 | rmem: r0 = memory[3955]
2140 | rmem: r1 = memory[3956]
2141 | call: push(5761);
go to memory[2125]
2142 | rmem: r1 = memory[3957]
2143 | call: push(5766);
go to memory[2125]
2144 | set: r1 = 25919
2145 | set: r2 = 4
2146 | push: push(r3);
2147 | set: r3 = 29942
2148 | call: push(5779);
go to memory[1841]
2149 | pop: r3 = pop();
2150 | push: push(r0);
2151 | push: push(r1);
2152 | push: push(r2);
2153 | set: r0 = 29946
2154 | set: r1 = 1531
2155 | add: r2 = 16156 + 6613
2156 | call: push(5799);
go to memory[1458]
2157 | pop: r2 = pop();
2158 | pop: r1 = pop();
2159 | pop: r0 = pop();
2160 | pop: r3 = pop();
2161 | pop: r2 = pop();
2162 | pop: r1 = pop();
2163 | pop: r0 = pop();
2164 | ret: go to memory[pop()];
2165 | out: printf(45);
2166 | out: printf(32);
2167 | call: push(5820);
go to memory[1518]
2168 | out: printf(10);
2169 | ret: go to memory[pop()];
2170 | push: push(r1);
2171 | push: push(r2);
2172 | set: r0 = 27381
2173 | set: r1 = 5846
2174 | set: r2 = 0
2175 | call: push(5838);
go to memory[1458]
2176 | set: r0 = r2
2177 | pop: r2 = pop();
2178 | pop: r1 = pop();
2179 | ret: go to memory[pop()];
2180 | push: push(r3);
2181 | push: push(r4);
2182 | rmem: r3 = memory[2732]
2183 | add: r4 = r0 + 2
2184 | rmem: r4 = memory[r4]
2185 | eq: if (r3 == r4) { r3 == 1 } else { r3 == 0 }
2186 | add: r2 = r2 + 1
2187 | pop: r4 = pop();
2188 | pop: r3 = pop();
2189 | ret: go to memory[pop()];
2190 | push: push(r0);
2191 | push: push(r1);
2192 | set: r0 = 27381
2193 | set: r1 = 5893
2194 | call: push(5888);
go to memory[1458]
2195 | pop: r1 = pop();
2196 | pop: r0 = pop();
2197 | ret: go to memory[pop()];
2198 | push: push(r3);
2199 | add: r3 = r0 + 2
2200 | rmem: r3 = memory[r3]
2201 | eq: if (r2 == r3) { r3 == 1 } else { r3 == 0 }
2202 | add: r0 = r0 + 0
2203 | rmem: r0 = memory[r0]
2204 | call: push(5918);
go to memory[5814]
2205 | pop: r3 = pop();
2206 | ret: go to memory[pop()];
2207 | push: push(r1);
2208 | push: push(r2);
2209 | set: r2 = r0
2210 | set: r0 = 27381
2211 | set: r1 = 5964
2212 | call: push(5936);
go to memory[1543]
2213 | eq: if (r0 == 32767) { r1 == 1 } else { r1 == 0 }
2214 | add: r1 = 27381 + r0
2215 | add: r1 = r1 + 1
2216 | rmem: r0 = memory[r1]
2217 | jmp: go to memory[5959]
2218 | set: r0 = 0
2219 | pop: r2 = pop();
2220 | pop: r1 = pop();
2221 | ret: go to memory[pop()];
2222 | push: push(r1);
2223 | set: r1 = r2
2224 | add: r0 = r0 + 0
2225 | rmem: r0 = memory[r0]
2226 | call: push(5978);
go to memory[1667]
2227 | pop: r1 = pop();
2228 | jt: if (r0 == 0 { go to 5989 }
2229 | set: r2 = r1
2230 | set: r1 = 32767
2231 | ret: go to memory[pop()];
2232 | push: push(r1);
2233 | push: push(r2);
2234 | add: r0 = r0 + 2
2235 | rmem: r0 = memory[r0]
2236 | jt: if (r0 == 0 { go to 6019 }
2237 | rmem: r1 = memory[2732]
2238 | eq: if (r0 == r1) { r1 == 1 } else { r1 == 0 }
2239 | set: r0 = 0
2240 | jmp: go to memory[6022]
2241 | set: r0 = 1
2242 | pop: r2 = pop();
2243 | pop: r1 = pop();
2244 | ret: go to memory[pop()];
2245 | jt: if (r0 != 0 { go to memory[6035] }
2246 | add: r0 = r1 + 1
2247 | ret: go to memory[pop()];
2248 | jt: if (r1 != 0 { go to memory[6048] }
2249 | add: r0 = r0 + 32767
2250 | set: r1 = r7
2251 | call: push(6047);
go to memory[6027]
2252 | ret: go to memory[pop()];
2253 | push: push(r0);
2254 | add: r1 = r1 + 32767
2255 | call: push(6056);
go to memory[6027]
2256 | set: r1 = r0
2257 | pop: r0 = pop();
2258 | add: r0 = r0 + 32767
2259 | call: push(6067);
go to memory[6027]
2260 | ret: go to memory[pop()];
2261 | mod: 84 = 101 % 115
2262 | mult: 8 = 99 * 111
2263 | pop: 0 = pop();
2264 | halt: 
2265 | halt: 
2266 | and: 0 = 0 and 0
2267 | halt: 
2268 | halt: 
2269 | halt: 
2270 | halt: 
2271 | halt: 
2272 | halt: 
2273 | halt: 
2274 | halt: 
2275 | halt: 
2276 | add: 70 = 111 + 111
2277 | jt: if (100 != 0 { go to memory[111] }
2278 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2279 | add: 70 = 111 + 111
2280 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2281 | add: 68 = 97 + 114
2282 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2283 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2284 | add: 68 = 97 + 114
2285 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2286 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2287 | add: 68 = 97 + 114
2288 | jmp: go to memory[98]
2289 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2290 | mod: 82 = 111 % 112
2291 | jt: if (99 == 0 { go to 111 }
2292 | eq: if (97 == 99) { 98 == 1 } else { 98 == 0 }
2293 | eq: if (111 == 119) { 100 == 1 } else { 100 == 0 }
2294 | mod: 77 = 111 % 115
2295 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2296 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2297 | mod: 77 = 111 % 115
2298 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2299 | mod: 77 = 111 % 115
2300 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2301 | jt: if (112 != 0 { go to memory[97] }
2302 | jt: if (80 != 0 { go to memory[97] }
2303 | jmp: go to memory[99]
2304 | jmp: go to memory[108]
2305 | jt: if (100 == 0 { go to 97 }
2306 | jt: if (80 != 0 { go to memory[97] }
2307 | jt: if (99 == 0 { go to 111 }
2308 | eq: if (97 == 99) { 98 == 1 } else { 98 == 0 }
2309 | rmem: 84 = memory[119]
2310 | jmp: go to memory[108]
2311 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2312 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2313 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2314 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2315 | rmem: 84 = memory[119]
2316 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2317 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2318 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2319 | rmem: 84 = memory[119]
2320 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2321 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2322 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2323 | rmem: 84 = memory[119]
2324 | mult: 10 = 84 * 104
2325 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2326 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2327 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2328 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2329 | rmem: 84 = memory[119]
2330 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2331 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2332 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2333 | rmem: 84 = memory[119]
2334 | mult: 10 = 84 * 104
2335 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2336 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2337 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2338 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2339 | rmem: 84 = memory[119]
2340 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2341 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2342 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2343 | rmem: 84 = memory[119]
2344 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2345 | rmem: 84 = memory[119]
2346 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2347 | rmem: 84 = memory[119]
2348 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2349 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2350 | and: 68 = 97 and 114
2351 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2352 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2353 | and: 68 = 97 and 114
2354 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2355 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2356 | and: 68 = 97 and 114
2357 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2358 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2359 | and: 68 = 97 and 114
2360 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2361 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2362 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2363 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2364 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2365 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2366 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2367 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2368 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2369 | mult: 10 = 95 * 32
2370 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2371 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2372 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2373 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2374 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2375 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2376 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2377 | eq: if (111 == 119) { 100 == 1 } else { 100 == 0 }
2378 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2379 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2380 | push: push(117);
2381 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2382 | push: push(117);
2383 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2384 | gt: if (117 > 105) { 82 == 1 } else { 82 == 0 }
2385 | eq: if (111 == 119) { 100 == 1 } else { 100 == 0 }
2386 | in: 83 = getchar();
2387 | jt: if (111 != 0 { go to memory[117] }
2388 | in: 83 = getchar();
2389 | jmp: go to memory[105]
2390 | gt: if (101 > 97) { 66 == 1 } else { 66 == 0 }
2391 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2392 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2393 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2394 | gt: if (101 > 97) { 66 == 1 } else { 66 == 0 }
2395 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2396 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2397 | gt: if (101 > 97) { 66 == 1 } else { 66 == 0 }
2398 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2399 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2400 | rmem: 84 = memory[114]
2401 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2402 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2403 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2404 | rmem: 84 = memory[114]
2405 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2406 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2407 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2408 | rmem: 84 = memory[114]
2409 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2410 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2411 | rmem: 84 = memory[114]
2412 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2413 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2414 | rmem: 84 = memory[114]
2415 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2416 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2417 | or: 84 = 114 or 111
2418 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2419 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2420 | or: 84 = 114 or 111
2421 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2422 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2423 | or: 84 = 114 or 111
2424 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2425 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2426 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2427 | in: 84 = getchar();
2428 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2429 | or: 84 = 114 or 111
2430 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2431 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2432 | mult: 86 = 97 * 117
2433 | mult: 10 = 84 * 104
2434 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2435 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2436 | mult: 86 = 97 * 117
2437 | mult: 10 = 84 * 104
2438 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2439 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2440 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2441 | mult: 86 = 97 * 117
2442 | mult: 10 = 84 * 104
2443 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2444 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2445 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2446 | mult: 86 = 97 * 117
2447 | mult: 10 = 84 * 104
2448 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2449 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2450 | gt: if (97 > 117) { 118 == 1 } else { 118 == 0 }
2451 | mult: 86 = 97 * 117
2452 | mult: 10 = 84 * 104
2453 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2454 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2455 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2456 | mult: 86 = 97 * 117
2457 | mult: 10 = 84 * 104
2458 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2459 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2460 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2461 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2462 | mult: 86 = 97 * 117
2463 | mult: 10 = 84 * 104
2464 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2465 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2466 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2467 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2468 | mult: 86 = 97 * 117
2469 | mult: 10 = 84 * 104
2470 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2471 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2472 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2473 | mult: 86 = 97 * 117
2474 | mult: 10 = 84 * 104
2475 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2476 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2477 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2478 | mult: 86 = 97 * 117
2479 | mult: 10 = 84 * 104
2480 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2481 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2482 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2483 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2484 | mult: 86 = 97 * 117
2485 | mult: 10 = 84 * 104
2486 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2487 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2488 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2489 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2490 | mult: 86 = 97 * 117
2491 | mult: 10 = 84 * 104
2492 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2493 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2494 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2495 | call: push(16793);
go to memory[86]
2496 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2497 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2498 | gt: if (111 > 117) { 115 == 1 } else { 115 == 0 }
2499 | mult: 86 = 97 * 117
2500 | mult: 10 = 84 * 104
2501 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2502 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2503 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2504 | mult: 86 = 97 * 117
2505 | mult: 10 = 84 * 104
2506 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2507 | eq: if (97 == 115) { 101 == 1 } else { 101 == 0 }
2508 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2509 | mult: 86 = 97 * 117
2510 | mult: 10 = 84 * 104
2511 | gt: if (111 > 114) { 110 == 1 } else { 110 == 0 }
2512 | eq: if (101 == 115) { 119 == 1 } else { 119 == 0 }
2513 | gt: if (97 > 117) { 86 == 1 } else { 86 == 0 }
2514 | gt: if (101 > 97) { 108 == 1 } else { 108 == 0 }
2515 | jt: if (102 != 0 { go to memory[111] }
2516 | eq: if (97 == 99) { 98 == 1 } else { 98 == 0 }
2517 | pop: 114 = pop();
2518 | mod: 105 = 110 % 118
2519 | call: push(17951);
go to memory[80]
2520 | pop: 114 = pop();
2521 | eq: if (97 == 105) { 119 == 1 } else { 119 == 0 }
2522 | eq: if (105 == 100) { 104 == 1 } else { 104 == 0 }
2523 | gt: if (97 > 116) { 101 == 1 } else { 101 == 0 }
2524 | halt: 
2525 | jmp: go to memory[116]
2526 | or: 101 = 109 or 112
2527 | jt: if (108 != 0 { go to memory[97] }
2528 | mod: 108 = 105 % 116
2529 | pop: 99 = pop();
2530 | jt: if (114 == 0 { go to 101 }
2531 | or: 99 = 111 or 114
2532 | mult: 115 = 104 * 105
2533 | and: 99 = 111 and 110
2534 | add: 98 = 108 + 117
2535 | mult: 116 = 101 * 108
2536 | or: 98 = 117 or 115
2537 | pop: 111 = pop();
2538 | jmp: go to memory[109]
2539 | and: 115 = 116 and 114
2540 | mult: 10 = 82 * 101
2541 | mult: 112 = 114 * 101
2542 | mult: 105 = 110 * 116
2543 | mult: 112 = 117 * 114
2544 | mult: 105 = 110 * 116
2545 | mult: 70 = 117 * 114
2546 | mult: 116 = 104 * 105
2547 | mult: 114 = 101 * 103
2548 | mult: 10 = 65 * 32
2549 | mult: 100 = 101 * 115
2550 | mult: 109 = 105 * 110
2551 | mult: 104 = 97 * 115
2552 | mult: 115 = 104 * 111
2553 | mult: 10 = 84 * 104
2554 | mult: 101 = 110 * 101
2555 | mult: 99 = 111 * 110
2556 | mult: 73 = 102 * 32
2557 | mult: 108 = 111 * 99
2558 | mult: 105 = 116 * 115
2559 | mult: 116 = 104 * 101
2560 | mult: 101 = 120 * 97
2561 | mult: 10 = 84 * 104
2562 | mult: 99 = 111 * 109
2563 | mult: 115 = 99 * 97
2564 | mult: 121 = 101 * 97
2565 | mult: 10 = 73 * 102
2566 | mult: 104 = 97 * 110
2567 | mult: 114 = 101 * 105
2568 | mult: 118 = 101 * 114
2569 | mult: 104 = 97 * 118
2570 | mult: 10 = 84 * 104
2571 | mult: 98 = 121 * 112
2572 | mult: 97 = 110 * 111
2573 | mult: 110 = 111 * 119
2574 | mult: 10 = 79 * 102
2575 | jt: if (106 != 0 { go to memory[111] }
2576 | mult: 10 = 68 * 97
2577 | mult: 10 = 68 * 97
2578 | mult: 10 = 68 * 97
2579 | mult: 10 = 68 * 97
2580 | mult: 10 = 68 * 97
2581 | mult: 10 = 68 * 97
2582 | mult: 10 = 68 * 97
2583 | mult: 10 = 68 * 97
2584 | mult: 10 = 68 * 97
2585 | mult: 10 = 68 * 97
2586 | mult: 10 = 68 * 97
2587 | mult: 10 = 68 * 97
2588 | push: push(103);
2589 | eq: if (111 == 111) { 108 == 1 } else { 108 == 0 }
2590 | eq: if (101 == 108) { 104 == 1 } else { 104 == 0 }
2591 | pop: 105 = pop();
2592 | eq: if (97 == 107) { 116 == 1 } else { 116 == 0 }
2593 | eq: if (114 == 111) { 100 == 1 } else { 100 == 0 }
2594 | pop: 117 = pop();
2595 | halt: 
2596 | halt: 
2597 | halt: 
2598 | halt: 
2599 | halt: 
2600 | halt: 
2601 | halt: 
2602 | halt: 
2603 | halt: 
2604 | halt: 
2605 | halt: 
2606 | halt: 
2607 | halt: 
2608 | halt: 
2609 | halt: 
2610 | halt: 
2611 | halt: 
2612 | halt: 
2613 | halt: 
2614 | halt: 
2615 | halt: 
2616 | halt: 
2617 | halt: 
2618 | halt: 
2619 | halt: 
2620 | halt: 
2621 | halt: 
2622 | halt: 
2623 | halt: 
2624 | halt: 
2625 | halt: 
2626 | halt: 
2627 | halt: 
2628 | gt: if (114 > 101) { 103 == 1 } else { 103 == 0 }
2629 | pop: 114 = pop();
2630 | jmp: go to memory[121]
2631 | mult: 10 = 32 * 65
2632 | mult: 10 = 43 * 116
2633 | mult: 10 = 7 * 65
2634 | gt: if (101 > 97) { 108 == 1 } else { 108 == 0 }
2635 | gt: if (110 > 116) { 101 == 1 } else { 101 == 0 }
2636 | mult: 10 = 26 * 84
2637 | mult: 48 = 7586 * 7582
2638 | push: push(6336);
2639 | push: push(2327);
2640 | set: 6435 = 1
2641 | push: push(6585);
2642 | push: push(2332);
2643 | push: push(6699);
2644 | push: push(2337);
2645 | push: push(6909);
2646 | push: push(2342);
2647 | push: push(7056);
2648 | push: push(2347);
2649 | set: 7265 = 1
2650 | push: push(7492);
2651 | push: push(2362);
2652 | set: 7611 = 1
2653 | push: push(7786);
2654 | push: push(2352);
2655 | pop: 7984 = pop();
2656 | pop: 2362 = pop();
2657 | push: push(8015);
2658 | push: push(8149);
2659 | push: push(2427);
2660 | gt: if (8310 > 8316) { 8303 == 1 } else { 8303 == 0 }
2661 | gt: if (2382 > 2387) { 2367 == 1 } else { 2367 == 0 }
2662 | pop: 8404 = pop();
2663 | pop: 2387 = pop();
2664 | pop: 8493 = pop();
2665 | pop: 2377 = pop();
2666 | eq: if (8657 == 8663) { 8651 == 1 } else { 8651 == 0 }
2667 | eq: if (2392 == 2377) { 2407 == 1 } else { 2407 == 0 }
2668 | pop: 8745 = pop();
2669 | pop: 2397 = pop();
2670 | eq: if (8916 == 8922) { 8910 == 1 } else { 8910 == 0 }
2671 | eq: if (2382 == 2387) { 2412 == 1 } else { 2412 == 0 }
2672 | pop: 9004 = pop();
2673 | pop: 2387 = pop();
2674 | set: 9093 = 1
2675 | set: 9170 = 1
2676 | push: push(9247);
2677 | push: push(2387);
2678 | push: push(9387);
2679 | push: push(2432);
2680 | push: push(9445);
2681 | push: push(2427);
2682 | push: push(9503);
2683 | push: push(2432);
2684 | push: push(9627);
2685 | push: push(2437);
2686 | push: push(9892);
2687 | push: push(2442);
2688 | push: push(10091);
2689 | push: push(2457);
2690 | eq: if (10409 == 10415) { 10403 == 1 } else { 10403 == 0 }
2691 | eq: if (2452 == 2468) { 2463 == 1 } else { 2463 == 0 }
2692 | gt: if (271 > 275) { 267 == 1 } else { 267 == 0 }
2693 | gt: if (0 > 0) { 0 == 1 } else { 0 == 0 }
2694 | halt: 
2695 | set: 10599 = 1
2696 | push: push(10750);
2697 | push: push(2473);
2698 | set: 10889 = 1
2699 | push: push(11078);
2700 | push: push(2483);
2701 | set: 11262 = 1
2702 | set: 11544 = 1
2703 | set: 11719 = 1
2704 | pop: 11903 = pop();
2705 | pop: 2503 = pop();
2706 | push: push(12188);
2707 | push: push(2498);
2708 | push: push(12448);
2709 | push: push(2498);
2710 | pop: 12674 = pop();
2711 | pop: 2523 = pop();
2712 | pop: 12830 = pop();
2713 | pop: 2523 = pop();
2714 | push: push(13094);
2715 | push: push(2528);
2716 | push: push(13408);
2717 | push: push(2533);
2718 | push: push(13682);
2719 | push: push(2538);
2720 | push: push(13929);
2721 | push: push(2543);
2722 | push: push(14078);
2723 | push: push(2548);
2724 | pop: 14427 = pop();
2725 | pop: 2558 = pop();
2726 | set: 14629 = 1
2727 | push: push(14753);
2728 | push: push(2623);
2729 | push: push(14905);
2730 | push: push(2568);
2731 | pop: 15058 = pop();
2732 | pop: 2573 = pop();
2733 | pop: 15214 = pop();
2734 | pop: 2578 = pop();
2735 | pop: 15488 = pop();
2736 | pop: 2598 = pop();
2737 | pop: 15647 = pop();
2738 | pop: 2563 = pop();
2739 | eq: if (15810 == 15815) { 15804 == 1 } else { 15804 == 0 }
2740 | eq: if (2593 == 2608) { 2568 == 1 } else { 2568 == 0 }
2741 | eq: if (15975 == 15980) { 15969 == 1 } else { 15969 == 0 }
2742 | eq: if (2598 == 2613) { 2573 == 1 } else { 2573 == 0 }
2743 | pop: 16131 = pop();
2744 | pop: 2578 = pop();
2745 | pop: 16288 = pop();
2746 | pop: 2583 = pop();
2747 | eq: if (16453 == 16458) { 16447 == 1 } else { 16447 == 0 }
2748 | eq: if (2613 == 2628) { 2588 == 1 } else { 2588 == 0 }
2749 | eq: if (16615 == 16620) { 16609 == 1 } else { 16609 == 0 }
2750 | eq: if (2618 == 2633) { 2593 == 1 } else { 2593 == 0 }
2751 | pop: 16774 = pop();
2752 | pop: 2598 = pop();
2753 | pop: 16954 = pop();
2754 | pop: 2603 = pop();
2755 | pop: 17111 = pop();
2756 | pop: 2608 = pop();
2757 | pop: 17269 = pop();
2758 | pop: 2613 = pop();
2759 | push: push(17425);
2760 | push: push(2618);
2761 | set: 17655 = 1
2762 | push: push(17793);
2763 | push: push(2653);
2764 | push: push(17933);
2765 | push: push(2658);
2766 | pop: 18041 = pop();
2767 | pop: 2663 = pop();
2768 | halt: 
2769 | halt: 
2770 | wmem: memory[2668] = 2672
2771 | jt: if (25943 != 0 { go to memory[25946] }
2772 | jt: if (3245 != 0 { go to memory[2964] }
2773 | call: push(27416);
go to memory[13804]
2774 | wmem: memory[6454] = 6400
2775 | jt: if (23103 != 0 { go to memory[23050] }
2776 | add: 32291 = 32277 + 32264
2777 | pop: 7174 = pop();
2778 | pop: 25220 = pop();
2779 | not: 7474 = ~7428
2780 | pop: 16822 = pop();
2781 | pop: 18634 = pop();
2782 | wmem: memory[2] = 19
2783 | eq: if (23 == 86) { 86 == 1 } else { 86 == 0 }
2784 | out: printf(1);
2785 | out: printf(24);
2786 | push: push(5);
2787 | rmem: 25 = memory[3]
2788 | wmem: memory[31] = 24
2789 | ret: go to memory[pop()];
2790 | rmem: 25 = memory[3]
2791 | eq: if (19 == 26) { 5 == 1 } else { 5 == 0 }
2792 | in: 23 = getchar();
2793 | gt: if (26 > 31) { 25 == 1 } else { 25 == 0 }
2794 | call: push(29725);
go to memory[4]
2795 | pop: 24 = pop();
2796 | ret: go to memory[pop()];
2797 | ret: go to memory[pop()];
2798 | push: push(2);
2799 | out: printf(86);
2800 | ret: go to memory[pop()];
2801 | gt: if (4 > 31) { 25 == 1 } else { 25 == 0 }
2802 | push: push(19);
2803 | ret: go to memory[pop()];
2804 | pop: 7905 = pop();
2805 | halt: 
2806 | halt: 
2807 | halt: 
2808 | halt: 
2809 | halt: 
2810 | halt: 
2811 | halt: 
2812 | halt: 
2813 | halt: 
2814 | halt: 
2815 | halt: 
2816 | halt: 
2817 | halt: 
2818 | halt: 
2819 | halt: 
2820 | halt: 
2821 | halt: 
2822 | halt: 
2823 | halt: 
2824 | halt: 
2825 | halt: 
2826 | halt: 
2827 | halt: 
2828 | halt: 
2829 | halt: 
2830 | halt: 
2831 | halt: 
2832 | halt: 
2833 | halt: 
2834 | halt: 
2835 | halt: 
2836 | halt: 
2837 | halt: 
2838 | halt: 
2839 | halt: 
2840 | halt: 
2841 | halt: 
2842 | halt: 
2843 | halt: 
2844 | halt: 
2845 | halt: 
2846 | halt: 
2847 | halt: 
2848 | halt: 
2849 | halt: 
2850 | halt: 
2851 | halt: 
2852 | halt: 
2853 | halt: 
2854 | halt: 
2855 | halt: 
2856 | halt: 
2857 | halt: 
2858 | halt: 
2859 | halt: 
2860 | halt: 
2861 | halt: 
2862 | halt: 
2863 | halt: 
2864 | halt: 
2865 | halt: 
2866 | halt: 
2867 | halt: 
2868 | halt: 
2869 | halt: 
2870 | halt: 
2871 | halt: 
2872 | halt: 
2873 | halt: 
2874 | halt: 
2875 | halt: 
2876 | halt: 
2877 | halt: 
2878 | halt: 
2879 | halt: 
2880 | halt: 
2881 | halt: 
2882 | halt: 
2883 | halt: 
2884 | halt: 
2885 | halt: 
2886 | halt: 
2887 | halt: 
2888 | halt: 
2889 | halt: 
2890 | halt: 
2891 | halt: 
2892 | halt: 
2893 | halt: 
2894 | halt: 
2895 | halt: 
2896 | halt: 
2897 | halt: 
2898 | halt: 
2899 | halt: 
2900 | halt: 
2901 | halt: 
2902 | halt: 
2903 | halt: 
2904 | halt: 
2905 | halt: 
2906 | halt: 
2907 | halt: 
2908 | halt: 
2909 | halt: 
2910 | halt: 
2911 | halt: 
2912 | halt: 
2913 | halt: 
2914 | halt: 
2915 | halt: 
2916 | halt: 
2917 | halt: 
2918 | halt: 
2919 | halt: 
2920 | halt: 
2921 | halt: 
2922 | halt: 
2923 | halt: 
2924 | halt: 
2925 | halt: 
2926 | halt: 
2927 | halt: 
2928 | halt: 
2929 | halt: 
2930 | halt: 
2931 | halt: 
2932 | halt: 
2933 | halt: 
2934 | halt: 
2935 | halt: 
2936 | halt: 
2937 | halt: 
2938 | halt: 
2939 | halt: 
2940 | halt: 
2941 | halt: 
2942 | halt: 
2943 | halt: 
2944 | halt: 
2945 | halt: 
2946 | halt: 
2947 | halt: 
2948 | halt: 
2949 | halt: 
2950 | halt: 
2951 | halt: 
2952 | halt: 
2953 | halt: 
2954 | halt: 
2955 | halt: 
2956 | halt: 
2957 | halt: 
2958 | halt: 
2959 | halt: 
2960 | halt: 
2961 | halt: 
2962 | halt: 
2963 | halt: 
2964 | halt: 
2965 | halt: 
2966 | halt: 
2967 | halt: 
2968 | halt: 
2969 | halt: 
2970 | halt: 
2971 | halt: 
2972 | halt: 
2973 | halt: 
2974 | halt: 
2975 | halt: 
2976 | halt: 
2977 | halt: 
2978 | halt: 
2979 | halt: 
2980 | halt: 
2981 | halt: 
2982 | halt: 
2983 | halt: 
2984 | halt: 
2985 | halt: 
2986 | halt: 
2987 | halt: 
2988 | halt: 
2989 | halt: 
2990 | halt: 
2991 | halt: 
2992 | halt: 
2993 | halt: 
2994 | halt: 
2995 | halt: 
2996 | halt: 
2997 | halt: 
2998 | halt: 
2999 | halt: 
3000 | halt: 
3001 | halt: 
3002 | halt: 
3003 | halt: 
3004 | halt: 
3005 | halt: 
3006 | halt: 
3007 | halt: 
3008 | halt: 
3009 | halt: 
3010 | halt: 
3011 | halt: 
3012 | halt: 
3013 | halt: 
3014 | halt: 
3015 | halt: 
3016 | halt: 
3017 | halt: 
3018 | halt: 
3019 | halt: 
3020 | halt: 
3021 | halt: 
3022 | halt: 
3023 | halt: 
3024 | halt: 
3025 | halt: 
3026 | halt: 
3027 | halt: 
3028 | halt: 
3029 | halt: 
3030 | halt: 
3031 | halt: 
3032 | halt: 
3033 | halt: 
3034 | halt: 
3035 | halt: 
3036 | halt: 
3037 | halt: 
3038 | halt: 
3039 | halt: 
3040 | halt: 
3041 | halt: 
3042 | halt: 
3043 | halt: 
3044 | halt: 
3045 | halt: 
3046 | halt: 
3047 | halt: 
3048 | halt: 
3049 | halt: 
3050 | halt: 
3051 | halt: 
3052 | halt: 
3053 | halt: 
3054 | halt: 
3055 | halt: 
3056 | halt: 
3057 | halt: 
3058 | halt: 
3059 | halt: 
3060 | halt: 
3061 | halt: 
3062 | halt: 
3063 | halt: 
3064 | halt: 
3065 | halt: 
3066 | halt: 
3067 | halt: 
3068 | halt: 
3069 | halt: 
3070 | halt: 
3071 | halt: 
3072 | halt: 
3073 | halt: 
3074 | halt: 
3075 | halt: 
3076 | halt: 
3077 | halt: 
3078 | halt: 
3079 | halt: 
3080 | halt: 
3081 | halt: 
3082 | halt: 
3083 | halt: 
3084 | halt: 
3085 | halt: 
3086 | halt: 
3087 | halt: 
3088 | halt: 
3089 | halt: 
3090 | halt: 
3091 | halt: 
3092 | halt: 
3093 | halt: 
3094 | halt: 
3095 | halt: 
3096 | halt: 
3097 | halt: 
3098 | halt: 
3099 | halt: 
3100 | halt: 
3101 | halt: 
3102 | halt: 
3103 | halt: 
3104 | halt: 
3105 | halt: 
3106 | halt: 
3107 | halt: 
3108 | halt: 
3109 | halt: 
3110 | halt: 
3111 | halt: 
3112 | halt: 
3113 | halt: 
3114 | halt: 
3115 | halt: 
3116 | halt: 
3117 | halt: 
3118 | halt: 
3119 | halt: 
3120 | halt: 
3121 | halt: 
3122 | halt: 
3123 | halt: 
3124 | halt: 
3125 | halt: 
3126 | halt: 
3127 | halt: 
3128 | halt: 
3129 | halt: 
3130 | halt: 
3131 | halt: 
3132 | halt: 
3133 | halt: 
3134 | halt: 
3135 | halt: 
3136 | halt: 
3137 | halt: 
3138 | halt: 
3139 | halt: 
3140 | halt: 
3141 | halt: 
3142 | halt: 
3143 | halt: 
3144 | halt: 
3145 | halt: 
3146 | halt: 
3147 | halt: 
3148 | halt: 
3149 | halt: 
3150 | halt: 
3151 | halt: 
3152 | halt: 
3153 | halt: 
3154 | halt: 
3155 | halt: 
3156 | halt: 
3157 | halt: 
3158 | halt: 
3159 | halt: 
3160 | halt: 
3161 | halt: 
3162 | halt: 
3163 | halt: 
3164 | halt: 
3165 | halt: 
3166 | halt: 
3167 | halt: 
3168 | halt: 
3169 | halt: 
3170 | halt: 
3171 | halt: 
3172 | halt: 
3173 | halt: 
3174 | halt: 
3175 | halt: 
3176 | halt: 
3177 | halt: 
3178 | halt: 
3179 | halt: 
3180 | halt: 
3181 | halt: 
3182 | halt: 
3183 | halt: 
3184 | halt: 
3185 | halt: 
3186 | halt: 
3187 | halt: 
3188 | halt: 
3189 | halt: 
3190 | halt: 
3191 | halt: 
3192 | halt: 
3193 | halt: 
3194 | halt: 
3195 | halt: 
3196 | halt: 
3197 | halt: 
3198 | halt: 
3199 | halt: 
3200 | halt: 
3201 | halt: 
3202 | halt: 
3203 | halt: 
3204 | halt: 
3205 | halt: 
3206 | halt: 
3207 | halt: 
3208 | halt: 
3209 | halt: 
3210 | halt: 
3211 | halt: 
3212 | halt: 
3213 | halt: 
3214 | halt: 
3215 | halt: 
3216 | halt: 
3217 | halt: 
3218 | halt: 
3219 | halt: 
3220 | halt: 
3221 | halt: 
3222 | halt: 
3223 | halt: 
3224 | halt: 
3225 | halt: 
3226 | halt: 
3227 | halt: 
3228 | halt: 
3229 | halt: 
3230 | halt: 
3231 | halt: 
3232 | halt: 
3233 | halt: 
3234 | halt: 
3235 | halt: 
3236 | halt: 
3237 | halt: 
3238 | halt: 
3239 | halt: 
3240 | halt: 
3241 | halt: 
3242 | halt: 
3243 | halt: 
3244 | halt: 
3245 | halt: 
3246 | halt: 
3247 | halt: 
3248 | halt: 
3249 | halt: 
3250 | halt: 
3251 | halt: 
3252 | halt: 
3253 | halt: 
3254 | halt: 
3255 | halt: 
3256 | halt: 
3257 | halt: 
3258 | halt: 
3259 | halt: 
3260 | halt: 
3261 | halt: 
3262 | halt: 
3263 | halt: 
3264 | halt: 
3265 | halt: 
3266 | halt: 
3267 | halt: 
3268 | halt: 
3269 | halt: 
3270 | halt: 
3271 | halt: 
3272 | halt: 
3273 | halt: 
3274 | halt: 
3275 | halt: 
3276 | halt: 
3277 | halt: 
3278 | halt: 
3279 | halt: 
3280 | halt: 
3281 | halt: 
3282 | halt: 
3283 | halt: 
3284 | halt: 
3285 | halt: 
3286 | halt: 
3287 | halt: 
3288 | halt: 
3289 | halt: 
3290 | halt: 
3291 | halt: 
3292 | halt: 
3293 | halt: 
3294 | halt: 
3295 | halt: 
3296 | halt: 
3297 | halt: 
3298 | halt: 
3299 | halt: 
3300 | halt: 
3301 | halt: 
3302 | halt: 
3303 | halt: 
3304 | halt: 
3305 | halt: 
3306 | halt: 
3307 | halt: 
3308 | halt: 
3309 | halt: 
3310 | halt: 
3311 | halt: 
3312 | halt: 
3313 | halt: 
3314 | halt: 
3315 | halt: 
3316 | halt: 
3317 | halt: 
3318 | halt: 
3319 | halt: 
3320 | halt: 
3321 | halt: 
3322 | halt: 
3323 | halt: 
3324 | halt: 
3325 | halt: 
3326 | halt: 
3327 | halt: 
3328 | halt: 
3329 | halt: 
3330 | halt: 
3331 | halt: 
3332 | halt: 
3333 | halt: 
3334 | halt: 
3335 | halt: 
3336 | halt: 
3337 | halt: 
3338 | halt: 
3339 | halt: 
3340 | halt: 
3341 | halt: 
3342 | halt: 
3343 | halt: 
3344 | halt: 
3345 | halt: 
3346 | halt: 
3347 | halt: 
3348 | halt: 
3349 | halt: 
3350 | halt: 
3351 | halt: 
3352 | halt: 
3353 | halt: 
3354 | halt: 
3355 | halt: 
3356 | halt: 
3357 | halt: 
3358 | halt: 
3359 | halt: 
3360 | halt: 
3361 | halt: 
3362 | halt: 
3363 | halt: 
3364 | halt: 
3365 | halt: 
3366 | halt: 
3367 | halt: 
3368 | halt: 
3369 | halt: 
3370 | halt: 
3371 | halt: 
3372 | halt: 
3373 | halt: 
3374 | halt: 
3375 | halt: 
3376 | halt: 
3377 | halt: 
3378 | halt: 
3379 | halt: 
3380 | halt: 
3381 | halt: 
3382 | halt: 
3383 | halt: 
3384 | halt: 
3385 | halt: 
3386 | halt: 
3387 | halt: 
3388 | halt: 
3389 | halt: 
3390 | halt: 
3391 | halt: 
3392 | halt: 
3393 | halt: 
3394 | halt: 
3395 | halt: 
3396 | halt: 
3397 | halt: 
3398 | halt: 
3399 | halt: 
3400 | halt: 
3401 | halt: 
3402 | halt: 
3403 | halt: 
3404 | halt: 
3405 | halt: 
3406 | halt: 
3407 | halt: 
3408 | halt: 
3409 | halt: 
3410 | halt: 
3411 | halt: 
3412 | halt: 
3413 | halt: 
3414 | halt: 
3415 | halt: 
3416 | halt: 
3417 | halt: 
3418 | halt: 
3419 | halt: 
3420 | halt: 
3421 | halt: 
3422 | halt: 
3423 | halt: 
3424 | halt: 
3425 | halt: 
3426 | halt: 
3427 | halt: 
3428 | halt: 
3429 | halt: 
3430 | halt: 
3431 | halt: 
3432 | halt: 
3433 | halt: 
3434 | halt: 
3435 | halt: 
3436 | halt: 
3437 | halt: 
3438 | halt: 
3439 | halt: 
3440 | halt: 
3441 | halt: 
3442 | halt: 
3443 | halt: 
3444 | halt: 
3445 | halt: 
3446 | halt: 
3447 | halt: 
3448 | halt: 
3449 | halt: 
3450 | halt: 
3451 | halt: 
3452 | halt: 
3453 | halt: 
3454 | halt: 
3455 | halt: 
3456 | halt: 
3457 | halt: 
3458 | halt: 
3459 | halt: 
3460 | halt: 
3461 | halt: 
3462 | halt: 
3463 | halt: 
3464 | halt: 
3465 | halt: 
3466 | halt: 
3467 | halt: 
3468 | halt: 
3469 | halt: 
3470 | halt: 
3471 | halt: 
3472 | halt: 
3473 | halt: 
3474 | halt: 
3475 | halt: 
3476 | halt: 
3477 | halt: 
3478 | halt: 
3479 | halt: 
3480 | halt: 
3481 | halt: 
3482 | halt: 
3483 | halt: 
3484 | halt: 
3485 | halt: 
3486 | halt: 
3487 | halt: 
3488 | halt: 
3489 | halt: 
3490 | halt: 
3491 | halt: 
3492 | halt: 
3493 | halt: 
3494 | halt: 
3495 | halt: 
3496 | halt: 
3497 | halt: 
3498 | halt: 
3499 | halt: 
3500 | halt: 
3501 | halt: 
3502 | halt: 
3503 | halt: 
3504 | halt: 
3505 | halt: 
3506 | halt: 
3507 | halt: 
3508 | halt: 
3509 | halt: 
3510 | halt: 
3511 | halt: 
3512 | halt: 
3513 | halt: 
3514 | halt: 
3515 | halt: 
3516 | halt: 
3517 | halt: 
3518 | halt: 
3519 | halt: 
3520 | halt: 
3521 | halt: 
3522 | halt: 
3523 | halt: 
3524 | halt: 
3525 | halt: 
3526 | halt: 
3527 | halt: 
3528 | halt: 
3529 | halt: 
3530 | halt: 
3531 | halt: 
3532 | halt: 
3533 | halt: 
3534 | halt: 
3535 | halt: 
3536 | halt: 
3537 | halt: 
3538 | halt: 
3539 | halt: 
3540 | halt: 
3541 | halt: 
3542 | halt: 
3543 | halt: 
3544 | halt: 
3545 | halt: 
3546 | halt: 
3547 | halt: 
3548 | halt: 
3549 | halt: 
3550 | halt: 
3551 | halt: 
3552 | halt: 
3553 | halt: 
3554 | halt: 
3555 | halt: 
3556 | halt: 
3557 | halt: 
3558 | halt: 
3559 | halt: 
3560 | halt: 
3561 | halt: 
3562 | halt: 
3563 | halt: 
3564 | halt: 
3565 | halt: 
3566 | halt: 
3567 | halt: 
3568 | halt: 
3569 | halt: 
3570 | halt: 
3571 | halt: 
3572 | halt: 
3573 | halt: 
3574 | halt: 
3575 | halt: 
3576 | halt: 
3577 | halt: 
3578 | halt: 
3579 | halt: 
3580 | halt: 
3581 | halt: 
3582 | halt: 
3583 | halt: 
3584 | halt: 
3585 | halt: 
3586 | halt: 
3587 | halt: 
3588 | halt: 
3589 | halt: 
3590 | halt: 
3591 | halt: 
3592 | halt: 
3593 | halt: 
3594 | halt: 
3595 | halt: 
3596 | halt: 
3597 | halt: 
3598 | halt: 
3599 | halt: 
3600 | halt: 
3601 | halt: 
3602 | halt: 
3603 | halt: 
3604 | halt: 
3605 | halt: 
3606 | halt: 
3607 | halt: 
3608 | halt: 
3609 | halt: 
3610 | halt: 
3611 | halt: 
3612 | halt: 
3613 | halt: 
3614 | halt: 
3615 | halt: 
3616 | halt: 
3617 | halt: 
3618 | halt: 
3619 | halt: 
3620 | halt: 
3621 | halt: 
3622 | halt: 
3623 | halt: 
3624 | halt: 
3625 | halt: 
3626 | halt: 
3627 | halt: 
3628 | halt: 
3629 | halt: 
3630 | halt: 
3631 | halt: 
3632 | halt: 
3633 | halt: 
3634 | halt: 
3635 | halt: 
3636 | halt: 
3637 | halt: 
3638 | halt: 
3639 | halt: 
3640 | halt: 
3641 | halt: 
3642 | halt: 
3643 | halt: 
3644 | halt: 
3645 | halt: 
3646 | halt: 
3647 | halt: 
3648 | halt: 
3649 | halt: 
3650 | halt: 
3651 | halt: 
3652 | halt: 
3653 | halt: 
3654 | halt: 
3655 | halt: 
3656 | halt: 
3657 | halt: 
3658 | halt: 
3659 | halt: 
3660 | halt: 
3661 | halt: 
3662 | halt: 
3663 | halt: 
3664 | halt: 
3665 | halt: 
3666 | halt: 
3667 | halt: 
3668 | halt: 
3669 | halt: 
3670 | halt: 
3671 | halt: 
3672 | halt: 
3673 | halt: 
3674 | halt: 
3675 | halt: 
3676 | halt: 
3677 | halt: 
3678 | halt: 
3679 | halt: 
3680 | halt: 
3681 | halt: 
3682 | halt: 
3683 | halt: 
3684 | halt: 
3685 | halt: 
3686 | halt: 
3687 | halt: 
3688 | halt: 
3689 | halt: 
3690 | halt: 
3691 | halt: 
3692 | halt: 
3693 | halt: 
3694 | halt: 
3695 | halt: 
3696 | halt: 
3697 | halt: 
3698 | halt: 
3699 | halt: 
3700 | halt: 
3701 | halt: 
3702 | halt: 
3703 | halt: 
3704 | halt: 
3705 | halt: 
3706 | halt: 
3707 | halt: 
3708 | halt: 
3709 | halt: 
3710 | halt: 
3711 | halt: 
3712 | halt: 
3713 | halt: 
3714 | halt: 
3715 | halt: 
3716 | halt: 
3717 | halt: 
3718 | halt: 
3719 | halt: 
3720 | halt: 
3721 | halt: 
3722 | halt: 
3723 | halt: 
3724 | halt: 
3725 | halt: 
3726 | halt: 
3727 | halt: 
3728 | halt: 
3729 | halt: 
3730 | halt: 
3731 | halt: 
3732 | halt: 
3733 | halt: 
3734 | halt: 
3735 | halt: 
3736 | halt: 
3737 | halt: 
3738 | halt: 
3739 | halt: 
3740 | halt: 
3741 | halt: 
3742 | halt: 
3743 | halt: 
3744 | halt: 
3745 | halt: 
3746 | halt: 
3747 | halt: 
3748 | halt: 
3749 | halt: 
3750 | halt: 
3751 | halt: 
3752 | halt: 
3753 | halt: 
3754 | halt: 
3755 | halt: 
3756 | halt: 
3757 | halt: 
3758 | halt: 
3759 | halt: 
3760 | halt: 
3761 | halt: 
3762 | halt: 
3763 | halt: 
3764 | halt: 
3765 | halt: 
3766 | halt: 
3767 | halt: 
3768 | halt: 
3769 | halt: 
3770 | halt: 
3771 | halt: 
3772 | halt: 
3773 | halt: 
3774 | halt: 
3775 | halt: 
3776 | halt: 
3777 | halt: 
3778 | halt: 
3779 | halt: 
3780 | halt: 
3781 | halt: 
3782 | halt: 
3783 | halt: 
3784 | halt: 
3785 | halt: 
3786 | halt: 
3787 | halt: 
3788 | halt: 
3789 | halt: 
3790 | halt: 
3791 | halt: 
3792 | halt: 
3793 | halt: 
3794 | halt: 
3795 | halt: 
3796 | halt: 
3797 | halt: 
3798 | halt: 
3799 | halt: 
3800 | halt: 
3801 | halt: 
3802 | halt: 
3803 | halt: 
3804 | halt: 
3805 | halt: 
3806 | halt: 
3807 | halt: 
3808 | halt: 
3809 | halt: 
3810 | halt: 
3811 | halt: 
3812 | halt: 
3813 | halt: 
3814 | halt: 
3815 | halt: 
3816 | halt: 
3817 | halt: 
3818 | halt: 
3819 | halt: 
3820 | halt: 
3821 | halt: 
3822 | halt: 
3823 | halt: 
3824 | halt: 
3825 | halt: 
3826 | halt: 
3827 | halt: 
3828 | halt: 
3829 | halt: 
3830 | halt: 
3831 | halt: 
3832 | halt: 
3833 | halt: 
3834 | halt: 
3835 | halt: 
3836 | halt: 
3837 | halt: 
3838 | halt: 
3839 | halt: 
3840 | halt: 
3841 | halt: 
3842 | halt: 
3843 | halt: 
3844 | halt: 
3845 | halt: 
3846 | halt: 
3847 | halt: 
3848 | halt: 
3849 | halt: 
3850 | halt: 
3851 | halt: 
3852 | halt: 
3853 | halt: 
3854 | halt: 
3855 | halt: 
3856 | halt: 
3857 | halt: 
3858 | halt: 
3859 | halt: 
3860 | halt: 
3861 | halt: 
3862 | halt: 
3863 | halt: 
3864 | halt: 
3865 | halt: 
3866 | halt: 
3867 | halt: 
3868 | halt: 
3869 | halt: 
3870 | halt: 
3871 | halt: 
3872 | halt: 
3873 | halt: 
3874 | halt: 
3875 | halt: 
3876 | halt: 
3877 | halt: 
3878 | halt: 
3879 | halt: 
3880 | halt: 
3881 | halt: 
3882 | halt: 
3883 | halt: 
3884 | halt: 
3885 | halt: 
3886 | halt: 
3887 | halt: 
3888 | halt: 
3889 | halt: 
3890 | halt: 
3891 | halt: 
3892 | halt: 
3893 | halt: 
3894 | halt: 
3895 | halt: 
3896 | halt: 
3897 | halt: 
3898 | halt: 
3899 | halt: 
3900 | halt: 
3901 | halt: 
3902 | halt: 
3903 | halt: 
3904 | halt: 
3905 | halt: 
3906 | halt: 
3907 | halt: 
3908 | halt: 
3909 | halt: 
3910 | halt: 
3911 | halt: 
3912 | halt: 
3913 | halt: 
3914 | halt: 
3915 | halt: 
3916 | halt: 
3917 | halt: 
3918 | halt: 
3919 | halt: 
3920 | halt: 
3921 | halt: 
3922 | halt: 
3923 | halt: 
3924 | halt: 
3925 | halt: 
3926 | halt: 
3927 | halt: 
3928 | halt: 
3929 | halt: 
3930 | halt: 
3931 | halt: 
3932 | halt: 
3933 | halt: 
3934 | halt: 
3935 | halt: 
3936 | halt: 
3937 | halt: 
3938 | halt: 
3939 | halt: 
3940 | halt: 
3941 | halt: 
3942 | halt: 
3943 | halt: 
3944 | halt: 
3945 | halt: 
3946 | halt: 
3947 | halt: 
3948 | halt: 
3949 | halt: 
3950 | halt: 
3951 | halt: 
3952 | halt: 
3953 | halt: 
3954 | halt: 
3955 | halt: 
3956 | halt: 
3957 | halt: 
3958 | halt: 
3959 | halt: 
3960 | halt: 
3961 | halt: 
3962 | halt: 
3963 | halt: 
3964 | halt: 
3965 | halt: 
3966 | halt: 
3967 | halt: 
3968 | halt: 
3969 | halt: 
3970 | halt: 
3971 | halt: 
3972 | halt: 
3973 | halt: 
3974 | halt: 
3975 | halt: 
3976 | halt: 
3977 | halt: 
3978 | halt: 
3979 | halt: 
3980 | halt: 
3981 | halt: 
3982 | halt: 
3983 | halt: 
3984 | halt: 
3985 | halt: 
3986 | halt: 
3987 | halt: 
3988 | halt: 
3989 | halt: 
3990 | halt: 
3991 | halt: 
3992 | halt: 
3993 | halt: 
3994 | halt: 
3995 | halt: 
3996 | halt: 
3997 | halt: 
3998 | halt: 
3999 | halt: 
4000 | halt: 
4001 | halt: 
4002 | halt: 
4003 | halt: 
4004 | halt: 
4005 | halt: 
4006 | halt: 
4007 | halt: 
4008 | halt: 
4009 | halt: 
4010 | halt: 
4011 | halt: 
4012 | halt: 
4013 | halt: 
4014 | halt: 
4015 | halt: 
4016 | halt: 
4017 | halt: 
4018 | halt: 
4019 | halt: 
4020 | halt: 
4021 | halt: 
4022 | halt: 
4023 | halt: 
4024 | halt: 
4025 | halt: 
4026 | halt: 
4027 | halt: 
4028 | halt: 
4029 | halt: 
4030 | halt: 
4031 | halt: 
4032 | halt: 
4033 | halt: 
4034 | halt: 
4035 | halt: 
4036 | halt: 
4037 | halt: 
4038 | halt: 
4039 | push: push(0);
4040 | halt: 
4041 | halt: 
4042 | halt: 
4043 | halt: 
4044 | halt: 
4045 | halt: 
4046 | halt: 
4047 | halt: 
4048 | halt: 
4049 | halt: 
4050 | halt: 
4051 | halt: 
4052 | halt: 
4053 | halt: 
4054 | halt: 
4055 | halt: 
4056 | halt: 
4057 | gt: if (0 > 0) { 0 == 1 } else { 0 == 0 }
4058 | halt: 
4059 | halt: 
4060 | halt: 
4061 | halt: 
4062 | halt: 
4063 | halt: 
4064 | halt: 
4065 | halt: 
4066 | halt: 
4067 | halt: 
4068 | pop: 0 = pop();
4069 | halt: 
4070 | halt: 
4071 | halt: 
4072 | halt: 
4073 | halt: 
4074 | halt: 
4075 | halt: 
4076 | halt: 
4077 | halt: 
4078 | halt: 
4079 | halt: 
4080 | halt: 
4081 | halt: 
4082 | halt: 
4083 | halt: 
4084 | halt: 
4085 | halt: 
4086 | halt: 
4087 | halt: 
4088 | halt: 
4089 | halt: 
4090 | halt: 
4091 | halt: 
4092 | halt: 
4093 | halt: 
4094 | halt: 
4095 | halt: 
4096 | halt: 
4097 | halt: 
4098 | halt: 
4099 | halt: 
4100 | halt: 
4101 | halt: 
4102 | halt: 
4103 | halt: 
4104 | halt: 
4105 | halt: 
4106 | halt: 
4107 | halt: 
4108 | halt: 
4109 | halt: 
4110 | halt: 
4111 | halt: 
4112 | halt: 
4113 | halt: 
4114 | halt: 
4115 | halt: 
4116 | halt: 
4117 | halt: 
4118 | halt: 
4119 | halt: 
4120 | halt: 
4121 | halt: 
4122 | halt: 
4123 | halt: 
4124 | halt: 
4125 | halt: 
4126 | halt: 
4127 | halt: 
4128 | halt: 
4129 | halt: 
4130 | halt: 
4131 | halt: 
4132 | halt: 
4133 | halt: 
4134 | halt: 
4135 | halt: 
4136 | halt: 
4137 | halt: 
4138 | halt: 
4139 | halt: 
4140 | halt: 
4141 | halt: 
4142 | halt: 
4143 | halt: 
4144 | halt: 
4145 | halt: 
4146 | halt: 
4147 | halt: 
4148 | halt: 
4149 | halt: 
4150 | halt: 
4151 | halt: 
4152 | halt: 
4153 | halt: 
4154 | halt: 
4155 | halt: 
4156 | halt: 
4157 | halt: 
4158 | halt: 
4159 | halt: 
4160 | halt: 
4161 | halt: 
4162 | halt: 
4163 | halt: 
4164 | halt: 
4165 | halt: 
4166 | halt: 
4167 | halt: 
4168 | halt: 
4169 | halt: 
4170 | halt: 
4171 | halt: 
4172 | halt: 
4173 | halt: 
4174 | halt: 
4175 | halt: 
4176 | halt: 
4177 | halt: 
4178 | halt: 
4179 | halt: 
4180 | halt: 
4181 | halt: 
4182 | halt: 
4183 | halt: 
4184 | halt: 
4185 | halt: 
4186 | halt: 
4187 | halt: 
4188 | halt: 
4189 | halt: 
4190 | halt: 
4191 | halt: 
4192 | halt: 
4193 | halt: 
4194 | halt: 
4195 | halt: 
4196 | halt: 
4197 | halt: 
4198 | halt: 
4199 | add: 0 = 0 + 0
4200 | halt: 
4201 | halt: 
4202 | halt: 
4203 | halt: 
4204 | halt: 
4205 | halt: 
4206 | halt: 
4207 | halt: 
4208 | halt: 
4209 | mult: 0 = 0 * 0
4210 | halt: 
4211 | halt: 
4212 | halt: 
4213 | halt: 
4214 | halt: 
4215 | halt: 
4216 | halt: 
4217 | halt: 
4218 | halt: 
4219 | halt: 
4220 | halt: 
4221 | halt: 
4222 | halt: 
4223 | halt: 
4224 | halt: 
4225 | halt: 
4226 | halt: 
4227 | halt: 
4228 | halt: 
4229 | set: 0 = 0
4230 | halt: 
4231 | halt: 
4232 | halt: 
4233 | halt: 
4234 | halt: 
4235 | halt: 
4236 | halt: 
4237 | halt: 
4238 | halt: 
4239 | halt: 
4240 | halt: 
4241 | halt: 
4242 | halt: 
4243 | jmp: go to memory[1]
4244 | halt: 
4245 | jmp: go to memory[0]
4246 | halt: 
4247 | halt: 
4248 | halt: 
4249 | halt: 
4250 | halt: 
4251 | halt: 
4252 | pop: 0 = pop();
4253 | halt: 
4254 | halt: 
4255 | halt: 
4256 | halt: 
4257 | halt: 
4258 | halt: 
4259 | halt: 
4260 | jmp: go to memory[0]
4261 | halt: 
4262 | set: 0 = 0
4263 | halt: 
4264 | halt: 
4265 | halt: 
4266 | halt: 
4267 | halt: 
4268 | halt: 
4269 | halt: 
4270 | halt: 
4271 | halt: 
4272 | halt: 
4273 | halt: 
4274 | halt: 
4275 | halt: 
4276 | halt: 
4277 | halt: 
4278 | halt: 
4279 | halt: 
4280 | halt: 
4281 | halt: 
4282 | halt: 
4283 | halt: 
4284 | halt: 
4285 | halt: 
4286 | halt: 
4287 | halt: 
4288 | halt: 
4289 | halt: 
4290 | halt: 
4291 | halt: 
4292 | halt: 
4293 | halt: 
4294 | halt: 
4295 | halt: 
4296 | halt: 
4297 | halt: 
4298 | halt: 
4299 | halt: 
4300 | halt: 
4301 | halt: 
4302 | halt: 
4303 | halt: 
4304 | halt: 
4305 | halt: 
4306 | halt: 
4307 | halt: 
4308 | halt: 
4309 | halt: 
4310 | halt: 
4311 | halt: 
4312 | halt: 
4313 | halt: 
4314 | halt: 
4315 | halt: 
4316 | halt: 
4317 | halt: 
4318 | halt: 
4319 | halt: 
4320 | halt: 
4321 | halt: 
4322 | halt: 
4323 | halt: 
4324 | halt: 
4325 | halt: 
4326 | set: 0 = 0
4327 | halt: 
4328 | halt: 
4329 | halt: 
4330 | halt: 
4331 | halt: 
4332 | halt: 
4333 | halt: 
4334 | halt: 
4335 | halt: 
4336 | halt: 
4337 | halt: 
4338 | halt: 
4339 | halt: 
4340 | halt: 
4341 | halt: 
4342 | halt: 
4343 | set: 0 = 10
4344 | halt: 
4345 | halt: 
4346 | halt: 
4347 | halt: 
4348 | halt: 
4349 | halt: 
4350 | halt: 
4351 | halt: 
4352 | halt: 
4353 | halt: 
4354 | halt: 
4355 | halt: 
4356 | halt: 
4357 | halt: 
4358 | halt: 
4359 | halt: 
4360 | halt: 
4361 | halt: 
4362 | halt: 
4363 | halt: 
4364 | halt: 
4365 | halt: 
4366 | halt: 
4367 | halt: 
4368 | halt: 
4369 | halt: 
4370 | halt: 
4371 | halt: 
4372 | halt: 
4373 | halt: 
4374 | halt: 
4375 | halt: 
4376 | halt: 
4377 | halt: 
4378 | halt: 
4379 | halt: 
4380 | halt: 
4381 | halt: 
4382 | halt: 
4383 | pop: 62 = pop();
4384 | set: 0 = 4832
4385 | push: push(0);
4386 | halt: 
4387 | halt: 
4388 | halt: 
4389 | halt: 
4390 | halt: 
4391 | halt: 
4392 | halt: 
4393 | halt: 
4394 | mult: 64 = 73 * 72
4395 | jmp: go to memory[0]
4396 | gt: if (64 > 0) { 0 == 1 } else { 0 == 0 }
4397 | halt: 
4398 | halt: 
4399 | halt: 
4400 | halt: 
4401 | halt: 
4402 | halt: 
4403 | halt: 
4404 | halt: 
4405 | halt: 
4406 | halt: 
4407 | halt: 
4408 | halt: 
4409 | halt: 
4410 | jt: if (0 == 0 { go to 0 }
4411 | halt: 
4412 | pop: 0 = pop();
4413 | eq: if (r23792 == 26) { 0 == 1 } else { 0 == 0 }
4414 | halt: 
4415 | halt: 
4416 | halt: 
4417 | halt: 
4418 | halt: 
4419 | halt: 
4420 | halt: 
4421 | halt: 
4422 | halt: 
4423 | halt: 
4424 | halt: 
4425 | wmem: memory[0] = 0
4426 | halt: 
4427 | set: 0 = 5
4428 | halt: 
4429 | halt: 
4430 | halt: 
4431 | halt: 
4432 | halt: 
4433 | halt: 
4434 | halt: 
4435 | halt: 
4436 | halt: 
4437 | halt: 
4438 | halt: 
4439 | halt: 
4440 | halt: 
4441 | halt: 
4442 | halt: 
4443 | halt: 
4444 | halt: 
4445 | halt: 
4446 | halt: 
4447 | halt: 
4448 | set: 0 = 6
4449 | halt: 
4450 | halt: 
4451 | halt: 
4452 | halt: 
4453 | halt: 
4454 | halt: 
4455 | halt: 
4456 | halt: 
4457 | halt: 
4458 | halt: 
4459 | halt: 
4460 | halt: 
4461 | halt: 
4462 | halt: 
4463 | halt: 
4464 | halt: 
4465 | push: push(0);
4466 | jmp: go to memory[0]
4467 | halt: 
4468 | halt: 
4469 | halt: 
4470 | halt: 
4471 | halt: 
4472 | halt: 
4473 | halt: 
4474 | halt: 
4475 | halt: 
4476 | halt: 
4477 | halt: 
4478 | halt: 
4479 | jt: if (0 == 0 { go to 0 }
4480 | halt: 
4481 | eq: if (4 == 0) { 0 == 1 } else { 0 == 0 }
4482 | halt: 
4483 | halt: 
4484 | halt: 
4485 | halt: 
4486 | halt: 
4487 | halt: 
4488 | halt: 
4489 | halt: 
4490 | halt: 
4491 | halt: 
4492 | halt: 
4493 | halt: 
4494 | halt: 
4495 | halt: 
4496 | halt: 
4497 | eq: if (0 == 0) { 0 == 1 } else { 0 == 0 }
4498 | halt: 
4499 | eq: if (26456 == 29) { 0 == 1 } else { 0 == 0 }
4500 | halt: 
4501 | halt: 
4502 | halt: 
4503 | halt: 
4504 | or: 0 = 0 or 0
4505 | halt: 
4506 | halt: 
4507 | halt: 
4508 | halt: 
4509 | or: 0 = 0 or 0
4510 | halt: 
4511 | halt: 
4512 | halt: 
4513 | halt: 
4514 | halt: 
4515 | halt: 
4516 | halt: 
4517 | halt: 
4518 | halt: 
4519 | call: push(32062);
go to memory[0]
4520 | halt: 
4521 | halt: 
4522 | halt: 
4523 | halt: 
4524 | halt: 
4525 | halt: 
4526 | call: push(32082);
go to memory[0]
4527 | halt: 
4528 | halt: 
4529 | halt: 
4530 | halt: 
4531 | halt: 
4532 | halt: 
4533 | halt: 
4534 | halt: 
4535 | halt: 
4536 | halt: 
4537 | halt: 
4538 | halt: 
4539 | halt: 
4540 | halt: 
4541 | halt: 
4542 | halt: 
4543 | halt: 
4544 | halt: 
4545 | halt: 
4546 | halt: 
4547 | halt: 
4548 | halt: 
4549 | halt: 
4550 | halt: 
4551 | halt: 
4552 | halt: 
4553 | pop: 0 = pop();
4554 | halt: 
4555 | halt: 
4556 | halt: 
4557 | set: 0 = 0
4558 | halt: 
4559 | halt: 
4560 | halt: 
4561 | halt: 
4562 | halt: 
4563 | set: 0 = 0
4564 | halt: 
4565 | halt: 
4566 | halt: 
4567 | halt: 
4568 | set: 0 = 0
4569 | halt: 
4570 | halt: 
4571 | halt: 
4572 | halt: 
4573 | halt: 
4574 | halt: 
4575 | halt: 
4576 | push: push(0);
4577 | halt: 
4578 | halt: 
4579 | halt: 
4580 | set: 0 = 0
4581 | halt: 
4582 | halt: 
4583 | halt: 
4584 | halt: 
4585 | halt: 
4586 | set: 0 = 0
4587 | halt: 
4588 | halt: 
4589 | halt: 
4590 | halt: 
4591 | halt: 
4592 | halt: 
4593 | halt: 
4594 | halt: 
4595 | halt: 
4596 | halt: 
4597 | halt: 
4598 | set: 0 = 0
4599 | halt: 
4600 | halt: 
4601 | halt: 
4602 | halt: 
4603 | halt: 
4604 | halt: 
4605 | halt: 
4606 | halt: 
4607 | halt: 
4608 | halt: 
4609 | halt: 
4610 | halt: 
4611 | halt: 
4612 | halt: 
4613 | halt: 
4614 | halt: 
4615 | halt: 
4616 | halt: 
4617 | halt: 
4618 | halt: 
4619 | set: 0 = 0
4620 | halt: 
4621 | halt: 
4622 | halt: 
4623 | halt: 
4624 | halt: 
4625 | halt: 
4626 | halt: 
4627 | halt: 
4628 | halt: 
4629 | halt: 
4630 | halt: 
4631 | halt: 
4632 | halt: 
4633 | halt: 
4634 | halt: 
4635 | halt: 
4636 | halt: 
4637 | halt: 
4638 | halt: 
4639 | halt: 
4640 | halt: 
4641 | halt: 
4642 | halt: 
4643 | halt: 
4644 | halt: 
4645 | halt: 
4646 | halt: 
4647 | halt: 
4648 | halt: 
4649 | halt: 
4650 | halt: 
4651 | halt: 
4652 | halt: 
4653 | push: push(0);
4654 | halt: 
4655 | halt: 
4656 | halt: 
4657 | halt: 
4658 | halt: 
4659 | halt: 
4660 | halt: 
4661 | halt: 
4662 | halt: 
4663 | halt: 
4664 | halt: 
4665 | or: 0 = 0 or 0
4666 | halt: 
4667 | halt: 
4668 | halt: 
4669 | halt: 
4670 | halt: 
4671 | halt: 
4672 | halt: 
4673 | halt: 
4674 | halt: 
4675 | halt: 
4676 | halt: 
4677 | halt: 
4678 | halt: 
4679 | halt: 
4680 | halt: 
4681 | halt: 
4682 | halt: 
4683 | halt: 
4684 | halt: 
4685 | halt: 
4686 | halt: 
4687 | halt: 
4688 | halt: 
4689 | halt: 
4690 | halt: 
4691 | halt: 
4692 | halt: 
4693 | halt: 
4694 | halt: 
4695 | halt: 
4696 | halt: 
4697 | halt: 
4698 | halt: 
4699 | halt: 
4700 | halt: 
4701 | halt: 
4702 | halt: 
4703 | halt: 
4704 | halt: 
4705 | halt: 
4706 | halt: 
4707 | halt: 
4708 | halt: 
4709 | halt: 
4710 | halt: 
4711 | halt: 
4712 | halt: 
4713 | halt: 
4714 | halt: 
4715 | halt: 
4716 | halt: 
4717 | wmem: memory[0] = 0
4718 | halt: 
4719 | halt: 
4720 | halt: 
4721 | push: push(0);
4722 | halt: 
4723 | halt: 
4724 | halt: 
4725 | halt: 
4726 | halt: 
4727 | halt: 
4728 | halt: 
4729 | halt: 
4730 | halt: 
4731 | halt: 
4732 | halt: 
4733 | halt: 
4734 | halt: 
4735 | halt: 
4736 | halt: 
4737 | halt: 
4738 | halt: 
4739 | halt: 
4740 | halt: 
4741 | halt: 
4742 | halt: 
4743 | halt: 
4744 | halt: 
4745 | halt: 
4746 | halt: 
4747 | halt: 
4748 | halt: 
4749 | halt: 
4750 | halt: 
4751 | halt: 
4752 | halt: 
4753 | halt: 
4754 | halt: 
4755 | halt: 
4756 | halt: 
4757 | halt: 
4758 | halt: 
4759 | halt: 
4760 | halt: 
4761 | halt: 
4762 | halt: 
4763 | halt: 
4764 | halt: 
4765 | halt: 
4766 | eq: if (0 == 0) { 0 == 1 } else { 0 == 0 }
4767 | halt: 
4768 | halt: 
4769 | halt: 
4770 | halt: 
4771 | halt: 
4772 | gt: if (0 > 0) { 0 == 1 } else { 0 == 0 }
4773 | halt: 
4774 | halt: 
4775 | halt: 
4776 | halt: 
4777 | halt: 
4778 | halt: 
4779 | halt: 
4780 | halt: 
4781 | halt: 
4782 | halt: 
4783 | halt: 
4784 | halt: 
4785 | halt: 
4786 | halt: 
4787 | halt: 
4788 | halt: 
4789 | halt: 
4790 | halt: 
4791 | halt: 
4792 | halt: 
4793 | halt: 
4794 | halt: 
4795 | halt: 
4796 | halt: 
4797 | halt: 
4798 | halt: 
4799 | halt: 
4800 | halt: 
4801 | halt: 
4802 | halt: 
4803 | halt: 
4804 | halt: 
4805 | halt: 
4806 | halt: 
4807 | halt: 
4808 | halt: 
4809 | halt: 
4810 | halt: 
4811 | halt: 
4812 | halt: 
4813 | halt: 
4814 | halt: 
4815 | halt: 
4816 | halt: 
4817 | halt: 
4818 | halt: 
4819 | halt: 
4820 | halt: 
4821 | halt: 
4822 | halt: 
4823 | halt: 
4824 | halt: 
4825 | halt: 
4826 | halt: 
4827 | halt: 
4828 | halt: 
4829 | halt: 
4830 | halt: 
4831 | mult: 0 = 0 * 0
4832 | halt: 
4833 | halt: 
4834 | halt: 
4835 | halt: 
4836 | halt: 
4837 | halt: 
4838 | halt: 
4839 | halt: 
4840 | halt: 
4841 | halt: 
4842 | halt: 
4843 | halt: 
4844 | halt: 
4845 | halt: 
4846 | halt: 
4847 | halt: 
4848 | halt: 
4849 | halt: 
4850 | halt: 
4851 | halt: 
4852 | halt: 
